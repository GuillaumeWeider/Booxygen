<h2 class="page-header">Gamedev Framework (gf)</h2>

<p><b>Gamedev Framework (gf)</b> is a framework to build 2D games in C++11. It is based on <a
        href="https://www.libsdl.org/">SDL</a> and <a href="https://www.khronos.org/opengles/2_X/">OpenGL ES
    2.0</a>, and presents an API that is very similar to the graphics module of <a
        href="http://www.sfml-dev.org/">SFML</a> (see <a class="el" href="differences_with_sfml.html">Differences
    with SFML</a>) with additional features. It is <em>not</em> a <a
        href="https://en.wikipedia.org/wiki/Game_engine">game engine</a>, it is more something like a
    framework, similar to <a href="https://libgdx.badlogicgames.com/">libGDX</a> in the Java world.</p>
<p>Gamedev Framework (gf) is licensed under the terms and conditions of the <a
        href="https://opensource.org/licenses/Zlib">zlib/libpng license</a>.</p>

<h3>First example</h3>
<pre>
            <span class="preprocessor">#include &lt;gf/Event.h&gt;
            #include &lt;gf/Font.h&gt;
            #include &lt;gf/RenderWindow.h&gt;
            #include &lt;gf/Sprite.h&gt;
            #include &lt;gf/Text.h&gt;
            #include &lt;gf/Window.h&gt;</span>
            int main() {
              <span class="comment">// Create the main window and the renderer</span>
              <a href="#">gf::Window</a> window(<span class="stringliteral">"Example"</span>, { 640, 480 });
              <a href="#">gf::RenderWindow</a> renderer(window);
              <span class="comment">// Load a sprite to display</span>
              <a href="#">gf::Texture</a> texture;
              <span class="keywordflow">if</span> (!texture.<a href="#">loadFromFile</a>(<span class="stringliteral">"sprite.png"</span>)) {
                <span class="keywordflow">return</span> EXIT_FAILURE;
              }
              <a href="#">gf::Sprite</a> sprite(texture);
              sprite.<a href="#">setPosition</a>({ 300, 200 });
              <span class="comment">// Create a graphical text to display</span>
              <a href="#">gf::Font</a> font;
              <span class="keywordflow">if</span> (!font.<a href="#">loadFromFile</a>(<span class="stringliteral">"DroidSans.ttf"</span>)) {
                <span class="keywordflow">return</span> EXIT_FAILURE;
              }
              <a href="#">gf::Text</a> text(<span class="stringliteral">"Hello gf!"</span>, font, 50);
              text.setPosition({ 100, 100 });
              renderer.<a href="#">clear</a>(<a href="#">gf::Color::White</a>);
              <span class="comment">// Start the game loop</span>
              <span class="keywordflow">while</span> (window.<a href="#">isOpen</a>()) {
                <span class="comment">// Process events</span>
                <a href="#">gf::Event</a> event;
                <span class="keywordflow">while</span> (window.<a href="#">pollEvent</a>(event)) {
                  <span class="keywordflow">switch</span> (event.<a href="#">type</a>) {
                    <span class="keywordflow">case</span> <a href="#">gf::EventType::Closed</a>:
                      window.<a href="#">close</a>();
                      <span class="keywordflow">break</span>;
                    <span class="keywordflow">default</span>:
                      <span class="keywordflow">break</span>;
                  }
                }
                <span class="comment">// Draw the entities</span>
                renderer.<a href="#">clear</a>();
                renderer.<a href="#">draw</a>(sprite);
                renderer.<a href="#">draw</a>(text);
                renderer.<a href="#">display</a>();
              }
              <span class="keywordflow">return</span> 0;
            }
          </pre>

<h3>Source</h3>
<p>The source code is available on <a href="https://github.com/GamedevFramework/gf">github</a>.</p>
