<h2 class="page-header">{{ compound.name }} Class Reference</h2>
<ol class="breadcrumb">
    {% for parent in compound.sub_xml.compounddef[0].basecompoundref %}
    <li><a href="{{ parent.refid }}.html">{{ parent.content }}</a></li>
    {% endfor %}
    <li class="active">{{ compound.name }}</li>
</ol>

{% unless compound.sub_xml.compounddef[0].briefdescription.para.blank? or
compound.sub_xml.compounddef[0].detaileddescription.para.blank? %}
<h3>Description</h3>
<p>{{ compound.sub_xml.compounddef[0].briefdescription[0].para }}</p>
<p>{{ compound.sub_xml.compounddef[0].detaileddescription[0].para }}</p>
{% endunless %}

{% for section in compound.sub_xml.compounddef[0].sectiondef %}
{% unless section.kind contains 'private-' %}

{% if section.kind == 'public-func' %}
<h3>Public Member Functions</h3>
{% else %}
<h4>{{ section.header }}</h4>
{% endif %}

<table class="table">
    {% for memberdef in section.memberdef %}
    <tr>
        <td class="col-md-1">
            {% assign type = memberdef.definition[0] | split: " " %}
            {% for word in type %}
            {% unless forloop.last == true %}
            {{ word }}
            {% endunless %}
            {% endfor %}
        </td>
        <td class="col-md-4"><a href="#">{{ memberdef.name[0] }}</a> {{ memberdef.argsstring[0] }}
            <br><span>{{ memberdef.briefdescription[0].para[0] }}</span></td>
    </tr>
    {% endfor %}
</table>
{% endunless %}
{% endfor %}

<!--<h3>Constructor and Destructor documentation</h3>

<div class="panel panel-default">
    <div class="panel-heading">
        <h3 class="panel-title">gf::KeycodeKeyControl::KeycodeKeyControl (<a href="#"><b>KeyCode</b></a>
            code)</h3>
    </div>
    <div class="panel-body">
        <p>Construct a key control.</p>
        <p><b>Parameters</b></p>
        <p><span><strong>code</strong></span> The keycode of the key</p>
    </div>
</div>

<h3>Member Function</h3>

<div class="panel panel-default">
    <div class="panel-heading">
        <h3 class="panel-title">virtual void gf::KeycodeKeyControl::processEvent (const <a
                href="#"><b>Event</b></a> &event)</h3>
    </div>
    <div class="panel-body">
        <p>Update the state of the control thanks to an event.</p>
        <p><b>Parameters</b></p>
        <p><span><strong>event</strong></span> The event to update the control</p>
        <p><br><b>See also</b></p>
        <p><a href="#">Action::processEvent</a></p>
        <p>Implements <a href="#">gf::Control</a>.</p>
    </div>
</div>-->

