<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="classgf_1_1_action_container" kind="class" language="C++" prot="public">
    <compoundname>gf::ActionContainer</compoundname>
    <includes refid="_action_8h" local="no">gf/Action.h</includes>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classgf_1_1_action_container_1a3a0df55d9eb01f4cdcdf5b933c69b69c" prot="private" static="no" mutable="no">
        <type>std::vector&lt; <ref refid="classgf_1_1_action" kindref="compound">Action</ref> * &gt;</type>
        <definition>std::vector&lt;Action*&gt; gf::ActionContainer::m_actions</definition>
        <argsstring></argsstring>
        <name>m_actions</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jbernard/Workshop/gf/versions/include/gf/Action.h" line="285" column="1" bodyfile="/home/jbernard/Workshop/gf/versions/include/gf/Action.h" bodystart="285" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classgf_1_1_action_container_1a523c6281eded46899531222db4b71b2f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void gf::ActionContainer::addAction</definition>
        <argsstring>(Action &amp;action)</argsstring>
        <name>addAction</name>
        <param>
          <type><ref refid="classgf_1_1_action" kindref="compound">Action</ref> &amp;</type>
          <declname>action</declname>
        </param>
        <briefdescription>
<para>Add an action. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>action</parametername>
</parameternamelist>
<parameterdescription>
<para>The action to add to the set. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jbernard/Workshop/gf/versions/include/gf/Action.h" line="240" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classgf_1_1_action_container_1ab8fc1bfad29a9723aa1d41203e1763b2" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool gf::ActionContainer::hasAction</definition>
        <argsstring>(const std::string &amp;name) const</argsstring>
        <name>hasAction</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>name</declname>
        </param>
        <briefdescription>
<para>Check if an action exists. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>name</parametername>
</parameternamelist>
<parameterdescription>
<para>The name of the action </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>True if there is an action with that name </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jbernard/Workshop/gf/versions/include/gf/Action.h" line="248" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classgf_1_1_action_container_1a050d08daa4f65d281d98aa578cdd228e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classgf_1_1_action" kindref="compound">Action</ref> &amp;</type>
        <definition>Action&amp; gf::ActionContainer::getAction</definition>
        <argsstring>(const std::string &amp;name)</argsstring>
        <name>getAction</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>name</declname>
        </param>
        <briefdescription>
<para>Get an action thanks to its name. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>name</parametername>
</parameternamelist>
<parameterdescription>
<para>The name of the action </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The action with that name </para></simplesect>
<parameterlist kind="exception"><parameteritem>
<parameternamelist>
<parametername>std::runtime_error</parametername>
</parameternamelist>
<parameterdescription>
<para>If the action is not found </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jbernard/Workshop/gf/versions/include/gf/Action.h" line="257" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classgf_1_1_action_container_1a8f472349c92360202738f5c31c0a8869" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const <ref refid="classgf_1_1_action" kindref="compound">Action</ref> &amp;</type>
        <definition>const Action&amp; gf::ActionContainer::getAction</definition>
        <argsstring>(const std::string &amp;name) const</argsstring>
        <name>getAction</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>name</declname>
        </param>
        <briefdescription>
<para>Get an action thanks to its name. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>name</parametername>
</parameternamelist>
<parameterdescription>
<para>The name of the action </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The action with that name </para></simplesect>
<parameterlist kind="exception"><parameteritem>
<parameternamelist>
<parametername>std::runtime_error</parametername>
</parameternamelist>
<parameterdescription>
<para>If the action is not found </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jbernard/Workshop/gf/versions/include/gf/Action.h" line="266" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classgf_1_1_action_container_1a034be36a032acdaf1367770751cbfd30" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void gf::ActionContainer::processEvent</definition>
        <argsstring>(const Event &amp;event)</argsstring>
        <name>processEvent</name>
        <param>
          <type>const <ref refid="structgf_1_1_event" kindref="compound">Event</ref> &amp;</type>
          <declname>event</declname>
        </param>
        <briefdescription>
<para>Update all the actions. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>event</parametername>
</parameternamelist>
<parameterdescription>
<para>the event to update the actions.</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="see"><para><ref refid="classgf_1_1_action" kindref="compound">Action</ref>;:<ref refid="classgf_1_1_action_container_1a034be36a032acdaf1367770751cbfd30" kindref="member">processEvent()</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jbernard/Workshop/gf/versions/include/gf/Action.h" line="275" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classgf_1_1_action_container_1ae645f2f827c81ba97a4ce2208e4370d2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void gf::ActionContainer::reset</definition>
        <argsstring>()</argsstring>
        <name>reset</name>
        <briefdescription>
<para>Reset all the actions. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="classgf_1_1_action_1ad5e4d6c50596ad67356eec888dc095d0" kindref="member">Action::reset()</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jbernard/Workshop/gf/versions/include/gf/Action.h" line="282" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>A set of actions. </para>    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="/home/jbernard/Workshop/gf/versions/include/gf/Action.h" line="233" column="1" bodyfile="/home/jbernard/Workshop/gf/versions/include/gf/Action.h" bodystart="233" bodyend="286"/>
    <listofallmembers>
      <member refid="classgf_1_1_action_container_1a523c6281eded46899531222db4b71b2f" prot="public" virt="non-virtual"><scope>gf::ActionContainer</scope><name>addAction</name></member>
      <member refid="classgf_1_1_action_container_1a050d08daa4f65d281d98aa578cdd228e" prot="public" virt="non-virtual"><scope>gf::ActionContainer</scope><name>getAction</name></member>
      <member refid="classgf_1_1_action_container_1a8f472349c92360202738f5c31c0a8869" prot="public" virt="non-virtual"><scope>gf::ActionContainer</scope><name>getAction</name></member>
      <member refid="classgf_1_1_action_container_1ab8fc1bfad29a9723aa1d41203e1763b2" prot="public" virt="non-virtual"><scope>gf::ActionContainer</scope><name>hasAction</name></member>
      <member refid="classgf_1_1_action_container_1a3a0df55d9eb01f4cdcdf5b933c69b69c" prot="private" virt="non-virtual"><scope>gf::ActionContainer</scope><name>m_actions</name></member>
      <member refid="classgf_1_1_action_container_1a034be36a032acdaf1367770751cbfd30" prot="public" virt="non-virtual"><scope>gf::ActionContainer</scope><name>processEvent</name></member>
      <member refid="classgf_1_1_action_container_1ae645f2f827c81ba97a4ce2208e4370d2" prot="public" virt="non-virtual"><scope>gf::ActionContainer</scope><name>reset</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
