<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="classgf_1_1_singleton" kind="class" language="C++" prot="public">
    <compoundname>gf::Singleton</compoundname>
    <includes refid="_singleton_8h" local="no">gf/Singleton.h</includes>
    <templateparamlist>
      <param>
        <type>typename</type>
        <declname>T</declname>
        <defname>T</defname>
      </param>
    </templateparamlist>
      <sectiondef kind="friend">
      <memberdef kind="friend" id="classgf_1_1_singleton_1a84fffc568ea16fb3deea0fdb5fa41f6c" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>friend class</type>
        <definition>friend class SingletonStorage&lt; T &gt;</definition>
        <argsstring></argsstring>
        <name>SingletonStorage&lt; T &gt;</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jbernard/Workshop/gf/versions/include/gf/Singleton.h" line="117" column="1" bodyfile="/home/jbernard/Workshop/gf/versions/include/gf/Singleton.h" bodystart="122" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classgf_1_1_singleton_1a7c393b997a98ad64ca5db90d5788ea48" prot="private" static="no" mutable="no">
        <type><ref refid="group__window_1gga795d7d5e2f2a4f38b16b95e0e78cb626ab9ece18c950afbfa6b0fdbfa4ff731d3" kindref="member">T</ref> *</type>
        <definition>T* gf::Singleton&lt; T &gt;::m_single</definition>
        <argsstring></argsstring>
        <name>m_single</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jbernard/Workshop/gf/versions/include/gf/Singleton.h" line="124" column="1" bodyfile="/home/jbernard/Workshop/gf/versions/include/gf/Singleton.h" bodystart="124" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classgf_1_1_singleton_1a73ee18033e64423035ae4bcc79e0d7b9" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>gf::Singleton&lt; T &gt;::Singleton</definition>
        <argsstring>()</argsstring>
        <name>Singleton</name>
        <briefdescription>
<para>Default constructor. </para>        </briefdescription>
        <detaileddescription>
<para>It initialize the underlying pointer to <computeroutput>nullptr</computeroutput>. The actual initialization is done when the storage is allocated. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jbernard/Workshop/gf/versions/include/gf/Singleton.h" line="65" column="1" bodyfile="/home/jbernard/Workshop/gf/versions/include/gf/Singleton.h" bodystart="65" bodyend="68"/>
      </memberdef>
      <memberdef kind="function" id="classgf_1_1_singleton_1a31eeb9cb9e029fd8b0230172b4edd0fc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>gf::Singleton&lt; T &gt;::Singleton</definition>
        <argsstring>(const Singleton &amp;)=delete</argsstring>
        <name>Singleton</name>
        <param>
          <type>const <ref refid="classgf_1_1_singleton" kindref="compound">Singleton</ref> &amp;</type>
        </param>
        <briefdescription>
<para>Deleted copy constructor. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jbernard/Workshop/gf/versions/include/gf/Singleton.h" line="73" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classgf_1_1_singleton_1af28520c8fd1ee9686cbf82a9d2c8778f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>gf::Singleton&lt; T &gt;::Singleton</definition>
        <argsstring>(Singleton &amp;&amp;)=delete</argsstring>
        <name>Singleton</name>
        <param>
          <type><ref refid="classgf_1_1_singleton" kindref="compound">Singleton</ref> &amp;&amp;</type>
        </param>
        <briefdescription>
<para>Deleted move constructor. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jbernard/Workshop/gf/versions/include/gf/Singleton.h" line="78" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classgf_1_1_singleton_1a976cad168b3424b6560bfdf9fb35f90c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classgf_1_1_singleton" kindref="compound">Singleton</ref> &amp;</type>
        <definition>Singleton&amp; gf::Singleton&lt; T &gt;::operator=</definition>
        <argsstring>(const Singleton &amp;)=delete</argsstring>
        <name>operator=</name>
        <param>
          <type>const <ref refid="classgf_1_1_singleton" kindref="compound">Singleton</ref> &amp;</type>
        </param>
        <briefdescription>
<para>Deleted copy assignment. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jbernard/Workshop/gf/versions/include/gf/Singleton.h" line="82" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classgf_1_1_singleton_1a001396df5cb7e6f34290852905371d0b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classgf_1_1_singleton" kindref="compound">Singleton</ref> &amp;</type>
        <definition>Singleton&amp; gf::Singleton&lt; T &gt;::operator=</definition>
        <argsstring>(Singleton &amp;&amp;)=delete</argsstring>
        <name>operator=</name>
        <param>
          <type><ref refid="classgf_1_1_singleton" kindref="compound">Singleton</ref> &amp;&amp;</type>
        </param>
        <briefdescription>
<para>Deleted move assignment. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jbernard/Workshop/gf/versions/include/gf/Singleton.h" line="87" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classgf_1_1_singleton_1a64750c2b51b730fc9b6e9d7d02ae9c1a" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="group__window_1gga795d7d5e2f2a4f38b16b95e0e78cb626ab9ece18c950afbfa6b0fdbfa4ff731d3" kindref="member">T</ref> &amp;</type>
        <definition>T&amp; gf::Singleton&lt; T &gt;::operator()</definition>
        <argsstring>()</argsstring>
        <name>operator()</name>
        <briefdescription>
<para>Access the singleton. </para>        </briefdescription>
        <detaileddescription>
<para>The access of the singleton must be done after a storage has been provided. Otherwise, the behaviour is undefined (and may result in a crash).</para><para><simplesect kind="return"><para>a reference to the stored singleton </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jbernard/Workshop/gf/versions/include/gf/Singleton.h" line="98" column="1" bodyfile="/home/jbernard/Workshop/gf/versions/include/gf/Singleton.h" bodystart="98" bodyend="101"/>
      </memberdef>
      <memberdef kind="function" id="classgf_1_1_singleton_1abd1f8a08c55e9d63167c1fb36bf2528a" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void gf::Singleton&lt; T &gt;::reset</definition>
        <argsstring>() noexcept</argsstring>
        <name>reset</name>
        <briefdescription>
<para>Reset the singleton. </para>        </briefdescription>
        <detaileddescription>
<para>After a call to this function, the singleton must be accessed anymore. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jbernard/Workshop/gf/versions/include/gf/Singleton.h" line="108" column="1" bodyfile="/home/jbernard/Workshop/gf/versions/include/gf/Singleton.h" bodystart="108" bodyend="110"/>
      </memberdef>
      <memberdef kind="function" id="classgf_1_1_singleton_1ac84b0f64d5f463d3553e8fd2d9b6aabb" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool gf::Singleton&lt; T &gt;::isValid</definition>
        <argsstring>() const noexcept</argsstring>
        <name>isValid</name>
        <briefdescription>
<para>Check if the singleton has been initialized. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>True if the singleton is valid </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jbernard/Workshop/gf/versions/include/gf/Singleton.h" line="117" column="1" bodyfile="/home/jbernard/Workshop/gf/versions/include/gf/Singleton.h" bodystart="117" bodyend="119"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>A singleton that wraps a pointer provided by a storage. </para>    </briefdescription>
    <detaileddescription>
<para>This class should be used with a global variable. It acts as an access to a singleton which storage is provided by a gf::SingletonStorage&lt;T&gt;.</para><para><programlisting><codeline><highlight class="normal"><ref refid="classgf_1_1_singleton" kindref="compound">gf::Singleton&lt;Foo&gt;</ref><sp/>gFoo;</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>main()<sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><ref refid="classgf_1_1_singleton_storage" kindref="compound">gf::SingletonStorage&lt;Foo&gt;</ref><sp/>fooStorage(gFoo);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/>gFoo().bar();</highlight></codeline>
<codeline><highlight class="normal">}</highlight></codeline>
</programlisting></para><para><simplesect kind="see"><para><ref refid="classgf_1_1_singleton_storage" kindref="compound">gf::SingletonStorage</ref> </para></simplesect>
</para>    </detaileddescription>
    <location file="/home/jbernard/Workshop/gf/versions/include/gf/Singleton.h" line="57" column="1" bodyfile="/home/jbernard/Workshop/gf/versions/include/gf/Singleton.h" bodystart="57" bodyend="125"/>
    <listofallmembers>
      <member refid="classgf_1_1_singleton_1ac84b0f64d5f463d3553e8fd2d9b6aabb" prot="public" virt="non-virtual"><scope>gf::Singleton</scope><name>isValid</name></member>
      <member refid="classgf_1_1_singleton_1a7c393b997a98ad64ca5db90d5788ea48" prot="private" virt="non-virtual"><scope>gf::Singleton</scope><name>m_single</name></member>
      <member refid="classgf_1_1_singleton_1a64750c2b51b730fc9b6e9d7d02ae9c1a" prot="public" virt="non-virtual"><scope>gf::Singleton</scope><name>operator()</name></member>
      <member refid="classgf_1_1_singleton_1a976cad168b3424b6560bfdf9fb35f90c" prot="public" virt="non-virtual"><scope>gf::Singleton</scope><name>operator=</name></member>
      <member refid="classgf_1_1_singleton_1a001396df5cb7e6f34290852905371d0b" prot="public" virt="non-virtual"><scope>gf::Singleton</scope><name>operator=</name></member>
      <member refid="classgf_1_1_singleton_1abd1f8a08c55e9d63167c1fb36bf2528a" prot="public" virt="non-virtual"><scope>gf::Singleton</scope><name>reset</name></member>
      <member refid="classgf_1_1_singleton_1a73ee18033e64423035ae4bcc79e0d7b9" prot="public" virt="non-virtual"><scope>gf::Singleton</scope><name>Singleton</name></member>
      <member refid="classgf_1_1_singleton_1a31eeb9cb9e029fd8b0230172b4edd0fc" prot="public" virt="non-virtual"><scope>gf::Singleton</scope><name>Singleton</name></member>
      <member refid="classgf_1_1_singleton_1af28520c8fd1ee9686cbf82a9d2c8778f" prot="public" virt="non-virtual"><scope>gf::Singleton</scope><name>Singleton</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
