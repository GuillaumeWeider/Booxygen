<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="_vector_ops_8h" kind="file" language="C++">
    <compoundname>VectorOps.h</compoundname>
    <includes local="no">cmath</includes>
    <includes local="no">algorithm</includes>
    <includes local="no">type_traits</includes>
    <includes refid="_math_8h" local="yes">Math.h</includes>
    <includes refid="_vector_8h" local="yes">Vector.h</includes>
    <includedby refid="_circ_8h" local="yes">Circ.h</includedby>
    <includedby refid="_g_f_8h" local="yes">GF.h</includedby>
    <incdepgraph>
      <node id="2472">
        <label>limits</label>
      </node>
      <node id="2476">
        <label>cstdint</label>
      </node>
      <node id="2473">
        <label>Portability.h</label>
        <link refid="_portability_8h_source"/>
      </node>
      <node id="2468">
        <label>cmath</label>
      </node>
      <node id="2467">
        <label>VectorOps.h</label>
        <link refid="_vector_ops_8h"/>
        <childnode refid="2468" relation="include">
        </childnode>
        <childnode refid="2469" relation="include">
        </childnode>
        <childnode refid="2470" relation="include">
        </childnode>
        <childnode refid="2471" relation="include">
        </childnode>
        <childnode refid="2474" relation="include">
        </childnode>
      </node>
      <node id="2474">
        <label>Vector.h</label>
        <link refid="_vector_8h_source"/>
        <childnode refid="2475" relation="include">
        </childnode>
        <childnode refid="2476" relation="include">
        </childnode>
        <childnode refid="2469" relation="include">
        </childnode>
        <childnode refid="2477" relation="include">
        </childnode>
        <childnode refid="2470" relation="include">
        </childnode>
        <childnode refid="2473" relation="include">
        </childnode>
      </node>
      <node id="2471">
        <label>Math.h</label>
        <link refid="_math_8h_source"/>
        <childnode refid="2468" relation="include">
        </childnode>
        <childnode refid="2472" relation="include">
        </childnode>
        <childnode refid="2473" relation="include">
        </childnode>
      </node>
      <node id="2475">
        <label>cstddef</label>
      </node>
      <node id="2470">
        <label>type_traits</label>
      </node>
      <node id="2469">
        <label>algorithm</label>
      </node>
      <node id="2477">
        <label>initializer_list</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="2479">
        <label>Circ.h</label>
        <link refid="_circ_8h_source"/>
        <childnode refid="2480" relation="include">
        </childnode>
        <childnode refid="2481" relation="include">
        </childnode>
        <childnode refid="2482" relation="include">
        </childnode>
        <childnode refid="2483" relation="include">
        </childnode>
        <childnode refid="2484" relation="include">
        </childnode>
        <childnode refid="2485" relation="include">
        </childnode>
      </node>
      <node id="2484">
        <label>PhysicsGeometry.h</label>
        <link refid="_physics_geometry_8h_source"/>
        <childnode refid="2483" relation="include">
        </childnode>
        <childnode refid="2481" relation="include">
        </childnode>
      </node>
      <node id="2485">
        <label>Shapes.h</label>
        <link refid="_shapes_8h_source"/>
        <childnode refid="2481" relation="include">
        </childnode>
      </node>
      <node id="2478">
        <label>VectorOps.h</label>
        <link refid="_vector_ops_8h"/>
        <childnode refid="2479" relation="include">
        </childnode>
        <childnode refid="2481" relation="include">
        </childnode>
      </node>
      <node id="2480">
        <label>Collision.h</label>
        <link refid="_collision_8h_source"/>
        <childnode refid="2481" relation="include">
        </childnode>
      </node>
      <node id="2482">
        <label>Particles.h</label>
        <link refid="_particles_8h_source"/>
        <childnode refid="2481" relation="include">
        </childnode>
      </node>
      <node id="2481">
        <label>GF.h</label>
        <link refid="_g_f_8h_source"/>
      </node>
      <node id="2483">
        <label>PhysicsBody.h</label>
        <link refid="_physics_body_8h_source"/>
        <childnode refid="2481" relation="include">
        </childnode>
      </node>
    </invincdepgraph>
    <innernamespace refid="namespacegf">gf</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/>*<sp/>Gamedev<sp/>Framework<sp/>(gf)</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/>*<sp/>Copyright<sp/>(C)<sp/>2016-2017<sp/>Julien<sp/>Bernard</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>*<sp/>This<sp/>software<sp/>is<sp/>provided<sp/>&apos;as-is&apos;,<sp/>without<sp/>any<sp/>express<sp/>or<sp/>implied</highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/>*<sp/>warranty.<sp/><sp/>In<sp/>no<sp/>event<sp/>will<sp/>the<sp/>authors<sp/>be<sp/>held<sp/>liable<sp/>for<sp/>any<sp/>damages</highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/>*<sp/>arising<sp/>from<sp/>the<sp/>use<sp/>of<sp/>this<sp/>software.</highlight></codeline>
<codeline lineno="8"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="9"><highlight class="comment"><sp/>*<sp/>Permission<sp/>is<sp/>granted<sp/>to<sp/>anyone<sp/>to<sp/>use<sp/>this<sp/>software<sp/>for<sp/>any<sp/>purpose,</highlight></codeline>
<codeline lineno="10"><highlight class="comment"><sp/>*<sp/>including<sp/>commercial<sp/>applications,<sp/>and<sp/>to<sp/>alter<sp/>it<sp/>and<sp/>redistribute<sp/>it</highlight></codeline>
<codeline lineno="11"><highlight class="comment"><sp/>*<sp/>freely,<sp/>subject<sp/>to<sp/>the<sp/>following<sp/>restrictions:</highlight></codeline>
<codeline lineno="12"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="13"><highlight class="comment"><sp/>*<sp/>1.<sp/>The<sp/>origin<sp/>of<sp/>this<sp/>software<sp/>must<sp/>not<sp/>be<sp/>misrepresented;<sp/>you<sp/>must<sp/>not</highlight></codeline>
<codeline lineno="14"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/>claim<sp/>that<sp/>you<sp/>wrote<sp/>the<sp/>original<sp/>software.<sp/>If<sp/>you<sp/>use<sp/>this<sp/>software</highlight></codeline>
<codeline lineno="15"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/>in<sp/>a<sp/>product,<sp/>an<sp/>acknowledgment<sp/>in<sp/>the<sp/>product<sp/>documentation<sp/>would<sp/>be</highlight></codeline>
<codeline lineno="16"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/>appreciated<sp/>but<sp/>is<sp/>not<sp/>required.</highlight></codeline>
<codeline lineno="17"><highlight class="comment"><sp/>*<sp/>2.<sp/>Altered<sp/>source<sp/>versions<sp/>must<sp/>be<sp/>plainly<sp/>marked<sp/>as<sp/>such,<sp/>and<sp/>must<sp/>not<sp/>be</highlight></codeline>
<codeline lineno="18"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/>misrepresented<sp/>as<sp/>being<sp/>the<sp/>original<sp/>software.</highlight></codeline>
<codeline lineno="19"><highlight class="comment"><sp/>*<sp/>3.<sp/>This<sp/>notice<sp/>may<sp/>not<sp/>be<sp/>removed<sp/>or<sp/>altered<sp/>from<sp/>any<sp/>source<sp/>distribution.</highlight></codeline>
<codeline lineno="20"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>GF_VECTOR_OPS_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>GF_VECTOR_OPS_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;cmath&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;algorithm&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;type_traits&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;Math.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;Vector.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespacegf" kindref="compound">gf</ref><sp/>{</highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>DOXYGEN_SHOULD_SKIP_THIS</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">v1<sp/>{</highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T,<sp/>std::</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>N&gt;</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="42" refid="structgf_1_1_vector_1addfc879a55660b67f701dc5b8f7ee2e2" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="structgf_1_1_vector_1addfc879a55660b67f701dc5b8f7ee2e2" kindref="member">operator==</ref>(<ref refid="structgf_1_1_vector" kindref="compound">Vector&lt;T, N&gt;</ref><sp/>lhs,<sp/><ref refid="structgf_1_1_vector" kindref="compound">Vector&lt;T, N&gt;</ref><sp/>rhs)<sp/>{</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(std::size_t<sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/><ref refid="group__window_1gga795d7d5e2f2a4f38b16b95e0e78cb626a8d9c307cb7f3c4a32822a51922d1ceaa" kindref="member">N</ref>;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(lhs.<ref refid="structgf_1_1_vector_1a247825a4b27adde52e67107d87987ca8" kindref="member">data</ref>[i]<sp/>!=<sp/>rhs.<ref refid="structgf_1_1_vector_1a247825a4b27adde52e67107d87987ca8" kindref="member">data</ref>[i])<sp/>{</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T,<sp/>std::</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>N&gt;</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="58" refid="structgf_1_1_vector_1a194e3ab10cac9d61a1b7cb5179a2a045" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="structgf_1_1_vector_1a194e3ab10cac9d61a1b7cb5179a2a045" kindref="member">operator!=</ref>(<ref refid="structgf_1_1_vector" kindref="compound">Vector&lt;T, N&gt;</ref><sp/>lhs,<sp/><ref refid="structgf_1_1_vector" kindref="compound">Vector&lt;T, N&gt;</ref><sp/>rhs)<sp/>{</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>!(lhs<sp/>==<sp/>rhs);</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="61"><highlight class="normal"></highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T,<sp/>std::</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>N&gt;</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="68" refid="structgf_1_1_vector_1acb6c3010ab2bda198e324c826f933360" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="structgf_1_1_vector" kindref="compound">Vector&lt;T, N&gt;</ref><sp/><ref refid="structgf_1_1_vector_1acb6c3010ab2bda198e324c826f933360" kindref="member">operator-</ref>(<ref refid="structgf_1_1_vector" kindref="compound">Vector&lt;T, N&gt;</ref><sp/>val)<sp/>{</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structgf_1_1_vector" kindref="compound">Vector&lt;T, N&gt;</ref><sp/>out;</highlight></codeline>
<codeline lineno="70"><highlight class="normal"></highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(std::size_t<sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/><ref refid="group__window_1gga795d7d5e2f2a4f38b16b95e0e78cb626a8d9c307cb7f3c4a32822a51922d1ceaa" kindref="member">N</ref>;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>out.<ref refid="structgf_1_1_vector_1a247825a4b27adde52e67107d87987ca8" kindref="member">data</ref>[i]<sp/>=<sp/>-<sp/>val.<ref refid="structgf_1_1_vector_1a247825a4b27adde52e67107d87987ca8" kindref="member">data</ref>[i];</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="74"><highlight class="normal"></highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>out;</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="77"><highlight class="normal"></highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>U,<sp/>std::</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>N&gt;</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="84" refid="structgf_1_1_vector_1a8e0a6cadb46b506bc913deb4b18a1516" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="structgf_1_1_vector" kindref="compound">Vector&lt;typename std::common_type&lt;T,U&gt;::type</ref>,<sp/><ref refid="group__window_1gga795d7d5e2f2a4f38b16b95e0e78cb626a8d9c307cb7f3c4a32822a51922d1ceaa" kindref="member">N</ref>&gt;<sp/><ref refid="structgf_1_1_vector_1a8e0a6cadb46b506bc913deb4b18a1516" kindref="member">operator+</ref>(<ref refid="structgf_1_1_vector" kindref="compound">Vector&lt;T, N&gt;</ref><sp/>lhs,<sp/><ref refid="structgf_1_1_vector" kindref="compound">Vector&lt;U, N&gt;</ref><sp/>rhs)<sp/>{</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structgf_1_1_vector" kindref="compound">Vector&lt;typename std::common_type&lt;T,U&gt;::type</ref>,<sp/><ref refid="group__window_1gga795d7d5e2f2a4f38b16b95e0e78cb626a8d9c307cb7f3c4a32822a51922d1ceaa" kindref="member">N</ref>&gt;<sp/>out;</highlight></codeline>
<codeline lineno="86"><highlight class="normal"></highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(std::size_t<sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/><ref refid="group__window_1gga795d7d5e2f2a4f38b16b95e0e78cb626a8d9c307cb7f3c4a32822a51922d1ceaa" kindref="member">N</ref>;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>out.<ref refid="structgf_1_1_vector_1a247825a4b27adde52e67107d87987ca8" kindref="member">data</ref>[i]<sp/>=<sp/>lhs.<ref refid="structgf_1_1_vector_1a247825a4b27adde52e67107d87987ca8" kindref="member">data</ref>[i]<sp/>+<sp/>rhs.<ref refid="structgf_1_1_vector_1a247825a4b27adde52e67107d87987ca8" kindref="member">data</ref>[i];</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="90"><highlight class="normal"></highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>out;</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="93"><highlight class="normal"></highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>U,<sp/>std::</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>N&gt;</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="100" refid="structgf_1_1_vector_1a101fbd6e3dbcddd1d856666d59326c5f" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="structgf_1_1_vector" kindref="compound">Vector&lt;T, N&gt;</ref>&amp;<sp/><ref refid="structgf_1_1_vector_1a101fbd6e3dbcddd1d856666d59326c5f" kindref="member">operator+=</ref>(<ref refid="structgf_1_1_vector" kindref="compound">Vector&lt;T, N&gt;</ref>&amp;<sp/>lhs,<sp/><ref refid="structgf_1_1_vector" kindref="compound">Vector&lt;U, N&gt;</ref><sp/>rhs)<sp/>{</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(std::size_t<sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/><ref refid="group__window_1gga795d7d5e2f2a4f38b16b95e0e78cb626a8d9c307cb7f3c4a32822a51922d1ceaa" kindref="member">N</ref>;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>lhs.<ref refid="structgf_1_1_vector_1a247825a4b27adde52e67107d87987ca8" kindref="member">data</ref>[i]<sp/>+=<sp/>rhs.<ref refid="structgf_1_1_vector_1a247825a4b27adde52e67107d87987ca8" kindref="member">data</ref>[i];</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="104"><highlight class="normal"></highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>lhs;</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="107"><highlight class="normal"></highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/>template&lt;typename<sp/>T,<sp/>typename<sp/>U,<sp/>std::size_t<sp/>N,<sp/>typename<sp/>E<sp/>=<sp/>typename<sp/>std::enable_if&lt;std::is_arithmetic&lt;U&gt;::value,<sp/><ref refid="group__window_1gga795d7d5e2f2a4f38b16b95e0e78cb626a4c614360da93c0a041b22e537de151eb" kindref="member">U</ref>&gt;::type&gt;</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="114" refid="structgf_1_1_vector_1a00e172b44efd3aad4cf74adbbfa9a6e7" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="structgf_1_1_vector" kindref="compound">Vector&lt;typename std::common_type&lt;T,U&gt;::type</ref>,<sp/><ref refid="group__window_1gga795d7d5e2f2a4f38b16b95e0e78cb626a8d9c307cb7f3c4a32822a51922d1ceaa" kindref="member">N</ref>&gt;<sp/><ref refid="structgf_1_1_vector_1a00e172b44efd3aad4cf74adbbfa9a6e7" kindref="member">operator+</ref>(<ref refid="structgf_1_1_vector" kindref="compound">Vector&lt;T, N&gt;</ref><sp/>lhs,<sp/><ref refid="group__window_1gga795d7d5e2f2a4f38b16b95e0e78cb626a4c614360da93c0a041b22e537de151eb" kindref="member">U</ref><sp/>rhs)<sp/>{</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structgf_1_1_vector" kindref="compound">Vector&lt;typename std::common_type&lt;T,U&gt;::type</ref>,<sp/><ref refid="group__window_1gga795d7d5e2f2a4f38b16b95e0e78cb626a8d9c307cb7f3c4a32822a51922d1ceaa" kindref="member">N</ref>&gt;<sp/>out;</highlight></codeline>
<codeline lineno="116"><highlight class="normal"></highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(std::size_t<sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/><ref refid="group__window_1gga795d7d5e2f2a4f38b16b95e0e78cb626a8d9c307cb7f3c4a32822a51922d1ceaa" kindref="member">N</ref>;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>out.<ref refid="structgf_1_1_vector_1a247825a4b27adde52e67107d87987ca8" kindref="member">data</ref>[i]<sp/>=<sp/>lhs.<ref refid="structgf_1_1_vector_1a247825a4b27adde52e67107d87987ca8" kindref="member">data</ref>[i]<sp/>+<sp/>rhs;</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="120"><highlight class="normal"></highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>out;</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="123"><highlight class="normal"></highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>U,<sp/>std::</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>N&gt;</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="130" refid="structgf_1_1_vector_1a406d276bfe7acaa751a9b85417aee3c6" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="structgf_1_1_vector" kindref="compound">Vector&lt;T, N&gt;</ref>&amp;<sp/><ref refid="structgf_1_1_vector_1a406d276bfe7acaa751a9b85417aee3c6" kindref="member">operator+=</ref>(<ref refid="structgf_1_1_vector" kindref="compound">Vector&lt;T, N&gt;</ref>&amp;<sp/>lhs,<sp/><ref refid="group__window_1gga795d7d5e2f2a4f38b16b95e0e78cb626a4c614360da93c0a041b22e537de151eb" kindref="member">U</ref><sp/>rhs)<sp/>{</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(std::size_t<sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/><ref refid="group__window_1gga795d7d5e2f2a4f38b16b95e0e78cb626a8d9c307cb7f3c4a32822a51922d1ceaa" kindref="member">N</ref>;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>lhs.<ref refid="structgf_1_1_vector_1a247825a4b27adde52e67107d87987ca8" kindref="member">data</ref>[i]<sp/>+=<sp/>rhs;</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="134"><highlight class="normal"></highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>lhs;</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="137"><highlight class="normal"></highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/>template&lt;typename<sp/>T,<sp/>typename<sp/>U,<sp/>std::size_t<sp/>N,<sp/>typename<sp/>E<sp/>=<sp/>typename<sp/>std::enable_if&lt;std::is_arithmetic&lt;T&gt;::value,<sp/><ref refid="group__window_1gga795d7d5e2f2a4f38b16b95e0e78cb626ab9ece18c950afbfa6b0fdbfa4ff731d3" kindref="member">T</ref>&gt;::type&gt;</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="144" refid="structgf_1_1_vector_1a5015b6c77ebbd2690707c43deb298d0c" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="structgf_1_1_vector" kindref="compound">Vector&lt;typename std::common_type&lt;T,U&gt;::type</ref>,<sp/><ref refid="group__window_1gga795d7d5e2f2a4f38b16b95e0e78cb626a8d9c307cb7f3c4a32822a51922d1ceaa" kindref="member">N</ref>&gt;<sp/><ref refid="structgf_1_1_vector_1a5015b6c77ebbd2690707c43deb298d0c" kindref="member">operator+</ref>(<ref refid="group__window_1gga795d7d5e2f2a4f38b16b95e0e78cb626ab9ece18c950afbfa6b0fdbfa4ff731d3" kindref="member">T</ref><sp/>lhs,<sp/><ref refid="structgf_1_1_vector" kindref="compound">Vector&lt;U, N&gt;</ref><sp/>rhs)<sp/>{</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structgf_1_1_vector" kindref="compound">Vector&lt;typename std::common_type&lt;T,U&gt;::type</ref>,<sp/><ref refid="group__window_1gga795d7d5e2f2a4f38b16b95e0e78cb626a8d9c307cb7f3c4a32822a51922d1ceaa" kindref="member">N</ref>&gt;<sp/>out;</highlight></codeline>
<codeline lineno="146"><highlight class="normal"></highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(std::size_t<sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/><ref refid="group__window_1gga795d7d5e2f2a4f38b16b95e0e78cb626a8d9c307cb7f3c4a32822a51922d1ceaa" kindref="member">N</ref>;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>out.<ref refid="structgf_1_1_vector_1a247825a4b27adde52e67107d87987ca8" kindref="member">data</ref>[i]<sp/>=<sp/>lhs<sp/>+<sp/>rhs.<ref refid="structgf_1_1_vector_1a247825a4b27adde52e67107d87987ca8" kindref="member">data</ref>[i];</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="150"><highlight class="normal"></highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>out;</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="153"><highlight class="normal"></highlight></codeline>
<codeline lineno="154"><highlight class="normal"></highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>U,<sp/>std::</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>N&gt;</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="161" refid="structgf_1_1_vector_1a8a07db68d257f670491de216befd832d" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="structgf_1_1_vector" kindref="compound">Vector&lt;typename std::common_type&lt;T,U&gt;::type</ref>,<sp/><ref refid="group__window_1gga795d7d5e2f2a4f38b16b95e0e78cb626a8d9c307cb7f3c4a32822a51922d1ceaa" kindref="member">N</ref>&gt;<sp/><ref refid="structgf_1_1_vector_1a8a07db68d257f670491de216befd832d" kindref="member">operator-</ref>(<ref refid="structgf_1_1_vector" kindref="compound">Vector&lt;T, N&gt;</ref><sp/>lhs,<sp/><ref refid="structgf_1_1_vector" kindref="compound">Vector&lt;U, N&gt;</ref><sp/>rhs)<sp/>{</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structgf_1_1_vector" kindref="compound">Vector&lt;typename std::common_type&lt;T,U&gt;::type</ref>,<sp/><ref refid="group__window_1gga795d7d5e2f2a4f38b16b95e0e78cb626a8d9c307cb7f3c4a32822a51922d1ceaa" kindref="member">N</ref>&gt;<sp/>out;</highlight></codeline>
<codeline lineno="163"><highlight class="normal"></highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(std::size_t<sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/><ref refid="group__window_1gga795d7d5e2f2a4f38b16b95e0e78cb626a8d9c307cb7f3c4a32822a51922d1ceaa" kindref="member">N</ref>;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>out.<ref refid="structgf_1_1_vector_1a247825a4b27adde52e67107d87987ca8" kindref="member">data</ref>[i]<sp/>=<sp/>lhs.<ref refid="structgf_1_1_vector_1a247825a4b27adde52e67107d87987ca8" kindref="member">data</ref>[i]<sp/>-<sp/>rhs.<ref refid="structgf_1_1_vector_1a247825a4b27adde52e67107d87987ca8" kindref="member">data</ref>[i];</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="167"><highlight class="normal"></highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>out;</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="170"><highlight class="normal"></highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>U,<sp/>std::</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>N&gt;</highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="177" refid="structgf_1_1_vector_1a96a7faa11e7244c26d0b290cd8be2894" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="structgf_1_1_vector" kindref="compound">Vector&lt;T, N&gt;</ref>&amp;<sp/><ref refid="structgf_1_1_vector_1a96a7faa11e7244c26d0b290cd8be2894" kindref="member">operator-=</ref>(<ref refid="structgf_1_1_vector" kindref="compound">Vector&lt;T, N&gt;</ref>&amp;<sp/>lhs,<sp/><ref refid="structgf_1_1_vector" kindref="compound">Vector&lt;U, N&gt;</ref><sp/>rhs)<sp/>{</highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(std::size_t<sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/><ref refid="group__window_1gga795d7d5e2f2a4f38b16b95e0e78cb626a8d9c307cb7f3c4a32822a51922d1ceaa" kindref="member">N</ref>;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>lhs.<ref refid="structgf_1_1_vector_1a247825a4b27adde52e67107d87987ca8" kindref="member">data</ref>[i]<sp/>-=<sp/>rhs.<ref refid="structgf_1_1_vector_1a247825a4b27adde52e67107d87987ca8" kindref="member">data</ref>[i];</highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="181"><highlight class="normal"></highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>lhs;</highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="184"><highlight class="normal"></highlight></codeline>
<codeline lineno="185"><highlight class="normal"></highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/>template&lt;typename<sp/>T,<sp/>typename<sp/>U,<sp/>std::size_t<sp/>N,<sp/>typename<sp/>E<sp/>=<sp/>typename<sp/>std::enable_if&lt;std::is_arithmetic&lt;U&gt;::value,<sp/><ref refid="group__window_1gga795d7d5e2f2a4f38b16b95e0e78cb626a4c614360da93c0a041b22e537de151eb" kindref="member">U</ref>&gt;::type&gt;</highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="192" refid="structgf_1_1_vector_1af30f0d7c7488c76df6c71d51d913de32" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="structgf_1_1_vector" kindref="compound">Vector&lt;typename std::common_type&lt;T,U&gt;::type</ref>,<sp/><ref refid="group__window_1gga795d7d5e2f2a4f38b16b95e0e78cb626a8d9c307cb7f3c4a32822a51922d1ceaa" kindref="member">N</ref>&gt;<sp/><ref refid="structgf_1_1_vector_1af30f0d7c7488c76df6c71d51d913de32" kindref="member">operator-</ref>(<ref refid="structgf_1_1_vector" kindref="compound">Vector&lt;T, N&gt;</ref><sp/>lhs,<sp/><ref refid="group__window_1gga795d7d5e2f2a4f38b16b95e0e78cb626a4c614360da93c0a041b22e537de151eb" kindref="member">U</ref><sp/>rhs)<sp/>{</highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structgf_1_1_vector" kindref="compound">Vector&lt;typename std::common_type&lt;T,U&gt;::type</ref>,<sp/><ref refid="group__window_1gga795d7d5e2f2a4f38b16b95e0e78cb626a8d9c307cb7f3c4a32822a51922d1ceaa" kindref="member">N</ref>&gt;<sp/>out;</highlight></codeline>
<codeline lineno="194"><highlight class="normal"></highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(std::size_t<sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/><ref refid="group__window_1gga795d7d5e2f2a4f38b16b95e0e78cb626a8d9c307cb7f3c4a32822a51922d1ceaa" kindref="member">N</ref>;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>out.<ref refid="structgf_1_1_vector_1a247825a4b27adde52e67107d87987ca8" kindref="member">data</ref>[i]<sp/>=<sp/>lhs.<ref refid="structgf_1_1_vector_1a247825a4b27adde52e67107d87987ca8" kindref="member">data</ref>[i]<sp/>-<sp/>rhs;</highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="198"><highlight class="normal"></highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>out;</highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="201"><highlight class="normal"></highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>U,<sp/>std::</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>N&gt;</highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="208" refid="structgf_1_1_vector_1afec7d861fcc4d7b371e74635767b09b7" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="structgf_1_1_vector" kindref="compound">Vector&lt;T, N&gt;</ref>&amp;<sp/><ref refid="structgf_1_1_vector_1afec7d861fcc4d7b371e74635767b09b7" kindref="member">operator-=</ref>(<ref refid="structgf_1_1_vector" kindref="compound">Vector&lt;T, N&gt;</ref>&amp;<sp/>lhs,<sp/><ref refid="group__window_1gga795d7d5e2f2a4f38b16b95e0e78cb626a4c614360da93c0a041b22e537de151eb" kindref="member">U</ref><sp/>rhs)<sp/>{</highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(std::size_t<sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/><ref refid="group__window_1gga795d7d5e2f2a4f38b16b95e0e78cb626a8d9c307cb7f3c4a32822a51922d1ceaa" kindref="member">N</ref>;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>lhs.<ref refid="structgf_1_1_vector_1a247825a4b27adde52e67107d87987ca8" kindref="member">data</ref>[i]<sp/>-=<sp/>rhs;</highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="212"><highlight class="normal"></highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>lhs;</highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="215"><highlight class="normal"></highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/>template&lt;typename<sp/>T,<sp/>typename<sp/>U,<sp/>std::size_t<sp/>N,<sp/>typename<sp/>E<sp/>=<sp/>typename<sp/>std::enable_if&lt;std::is_arithmetic&lt;T&gt;::value,<sp/><ref refid="group__window_1gga795d7d5e2f2a4f38b16b95e0e78cb626ab9ece18c950afbfa6b0fdbfa4ff731d3" kindref="member">T</ref>&gt;::type&gt;</highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="222" refid="structgf_1_1_vector_1acd174ac192406cd11b091cd69dbb7553" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="structgf_1_1_vector" kindref="compound">Vector&lt;typename std::common_type&lt;T,U&gt;::type</ref>,<sp/><ref refid="group__window_1gga795d7d5e2f2a4f38b16b95e0e78cb626a8d9c307cb7f3c4a32822a51922d1ceaa" kindref="member">N</ref>&gt;<sp/><ref refid="structgf_1_1_vector_1acd174ac192406cd11b091cd69dbb7553" kindref="member">operator-</ref>(<ref refid="group__window_1gga795d7d5e2f2a4f38b16b95e0e78cb626ab9ece18c950afbfa6b0fdbfa4ff731d3" kindref="member">T</ref><sp/>lhs,<sp/><ref refid="structgf_1_1_vector" kindref="compound">Vector&lt;U, N&gt;</ref><sp/>rhs)<sp/>{</highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structgf_1_1_vector" kindref="compound">Vector&lt;typename std::common_type&lt;T,U&gt;::type</ref>,<sp/><ref refid="group__window_1gga795d7d5e2f2a4f38b16b95e0e78cb626a8d9c307cb7f3c4a32822a51922d1ceaa" kindref="member">N</ref>&gt;<sp/>out;</highlight></codeline>
<codeline lineno="224"><highlight class="normal"></highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(std::size_t<sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/><ref refid="group__window_1gga795d7d5e2f2a4f38b16b95e0e78cb626a8d9c307cb7f3c4a32822a51922d1ceaa" kindref="member">N</ref>;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>out.<ref refid="structgf_1_1_vector_1a247825a4b27adde52e67107d87987ca8" kindref="member">data</ref>[i]<sp/>=<sp/>lhs<sp/>-<sp/>rhs.<ref refid="structgf_1_1_vector_1a247825a4b27adde52e67107d87987ca8" kindref="member">data</ref>[i];</highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="228"><highlight class="normal"></highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>out;</highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="231"><highlight class="normal"></highlight></codeline>
<codeline lineno="232"><highlight class="normal"></highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>U,<sp/>std::</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>N&gt;</highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="239" refid="structgf_1_1_vector_1a585873ed563da32008b584ed878bf9ff" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="structgf_1_1_vector" kindref="compound">Vector&lt;typename std::common_type&lt;T,U&gt;::type</ref>,<sp/><ref refid="group__window_1gga795d7d5e2f2a4f38b16b95e0e78cb626a8d9c307cb7f3c4a32822a51922d1ceaa" kindref="member">N</ref>&gt;<sp/><ref refid="structgf_1_1_vector_1a585873ed563da32008b584ed878bf9ff" kindref="member">operator*</ref>(<ref refid="structgf_1_1_vector" kindref="compound">Vector&lt;T, N&gt;</ref><sp/>lhs,<sp/><ref refid="structgf_1_1_vector" kindref="compound">Vector&lt;U, N&gt;</ref><sp/>rhs)<sp/>{</highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structgf_1_1_vector" kindref="compound">Vector&lt;typename std::common_type&lt;T,U&gt;::type</ref>,<sp/><ref refid="group__window_1gga795d7d5e2f2a4f38b16b95e0e78cb626a8d9c307cb7f3c4a32822a51922d1ceaa" kindref="member">N</ref>&gt;<sp/>out;</highlight></codeline>
<codeline lineno="241"><highlight class="normal"></highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(std::size_t<sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/><ref refid="group__window_1gga795d7d5e2f2a4f38b16b95e0e78cb626a8d9c307cb7f3c4a32822a51922d1ceaa" kindref="member">N</ref>;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>out.<ref refid="structgf_1_1_vector_1a247825a4b27adde52e67107d87987ca8" kindref="member">data</ref>[i]<sp/>=<sp/>lhs.<ref refid="structgf_1_1_vector_1a247825a4b27adde52e67107d87987ca8" kindref="member">data</ref>[i]<sp/>*<sp/>rhs.<ref refid="structgf_1_1_vector_1a247825a4b27adde52e67107d87987ca8" kindref="member">data</ref>[i];</highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="245"><highlight class="normal"></highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>out;</highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="248"><highlight class="normal"></highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>U,<sp/>std::</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>N&gt;</highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="255" refid="structgf_1_1_vector_1a3811d6c420b6e8d37a2c6529f1695401" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="structgf_1_1_vector" kindref="compound">Vector&lt;T, N&gt;</ref>&amp;<sp/><ref refid="structgf_1_1_vector_1a3811d6c420b6e8d37a2c6529f1695401" kindref="member">operator*=</ref>(<ref refid="structgf_1_1_vector" kindref="compound">Vector&lt;T, N&gt;</ref>&amp;<sp/>lhs,<sp/><ref refid="structgf_1_1_vector" kindref="compound">Vector&lt;U, N&gt;</ref><sp/>rhs)<sp/>{</highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(std::size_t<sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/><ref refid="group__window_1gga795d7d5e2f2a4f38b16b95e0e78cb626a8d9c307cb7f3c4a32822a51922d1ceaa" kindref="member">N</ref>;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>lhs.<ref refid="structgf_1_1_vector_1a247825a4b27adde52e67107d87987ca8" kindref="member">data</ref>[i]<sp/>*=<sp/>rhs.<ref refid="structgf_1_1_vector_1a247825a4b27adde52e67107d87987ca8" kindref="member">data</ref>[i];</highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="259"><highlight class="normal"></highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>lhs;</highlight></codeline>
<codeline lineno="261"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="262"><highlight class="normal"></highlight></codeline>
<codeline lineno="267"><highlight class="normal"><sp/><sp/>template&lt;typename<sp/>T,<sp/>typename<sp/>U,<sp/>std::size_t<sp/>N,<sp/>typename<sp/>E<sp/>=<sp/>typename<sp/>std::enable_if&lt;std::is_arithmetic&lt;U&gt;::value,<sp/><ref refid="group__window_1gga795d7d5e2f2a4f38b16b95e0e78cb626a4c614360da93c0a041b22e537de151eb" kindref="member">U</ref>&gt;::type&gt;</highlight></codeline>
<codeline lineno="268"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="269" refid="structgf_1_1_vector_1a409504167f553a88cb2a5664703b3ac2" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="structgf_1_1_vector" kindref="compound">Vector&lt;typename std::common_type&lt;T,U&gt;::type</ref>,<sp/><ref refid="group__window_1gga795d7d5e2f2a4f38b16b95e0e78cb626a8d9c307cb7f3c4a32822a51922d1ceaa" kindref="member">N</ref>&gt;<sp/><ref refid="structgf_1_1_vector_1a409504167f553a88cb2a5664703b3ac2" kindref="member">operator*</ref>(<ref refid="structgf_1_1_vector" kindref="compound">Vector&lt;T, N&gt;</ref><sp/>lhs,<sp/><ref refid="group__window_1gga795d7d5e2f2a4f38b16b95e0e78cb626a4c614360da93c0a041b22e537de151eb" kindref="member">U</ref><sp/>rhs)<sp/>{</highlight></codeline>
<codeline lineno="270"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structgf_1_1_vector" kindref="compound">Vector&lt;typename std::common_type&lt;T,U&gt;::type</ref>,<sp/><ref refid="group__window_1gga795d7d5e2f2a4f38b16b95e0e78cb626a8d9c307cb7f3c4a32822a51922d1ceaa" kindref="member">N</ref>&gt;<sp/>out;</highlight></codeline>
<codeline lineno="271"><highlight class="normal"></highlight></codeline>
<codeline lineno="272"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(std::size_t<sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/><ref refid="group__window_1gga795d7d5e2f2a4f38b16b95e0e78cb626a8d9c307cb7f3c4a32822a51922d1ceaa" kindref="member">N</ref>;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="273"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>out.<ref refid="structgf_1_1_vector_1a247825a4b27adde52e67107d87987ca8" kindref="member">data</ref>[i]<sp/>=<sp/>lhs.<ref refid="structgf_1_1_vector_1a247825a4b27adde52e67107d87987ca8" kindref="member">data</ref>[i]<sp/>*<sp/>rhs;</highlight></codeline>
<codeline lineno="274"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="275"><highlight class="normal"></highlight></codeline>
<codeline lineno="276"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>out;</highlight></codeline>
<codeline lineno="277"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="278"><highlight class="normal"></highlight></codeline>
<codeline lineno="283"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>U,<sp/>std::</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>N&gt;</highlight></codeline>
<codeline lineno="284"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="285" refid="structgf_1_1_vector_1a3868eb2530937c190ca12d86a76539ae" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="structgf_1_1_vector" kindref="compound">Vector&lt;T, N&gt;</ref>&amp;<sp/><ref refid="structgf_1_1_vector_1a3868eb2530937c190ca12d86a76539ae" kindref="member">operator*=</ref>(<ref refid="structgf_1_1_vector" kindref="compound">Vector&lt;T, N&gt;</ref>&amp;<sp/>lhs,<sp/><ref refid="group__window_1gga795d7d5e2f2a4f38b16b95e0e78cb626a4c614360da93c0a041b22e537de151eb" kindref="member">U</ref><sp/>rhs)<sp/>{</highlight></codeline>
<codeline lineno="286"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(std::size_t<sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/><ref refid="group__window_1gga795d7d5e2f2a4f38b16b95e0e78cb626a8d9c307cb7f3c4a32822a51922d1ceaa" kindref="member">N</ref>;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="287"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>lhs.<ref refid="structgf_1_1_vector_1a247825a4b27adde52e67107d87987ca8" kindref="member">data</ref>[i]<sp/>*=<sp/>rhs;</highlight></codeline>
<codeline lineno="288"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="289"><highlight class="normal"></highlight></codeline>
<codeline lineno="290"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>lhs;</highlight></codeline>
<codeline lineno="291"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="292"><highlight class="normal"></highlight></codeline>
<codeline lineno="297"><highlight class="normal"><sp/><sp/>template&lt;typename<sp/>T,<sp/>typename<sp/>U,<sp/>std::size_t<sp/>N,<sp/>typename<sp/>E<sp/>=<sp/>typename<sp/>std::enable_if&lt;std::is_arithmetic&lt;T&gt;::value,<sp/><ref refid="group__window_1gga795d7d5e2f2a4f38b16b95e0e78cb626ab9ece18c950afbfa6b0fdbfa4ff731d3" kindref="member">T</ref>&gt;::type&gt;</highlight></codeline>
<codeline lineno="298"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="299" refid="structgf_1_1_vector_1a919ff69530aacf912ab061b5c54f0696" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="structgf_1_1_vector" kindref="compound">Vector&lt;typename std::common_type&lt;T,U&gt;::type</ref>,<sp/><ref refid="group__window_1gga795d7d5e2f2a4f38b16b95e0e78cb626a8d9c307cb7f3c4a32822a51922d1ceaa" kindref="member">N</ref>&gt;<sp/><ref refid="structgf_1_1_vector_1a919ff69530aacf912ab061b5c54f0696" kindref="member">operator*</ref>(<ref refid="group__window_1gga795d7d5e2f2a4f38b16b95e0e78cb626ab9ece18c950afbfa6b0fdbfa4ff731d3" kindref="member">T</ref><sp/>lhs,<sp/><ref refid="structgf_1_1_vector" kindref="compound">Vector&lt;U, N&gt;</ref><sp/>rhs)<sp/>{</highlight></codeline>
<codeline lineno="300"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structgf_1_1_vector" kindref="compound">Vector&lt;typename std::common_type&lt;T,U&gt;::type</ref>,<sp/><ref refid="group__window_1gga795d7d5e2f2a4f38b16b95e0e78cb626a8d9c307cb7f3c4a32822a51922d1ceaa" kindref="member">N</ref>&gt;<sp/>out;</highlight></codeline>
<codeline lineno="301"><highlight class="normal"></highlight></codeline>
<codeline lineno="302"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(std::size_t<sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/><ref refid="group__window_1gga795d7d5e2f2a4f38b16b95e0e78cb626a8d9c307cb7f3c4a32822a51922d1ceaa" kindref="member">N</ref>;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="303"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>out.<ref refid="structgf_1_1_vector_1a247825a4b27adde52e67107d87987ca8" kindref="member">data</ref>[i]<sp/>=<sp/>lhs<sp/>*<sp/>rhs.<ref refid="structgf_1_1_vector_1a247825a4b27adde52e67107d87987ca8" kindref="member">data</ref>[i];</highlight></codeline>
<codeline lineno="304"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="305"><highlight class="normal"></highlight></codeline>
<codeline lineno="306"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>out;</highlight></codeline>
<codeline lineno="307"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="308"><highlight class="normal"></highlight></codeline>
<codeline lineno="313"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>U,<sp/>std::</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>N&gt;</highlight></codeline>
<codeline lineno="314"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="315" refid="structgf_1_1_vector_1af7a62691c378af8f5e949e9660673c72" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="structgf_1_1_vector" kindref="compound">Vector&lt;typename std::common_type&lt;T,U&gt;::type</ref>,<sp/><ref refid="group__window_1gga795d7d5e2f2a4f38b16b95e0e78cb626a8d9c307cb7f3c4a32822a51922d1ceaa" kindref="member">N</ref>&gt;<sp/><ref refid="structgf_1_1_vector_1af7a62691c378af8f5e949e9660673c72" kindref="member">operator/</ref>(<ref refid="structgf_1_1_vector" kindref="compound">Vector&lt;T, N&gt;</ref><sp/>lhs,<sp/><ref refid="structgf_1_1_vector" kindref="compound">Vector&lt;U, N&gt;</ref><sp/>rhs)<sp/>{</highlight></codeline>
<codeline lineno="316"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structgf_1_1_vector" kindref="compound">Vector&lt;typename std::common_type&lt;T,U&gt;::type</ref>,<sp/><ref refid="group__window_1gga795d7d5e2f2a4f38b16b95e0e78cb626a8d9c307cb7f3c4a32822a51922d1ceaa" kindref="member">N</ref>&gt;<sp/>out;</highlight></codeline>
<codeline lineno="317"><highlight class="normal"></highlight></codeline>
<codeline lineno="318"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(std::size_t<sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/><ref refid="group__window_1gga795d7d5e2f2a4f38b16b95e0e78cb626a8d9c307cb7f3c4a32822a51922d1ceaa" kindref="member">N</ref>;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="319"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>out.<ref refid="structgf_1_1_vector_1a247825a4b27adde52e67107d87987ca8" kindref="member">data</ref>[i]<sp/>=<sp/>lhs.<ref refid="structgf_1_1_vector_1a247825a4b27adde52e67107d87987ca8" kindref="member">data</ref>[i]<sp/>/<sp/>rhs.<ref refid="structgf_1_1_vector_1a247825a4b27adde52e67107d87987ca8" kindref="member">data</ref>[i];</highlight></codeline>
<codeline lineno="320"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="321"><highlight class="normal"></highlight></codeline>
<codeline lineno="322"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>out;</highlight></codeline>
<codeline lineno="323"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="324"><highlight class="normal"></highlight></codeline>
<codeline lineno="329"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>U,<sp/>std::</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>N&gt;</highlight></codeline>
<codeline lineno="330"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="331" refid="structgf_1_1_vector_1a9281898f141cd2de6fe2d2e0fcf2fa03" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="structgf_1_1_vector" kindref="compound">Vector&lt;T, N&gt;</ref>&amp;<sp/><ref refid="structgf_1_1_vector_1a9281898f141cd2de6fe2d2e0fcf2fa03" kindref="member">operator/=</ref>(<ref refid="structgf_1_1_vector" kindref="compound">Vector&lt;T, N&gt;</ref>&amp;<sp/>lhs,<sp/><ref refid="structgf_1_1_vector" kindref="compound">Vector&lt;U, N&gt;</ref><sp/>rhs)<sp/>{</highlight></codeline>
<codeline lineno="332"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(std::size_t<sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/><ref refid="group__window_1gga795d7d5e2f2a4f38b16b95e0e78cb626a8d9c307cb7f3c4a32822a51922d1ceaa" kindref="member">N</ref>;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="333"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>lhs.<ref refid="structgf_1_1_vector_1a247825a4b27adde52e67107d87987ca8" kindref="member">data</ref>[i]<sp/>/=<sp/>rhs.<ref refid="structgf_1_1_vector_1a247825a4b27adde52e67107d87987ca8" kindref="member">data</ref>[i];</highlight></codeline>
<codeline lineno="334"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="335"><highlight class="normal"></highlight></codeline>
<codeline lineno="336"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>lhs;</highlight></codeline>
<codeline lineno="337"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="338"><highlight class="normal"></highlight></codeline>
<codeline lineno="343"><highlight class="normal"><sp/><sp/>template&lt;typename<sp/>T,<sp/>typename<sp/>U,<sp/>std::size_t<sp/>N,<sp/>typename<sp/>E<sp/>=<sp/>typename<sp/>std::enable_if&lt;std::is_arithmetic&lt;U&gt;::value,<sp/><ref refid="group__window_1gga795d7d5e2f2a4f38b16b95e0e78cb626a4c614360da93c0a041b22e537de151eb" kindref="member">U</ref>&gt;::type&gt;</highlight></codeline>
<codeline lineno="344"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="345" refid="structgf_1_1_vector_1ad43a1fd611e6ebae0fd6121336907d24" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="structgf_1_1_vector" kindref="compound">Vector&lt;typename std::common_type&lt;T,U&gt;::type</ref>,<sp/><ref refid="group__window_1gga795d7d5e2f2a4f38b16b95e0e78cb626a8d9c307cb7f3c4a32822a51922d1ceaa" kindref="member">N</ref>&gt;<sp/><ref refid="structgf_1_1_vector_1ad43a1fd611e6ebae0fd6121336907d24" kindref="member">operator/</ref>(<ref refid="structgf_1_1_vector" kindref="compound">Vector&lt;T, N&gt;</ref><sp/>lhs,<sp/><ref refid="group__window_1gga795d7d5e2f2a4f38b16b95e0e78cb626a4c614360da93c0a041b22e537de151eb" kindref="member">U</ref><sp/>rhs)<sp/>{</highlight></codeline>
<codeline lineno="346"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structgf_1_1_vector" kindref="compound">Vector&lt;typename std::common_type&lt;T,U&gt;::type</ref>,<sp/><ref refid="group__window_1gga795d7d5e2f2a4f38b16b95e0e78cb626a8d9c307cb7f3c4a32822a51922d1ceaa" kindref="member">N</ref>&gt;<sp/>out;</highlight></codeline>
<codeline lineno="347"><highlight class="normal"></highlight></codeline>
<codeline lineno="348"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(std::size_t<sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/><ref refid="group__window_1gga795d7d5e2f2a4f38b16b95e0e78cb626a8d9c307cb7f3c4a32822a51922d1ceaa" kindref="member">N</ref>;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="349"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>out.<ref refid="structgf_1_1_vector_1a247825a4b27adde52e67107d87987ca8" kindref="member">data</ref>[i]<sp/>=<sp/>lhs.<ref refid="structgf_1_1_vector_1a247825a4b27adde52e67107d87987ca8" kindref="member">data</ref>[i]<sp/>/<sp/>rhs;</highlight></codeline>
<codeline lineno="350"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="351"><highlight class="normal"></highlight></codeline>
<codeline lineno="352"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>out;</highlight></codeline>
<codeline lineno="353"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="354"><highlight class="normal"></highlight></codeline>
<codeline lineno="359"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>U,<sp/>std::</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>N&gt;</highlight></codeline>
<codeline lineno="360"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="361" refid="structgf_1_1_vector_1a9efbe36172735f3ea47b292dee469c0c" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="structgf_1_1_vector" kindref="compound">Vector&lt;T, N&gt;</ref>&amp;<sp/><ref refid="structgf_1_1_vector_1a9efbe36172735f3ea47b292dee469c0c" kindref="member">operator/=</ref>(<ref refid="structgf_1_1_vector" kindref="compound">Vector&lt;T, N&gt;</ref>&amp;<sp/>lhs,<sp/><ref refid="group__window_1gga795d7d5e2f2a4f38b16b95e0e78cb626a4c614360da93c0a041b22e537de151eb" kindref="member">U</ref><sp/>rhs)<sp/>{</highlight></codeline>
<codeline lineno="362"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(std::size_t<sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/><ref refid="group__window_1gga795d7d5e2f2a4f38b16b95e0e78cb626a8d9c307cb7f3c4a32822a51922d1ceaa" kindref="member">N</ref>;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="363"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>lhs.<ref refid="structgf_1_1_vector_1a247825a4b27adde52e67107d87987ca8" kindref="member">data</ref>[i]<sp/>/=<sp/>rhs;</highlight></codeline>
<codeline lineno="364"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="365"><highlight class="normal"></highlight></codeline>
<codeline lineno="366"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>lhs;</highlight></codeline>
<codeline lineno="367"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="368"><highlight class="normal"></highlight></codeline>
<codeline lineno="373"><highlight class="normal"><sp/><sp/>template&lt;typename<sp/>T,<sp/>typename<sp/>U,<sp/>std::size_t<sp/>N,<sp/>typename<sp/>E<sp/>=<sp/>typename<sp/>std::enable_if&lt;std::is_arithmetic&lt;T&gt;::value,<sp/><ref refid="group__window_1gga795d7d5e2f2a4f38b16b95e0e78cb626ab9ece18c950afbfa6b0fdbfa4ff731d3" kindref="member">T</ref>&gt;::type&gt;</highlight></codeline>
<codeline lineno="374"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="375" refid="structgf_1_1_vector_1abc1f8173b7503ffbe19f780ff262acd1" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="structgf_1_1_vector" kindref="compound">Vector&lt;typename std::common_type&lt;T,U&gt;::type</ref>,<sp/><ref refid="group__window_1gga795d7d5e2f2a4f38b16b95e0e78cb626a8d9c307cb7f3c4a32822a51922d1ceaa" kindref="member">N</ref>&gt;<sp/><ref refid="structgf_1_1_vector_1abc1f8173b7503ffbe19f780ff262acd1" kindref="member">operator/</ref>(<ref refid="group__window_1gga795d7d5e2f2a4f38b16b95e0e78cb626ab9ece18c950afbfa6b0fdbfa4ff731d3" kindref="member">T</ref><sp/>lhs,<sp/><ref refid="structgf_1_1_vector" kindref="compound">Vector&lt;U, N&gt;</ref><sp/>rhs)<sp/>{</highlight></codeline>
<codeline lineno="376"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structgf_1_1_vector" kindref="compound">Vector&lt;typename std::common_type&lt;T,U&gt;::type</ref>,<sp/><ref refid="group__window_1gga795d7d5e2f2a4f38b16b95e0e78cb626a8d9c307cb7f3c4a32822a51922d1ceaa" kindref="member">N</ref>&gt;<sp/>out;</highlight></codeline>
<codeline lineno="377"><highlight class="normal"></highlight></codeline>
<codeline lineno="378"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(std::size_t<sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/><ref refid="group__window_1gga795d7d5e2f2a4f38b16b95e0e78cb626a8d9c307cb7f3c4a32822a51922d1ceaa" kindref="member">N</ref>;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="379"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>out.<ref refid="structgf_1_1_vector_1a247825a4b27adde52e67107d87987ca8" kindref="member">data</ref>[i]<sp/>=<sp/>lhs<sp/>/<sp/>rhs.<ref refid="structgf_1_1_vector_1a247825a4b27adde52e67107d87987ca8" kindref="member">data</ref>[i];</highlight></codeline>
<codeline lineno="380"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="381"><highlight class="normal"></highlight></codeline>
<codeline lineno="382"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>out;</highlight></codeline>
<codeline lineno="383"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="384"><highlight class="normal"></highlight></codeline>
<codeline lineno="389"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;std::</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>N&gt;</highlight></codeline>
<codeline lineno="390"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="391" refid="structgf_1_1_vector_1a21f5f97b31b1fe83154a4220ca1c294f" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="structgf_1_1_vector" kindref="compound">Vector&lt;bool, N&gt;</ref><sp/><ref refid="structgf_1_1_vector_1a21f5f97b31b1fe83154a4220ca1c294f" kindref="member">operator||</ref>(<ref refid="structgf_1_1_vector" kindref="compound">Vector&lt;bool, N&gt;</ref><sp/>lhs,<sp/><ref refid="structgf_1_1_vector" kindref="compound">Vector&lt;bool, N&gt;</ref><sp/>rhs)<sp/>{</highlight></codeline>
<codeline lineno="392"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structgf_1_1_vector" kindref="compound">Vector&lt;bool, N&gt;</ref><sp/>out;</highlight></codeline>
<codeline lineno="393"><highlight class="normal"></highlight></codeline>
<codeline lineno="394"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(std::size_t<sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/><ref refid="group__window_1gga795d7d5e2f2a4f38b16b95e0e78cb626a8d9c307cb7f3c4a32822a51922d1ceaa" kindref="member">N</ref>;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="395"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>out.<ref refid="structgf_1_1_vector_1a247825a4b27adde52e67107d87987ca8" kindref="member">data</ref>[i]<sp/>=<sp/>lhs.<ref refid="structgf_1_1_vector_1a247825a4b27adde52e67107d87987ca8" kindref="member">data</ref>[i]<sp/>||<sp/>rhs.<ref refid="structgf_1_1_vector_1a247825a4b27adde52e67107d87987ca8" kindref="member">data</ref>[i];</highlight></codeline>
<codeline lineno="396"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="397"><highlight class="normal"></highlight></codeline>
<codeline lineno="398"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>out;</highlight></codeline>
<codeline lineno="399"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="400"><highlight class="normal"></highlight></codeline>
<codeline lineno="405"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;std::</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>N&gt;</highlight></codeline>
<codeline lineno="406"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="407" refid="structgf_1_1_vector_1a564559a8e1875530649fa57c59af24f0" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="structgf_1_1_vector" kindref="compound">Vector&lt;bool, N&gt;</ref><sp/>operator&amp;&amp;(<ref refid="structgf_1_1_vector" kindref="compound">Vector&lt;bool, N&gt;</ref><sp/>lhs,<sp/><ref refid="structgf_1_1_vector" kindref="compound">Vector&lt;bool, N&gt;</ref><sp/>rhs)<sp/>{</highlight></codeline>
<codeline lineno="408"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structgf_1_1_vector" kindref="compound">Vector&lt;bool, N&gt;</ref><sp/>out;</highlight></codeline>
<codeline lineno="409"><highlight class="normal"></highlight></codeline>
<codeline lineno="410"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(std::size_t<sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/><ref refid="group__window_1gga795d7d5e2f2a4f38b16b95e0e78cb626a8d9c307cb7f3c4a32822a51922d1ceaa" kindref="member">N</ref>;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="411"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>out.<ref refid="structgf_1_1_vector_1a247825a4b27adde52e67107d87987ca8" kindref="member">data</ref>[i]<sp/>=<sp/>lhs.<ref refid="structgf_1_1_vector_1a247825a4b27adde52e67107d87987ca8" kindref="member">data</ref>[i]<sp/>&amp;&amp;<sp/>rhs.<ref refid="structgf_1_1_vector_1a247825a4b27adde52e67107d87987ca8" kindref="member">data</ref>[i];</highlight></codeline>
<codeline lineno="412"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="413"><highlight class="normal"></highlight></codeline>
<codeline lineno="414"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>out;</highlight></codeline>
<codeline lineno="415"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="416"><highlight class="normal"></highlight></codeline>
<codeline lineno="429"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T,<sp/>std::</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>N&gt;</highlight></codeline>
<codeline lineno="430"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="431" refid="structgf_1_1_vector_1a85c05c082b028916436d768e0dc33a00" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="group__window_1gga795d7d5e2f2a4f38b16b95e0e78cb626ab9ece18c950afbfa6b0fdbfa4ff731d3" kindref="member">T</ref><sp/><ref refid="structgf_1_1_vector_1a85c05c082b028916436d768e0dc33a00" kindref="member">dot</ref>(<ref refid="structgf_1_1_vector" kindref="compound">Vector&lt;T, N&gt;</ref><sp/>lhs,<sp/><ref refid="structgf_1_1_vector" kindref="compound">Vector&lt;T, N&gt;</ref><sp/>rhs)<sp/>{</highlight></codeline>
<codeline lineno="432"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__window_1gga795d7d5e2f2a4f38b16b95e0e78cb626ab9ece18c950afbfa6b0fdbfa4ff731d3" kindref="member">T</ref><sp/>out{0};</highlight></codeline>
<codeline lineno="433"><highlight class="normal"></highlight></codeline>
<codeline lineno="434"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(std::size_t<sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/><ref refid="group__window_1gga795d7d5e2f2a4f38b16b95e0e78cb626a8d9c307cb7f3c4a32822a51922d1ceaa" kindref="member">N</ref>;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="435"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>out<sp/>+=<sp/>lhs.<ref refid="structgf_1_1_vector_1a247825a4b27adde52e67107d87987ca8" kindref="member">data</ref>[i]<sp/>*<sp/>rhs.<ref refid="structgf_1_1_vector_1a247825a4b27adde52e67107d87987ca8" kindref="member">data</ref>[i];</highlight></codeline>
<codeline lineno="436"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="437"><highlight class="normal"></highlight></codeline>
<codeline lineno="438"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>out;</highlight></codeline>
<codeline lineno="439"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="440"><highlight class="normal"></highlight></codeline>
<codeline lineno="445"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T,<sp/>std::</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>N&gt;</highlight></codeline>
<codeline lineno="446"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="447" refid="structgf_1_1_vector_1a4472d084dcbc697572b455b5fc107140" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="structgf_1_1_vector" kindref="compound">Vector&lt;T, N&gt;</ref><sp/><ref refid="structgf_1_1_vector_1a4472d084dcbc697572b455b5fc107140" kindref="member">min</ref>(<ref refid="structgf_1_1_vector" kindref="compound">Vector&lt;T, N&gt;</ref><sp/>lhs,<sp/><ref refid="structgf_1_1_vector" kindref="compound">Vector&lt;T, N&gt;</ref><sp/>rhs)<sp/>{</highlight></codeline>
<codeline lineno="448"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structgf_1_1_vector" kindref="compound">Vector&lt;T, N&gt;</ref><sp/>out;</highlight></codeline>
<codeline lineno="449"><highlight class="normal"></highlight></codeline>
<codeline lineno="450"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(std::size_t<sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/><ref refid="group__window_1gga795d7d5e2f2a4f38b16b95e0e78cb626a8d9c307cb7f3c4a32822a51922d1ceaa" kindref="member">N</ref>;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="451"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>out.<ref refid="structgf_1_1_vector_1a247825a4b27adde52e67107d87987ca8" kindref="member">data</ref>[i]<sp/>=<sp/>std::min(lhs.<ref refid="structgf_1_1_vector_1a247825a4b27adde52e67107d87987ca8" kindref="member">data</ref>[i],<sp/>rhs.<ref refid="structgf_1_1_vector_1a247825a4b27adde52e67107d87987ca8" kindref="member">data</ref>[i]);</highlight></codeline>
<codeline lineno="452"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="453"><highlight class="normal"></highlight></codeline>
<codeline lineno="454"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>out;</highlight></codeline>
<codeline lineno="455"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="456"><highlight class="normal"></highlight></codeline>
<codeline lineno="461"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T,<sp/>std::</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>N&gt;</highlight></codeline>
<codeline lineno="462"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="463" refid="structgf_1_1_vector_1a5a4cbdb80d7c0e4b36833df472ca7180" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="structgf_1_1_vector" kindref="compound">Vector&lt;T, N&gt;</ref><sp/><ref refid="structgf_1_1_vector_1a5a4cbdb80d7c0e4b36833df472ca7180" kindref="member">max</ref>(<ref refid="structgf_1_1_vector" kindref="compound">Vector&lt;T, N&gt;</ref><sp/>lhs,<sp/><ref refid="structgf_1_1_vector" kindref="compound">Vector&lt;T, N&gt;</ref><sp/>rhs)<sp/>{</highlight></codeline>
<codeline lineno="464"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structgf_1_1_vector" kindref="compound">Vector&lt;T, N&gt;</ref><sp/>out;</highlight></codeline>
<codeline lineno="465"><highlight class="normal"></highlight></codeline>
<codeline lineno="466"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(std::size_t<sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/><ref refid="group__window_1gga795d7d5e2f2a4f38b16b95e0e78cb626a8d9c307cb7f3c4a32822a51922d1ceaa" kindref="member">N</ref>;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="467"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>out.<ref refid="structgf_1_1_vector_1a247825a4b27adde52e67107d87987ca8" kindref="member">data</ref>[i]<sp/>=<sp/>std::max(lhs.<ref refid="structgf_1_1_vector_1a247825a4b27adde52e67107d87987ca8" kindref="member">data</ref>[i],<sp/>rhs.<ref refid="structgf_1_1_vector_1a247825a4b27adde52e67107d87987ca8" kindref="member">data</ref>[i]);</highlight></codeline>
<codeline lineno="468"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="469"><highlight class="normal"></highlight></codeline>
<codeline lineno="470"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>out;</highlight></codeline>
<codeline lineno="471"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="472"><highlight class="normal"></highlight></codeline>
<codeline lineno="477"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T,<sp/>std::</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>N&gt;</highlight></codeline>
<codeline lineno="478"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="479" refid="structgf_1_1_vector_1a68a904f7008f374c70a3da29cdbfa35a" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="structgf_1_1_vector" kindref="compound">Vector&lt;T, N&gt;</ref><sp/><ref refid="structgf_1_1_vector_1a68a904f7008f374c70a3da29cdbfa35a" kindref="member">abs</ref>(<ref refid="structgf_1_1_vector" kindref="compound">Vector&lt;T, N&gt;</ref><sp/>val)<sp/>{</highlight></codeline>
<codeline lineno="480"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structgf_1_1_vector" kindref="compound">Vector&lt;T, N&gt;</ref><sp/>out;</highlight></codeline>
<codeline lineno="481"><highlight class="normal"></highlight></codeline>
<codeline lineno="482"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(std::size_t<sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/><ref refid="group__window_1gga795d7d5e2f2a4f38b16b95e0e78cb626a8d9c307cb7f3c4a32822a51922d1ceaa" kindref="member">N</ref>;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="483"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>out.<ref refid="structgf_1_1_vector_1a247825a4b27adde52e67107d87987ca8" kindref="member">data</ref>[i]<sp/>=<sp/>std::abs(val.<ref refid="structgf_1_1_vector_1a247825a4b27adde52e67107d87987ca8" kindref="member">data</ref>[i]);</highlight></codeline>
<codeline lineno="484"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="485"><highlight class="normal"></highlight></codeline>
<codeline lineno="486"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>out;</highlight></codeline>
<codeline lineno="487"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="488"><highlight class="normal"></highlight></codeline>
<codeline lineno="493"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T,<sp/>std::</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>N&gt;</highlight></codeline>
<codeline lineno="494"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="495" refid="structgf_1_1_vector_1ac03ffe695fc3042053f55e576581a697" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="structgf_1_1_vector" kindref="compound">Vector&lt;int, N&gt;</ref><sp/><ref refid="structgf_1_1_vector_1ac03ffe695fc3042053f55e576581a697" kindref="member">sign</ref>(<ref refid="structgf_1_1_vector" kindref="compound">Vector&lt;T, N&gt;</ref><sp/>val)<sp/>{</highlight></codeline>
<codeline lineno="496"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structgf_1_1_vector" kindref="compound">Vector&lt;int, N&gt;</ref><sp/>out;</highlight></codeline>
<codeline lineno="497"><highlight class="normal"></highlight></codeline>
<codeline lineno="498"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(std::size_t<sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/><ref refid="group__window_1gga795d7d5e2f2a4f38b16b95e0e78cb626a8d9c307cb7f3c4a32822a51922d1ceaa" kindref="member">N</ref>;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="499"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>out.<ref refid="structgf_1_1_vector_1a247825a4b27adde52e67107d87987ca8" kindref="member">data</ref>[i]<sp/>=<sp/><ref refid="group__core_1ga55d7afb6ae7f894776bb0244465ac497" kindref="member">gf::sign</ref>(val.<ref refid="structgf_1_1_vector_1a247825a4b27adde52e67107d87987ca8" kindref="member">data</ref>[i]);</highlight></codeline>
<codeline lineno="500"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="501"><highlight class="normal"></highlight></codeline>
<codeline lineno="502"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>out;</highlight></codeline>
<codeline lineno="503"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="504"><highlight class="normal"></highlight></codeline>
<codeline lineno="509"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T,<sp/>std::</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>N&gt;</highlight></codeline>
<codeline lineno="510"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="511" refid="structgf_1_1_vector_1adad3f5ad89d4b066415deb088a0212da" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="structgf_1_1_vector" kindref="compound">Vector&lt;bool, N&gt;</ref><sp/><ref refid="structgf_1_1_vector_1adad3f5ad89d4b066415deb088a0212da" kindref="member">equals</ref>(<ref refid="structgf_1_1_vector" kindref="compound">Vector&lt;T, N&gt;</ref><sp/>lhs,<sp/><ref refid="structgf_1_1_vector" kindref="compound">Vector&lt;T, N&gt;</ref><sp/>rhs)<sp/>{</highlight></codeline>
<codeline lineno="512"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structgf_1_1_vector" kindref="compound">Vector&lt;bool, N&gt;</ref><sp/>out;</highlight></codeline>
<codeline lineno="513"><highlight class="normal"></highlight></codeline>
<codeline lineno="514"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(std::size_t<sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/><ref refid="group__window_1gga795d7d5e2f2a4f38b16b95e0e78cb626a8d9c307cb7f3c4a32822a51922d1ceaa" kindref="member">N</ref>;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="515"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>out.<ref refid="structgf_1_1_vector_1a247825a4b27adde52e67107d87987ca8" kindref="member">data</ref>[i]<sp/>=<sp/>(lhs.<ref refid="structgf_1_1_vector_1a247825a4b27adde52e67107d87987ca8" kindref="member">data</ref>[i]<sp/>==<sp/>rhs.<ref refid="structgf_1_1_vector_1a247825a4b27adde52e67107d87987ca8" kindref="member">data</ref>[i]);</highlight></codeline>
<codeline lineno="516"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="517"><highlight class="normal"></highlight></codeline>
<codeline lineno="518"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>out;</highlight></codeline>
<codeline lineno="519"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="520"><highlight class="normal"></highlight></codeline>
<codeline lineno="525"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T,<sp/>std::</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>N&gt;</highlight></codeline>
<codeline lineno="526"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="527" refid="structgf_1_1_vector_1a6c3c7d536643aeeaec15a9f488aca06e" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="structgf_1_1_vector" kindref="compound">Vector&lt;bool, N&gt;</ref><sp/><ref refid="structgf_1_1_vector_1a6c3c7d536643aeeaec15a9f488aca06e" kindref="member">lessThan</ref>(<ref refid="structgf_1_1_vector" kindref="compound">Vector&lt;T, N&gt;</ref><sp/>lhs,<sp/><ref refid="structgf_1_1_vector" kindref="compound">Vector&lt;T, N&gt;</ref><sp/>rhs)<sp/>{</highlight></codeline>
<codeline lineno="528"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structgf_1_1_vector" kindref="compound">Vector&lt;bool, N&gt;</ref><sp/>out;</highlight></codeline>
<codeline lineno="529"><highlight class="normal"></highlight></codeline>
<codeline lineno="530"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(std::size_t<sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/><ref refid="group__window_1gga795d7d5e2f2a4f38b16b95e0e78cb626a8d9c307cb7f3c4a32822a51922d1ceaa" kindref="member">N</ref>;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="531"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>out.<ref refid="structgf_1_1_vector_1a247825a4b27adde52e67107d87987ca8" kindref="member">data</ref>[i]<sp/>=<sp/>(lhs.<ref refid="structgf_1_1_vector_1a247825a4b27adde52e67107d87987ca8" kindref="member">data</ref>[i]<sp/>&lt;<sp/>rhs.<ref refid="structgf_1_1_vector_1a247825a4b27adde52e67107d87987ca8" kindref="member">data</ref>[i]);</highlight></codeline>
<codeline lineno="532"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="533"><highlight class="normal"></highlight></codeline>
<codeline lineno="534"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>out;</highlight></codeline>
<codeline lineno="535"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="536"><highlight class="normal"></highlight></codeline>
<codeline lineno="541"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T,<sp/>std::</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>N&gt;</highlight></codeline>
<codeline lineno="542"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="543" refid="structgf_1_1_vector_1a1f6fb725344c746cd7ca54519df1b5e8" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="structgf_1_1_vector" kindref="compound">Vector&lt;bool, N&gt;</ref><sp/><ref refid="structgf_1_1_vector_1a1f6fb725344c746cd7ca54519df1b5e8" kindref="member">greaterThan</ref>(<ref refid="structgf_1_1_vector" kindref="compound">Vector&lt;T, N&gt;</ref><sp/>lhs,<sp/><ref refid="structgf_1_1_vector" kindref="compound">Vector&lt;T, N&gt;</ref><sp/>rhs)<sp/>{</highlight></codeline>
<codeline lineno="544"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structgf_1_1_vector" kindref="compound">Vector&lt;bool, N&gt;</ref><sp/>out;</highlight></codeline>
<codeline lineno="545"><highlight class="normal"></highlight></codeline>
<codeline lineno="546"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(std::size_t<sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/><ref refid="group__window_1gga795d7d5e2f2a4f38b16b95e0e78cb626a8d9c307cb7f3c4a32822a51922d1ceaa" kindref="member">N</ref>;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="547"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>out.<ref refid="structgf_1_1_vector_1a247825a4b27adde52e67107d87987ca8" kindref="member">data</ref>[i]<sp/>=<sp/>(lhs.<ref refid="structgf_1_1_vector_1a247825a4b27adde52e67107d87987ca8" kindref="member">data</ref>[i]<sp/>&gt;<sp/>rhs.<ref refid="structgf_1_1_vector_1a247825a4b27adde52e67107d87987ca8" kindref="member">data</ref>[i]);</highlight></codeline>
<codeline lineno="548"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="549"><highlight class="normal"></highlight></codeline>
<codeline lineno="550"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>out;</highlight></codeline>
<codeline lineno="551"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="552"><highlight class="normal"></highlight></codeline>
<codeline lineno="557"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T,<sp/>std::</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>N&gt;</highlight></codeline>
<codeline lineno="558"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="559" refid="structgf_1_1_vector_1ae03b8997d14c491f8ac6ed43d819a92f" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="structgf_1_1_vector" kindref="compound">Vector&lt;T, N&gt;</ref><sp/><ref refid="structgf_1_1_vector_1ae03b8997d14c491f8ac6ed43d819a92f" kindref="member">select</ref>(<ref refid="structgf_1_1_vector" kindref="compound">Vector&lt;bool, N&gt;</ref><sp/>cond,<sp/><ref refid="structgf_1_1_vector" kindref="compound">Vector&lt;T, N&gt;</ref><sp/>lhs,<sp/><ref refid="structgf_1_1_vector" kindref="compound">Vector&lt;T, N&gt;</ref><sp/>rhs)<sp/>{</highlight></codeline>
<codeline lineno="560"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structgf_1_1_vector" kindref="compound">Vector&lt;T, N&gt;</ref><sp/>out;</highlight></codeline>
<codeline lineno="561"><highlight class="normal"></highlight></codeline>
<codeline lineno="562"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(std::size_t<sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/><ref refid="group__window_1gga795d7d5e2f2a4f38b16b95e0e78cb626a8d9c307cb7f3c4a32822a51922d1ceaa" kindref="member">N</ref>;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="563"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>out.<ref refid="structgf_1_1_vector_1a247825a4b27adde52e67107d87987ca8" kindref="member">data</ref>[i]<sp/>=<sp/>(cond.<ref refid="structgf_1_1_vector_1a247825a4b27adde52e67107d87987ca8" kindref="member">data</ref>[i]<sp/>?<sp/>lhs.<ref refid="structgf_1_1_vector_1a247825a4b27adde52e67107d87987ca8" kindref="member">data</ref>[i]<sp/>:<sp/>rhs.<ref refid="structgf_1_1_vector_1a247825a4b27adde52e67107d87987ca8" kindref="member">data</ref>[i]);</highlight></codeline>
<codeline lineno="564"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="565"><highlight class="normal"></highlight></codeline>
<codeline lineno="566"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>out;</highlight></codeline>
<codeline lineno="567"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="568"><highlight class="normal"></highlight></codeline>
<codeline lineno="576"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T,<sp/>std::</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>N&gt;</highlight></codeline>
<codeline lineno="577"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="578" refid="structgf_1_1_vector_1a3bf31cce3551be5d6d1966f83050d483" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="structgf_1_1_vector" kindref="compound">Vector&lt;T, N&gt;</ref><sp/><ref refid="structgf_1_1_vector_1a3bf31cce3551be5d6d1966f83050d483" kindref="member">clamp</ref>(<ref refid="structgf_1_1_vector" kindref="compound">Vector&lt;T, N&gt;</ref><sp/>val,<sp/><ref refid="structgf_1_1_vector" kindref="compound">Vector&lt;T, N&gt;</ref><sp/>lo,<sp/><ref refid="structgf_1_1_vector" kindref="compound">Vector&lt;T, N&gt;</ref><sp/>hi)<sp/>{</highlight></codeline>
<codeline lineno="579"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structgf_1_1_vector" kindref="compound">Vector&lt;T, N&gt;</ref><sp/>out;</highlight></codeline>
<codeline lineno="580"><highlight class="normal"></highlight></codeline>
<codeline lineno="581"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(std::size_t<sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/><ref refid="group__window_1gga795d7d5e2f2a4f38b16b95e0e78cb626a8d9c307cb7f3c4a32822a51922d1ceaa" kindref="member">N</ref>;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="582"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>out.<ref refid="structgf_1_1_vector_1a247825a4b27adde52e67107d87987ca8" kindref="member">data</ref>[i]<sp/>=<sp/><ref refid="group__core_1ga671bdda5a52c335e68d391147c70cc16" kindref="member">clamp</ref>(val.<ref refid="structgf_1_1_vector_1a247825a4b27adde52e67107d87987ca8" kindref="member">data</ref>[i],<sp/>lo.<ref refid="structgf_1_1_vector_1a247825a4b27adde52e67107d87987ca8" kindref="member">data</ref>[i],<sp/>hi.<ref refid="structgf_1_1_vector_1a247825a4b27adde52e67107d87987ca8" kindref="member">data</ref>[i]);</highlight></codeline>
<codeline lineno="583"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="584"><highlight class="normal"></highlight></codeline>
<codeline lineno="585"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>out;</highlight></codeline>
<codeline lineno="586"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="587"><highlight class="normal"></highlight></codeline>
<codeline lineno="594"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T,<sp/>std::</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>N&gt;</highlight></codeline>
<codeline lineno="595"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="596" refid="structgf_1_1_vector_1a210e3ef17e716b9c72fa9c0f35a19093" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="structgf_1_1_vector" kindref="compound">Vector&lt;T, N&gt;</ref><sp/><ref refid="structgf_1_1_vector_1a210e3ef17e716b9c72fa9c0f35a19093" kindref="member">clamp</ref>(<ref refid="structgf_1_1_vector" kindref="compound">Vector&lt;T, N&gt;</ref><sp/>val,<sp/><ref refid="group__window_1gga795d7d5e2f2a4f38b16b95e0e78cb626ab9ece18c950afbfa6b0fdbfa4ff731d3" kindref="member">T</ref><sp/>lo,<sp/><ref refid="group__window_1gga795d7d5e2f2a4f38b16b95e0e78cb626ab9ece18c950afbfa6b0fdbfa4ff731d3" kindref="member">T</ref><sp/>hi)<sp/>{</highlight></codeline>
<codeline lineno="597"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structgf_1_1_vector" kindref="compound">Vector&lt;T, N&gt;</ref><sp/>out;</highlight></codeline>
<codeline lineno="598"><highlight class="normal"></highlight></codeline>
<codeline lineno="599"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(std::size_t<sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/><ref refid="group__window_1gga795d7d5e2f2a4f38b16b95e0e78cb626a8d9c307cb7f3c4a32822a51922d1ceaa" kindref="member">N</ref>;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="600"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>out.<ref refid="structgf_1_1_vector_1a247825a4b27adde52e67107d87987ca8" kindref="member">data</ref>[i]<sp/>=<sp/><ref refid="group__core_1ga671bdda5a52c335e68d391147c70cc16" kindref="member">clamp</ref>(val.<ref refid="structgf_1_1_vector_1a247825a4b27adde52e67107d87987ca8" kindref="member">data</ref>[i],<sp/>lo,<sp/>hi);</highlight></codeline>
<codeline lineno="601"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="602"><highlight class="normal"></highlight></codeline>
<codeline lineno="603"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>out;</highlight></codeline>
<codeline lineno="604"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="605"><highlight class="normal"></highlight></codeline>
<codeline lineno="610"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>U,<sp/>std::</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>N&gt;</highlight></codeline>
<codeline lineno="611"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="612" refid="structgf_1_1_vector_1a49c2f35ee5198f5e17dc43dacac166e0" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="structgf_1_1_vector" kindref="compound">Vector&lt;T, N&gt;</ref><sp/><ref refid="structgf_1_1_vector_1a49c2f35ee5198f5e17dc43dacac166e0" kindref="member">lerp</ref>(<ref refid="structgf_1_1_vector" kindref="compound">Vector&lt;T, N&gt;</ref><sp/>lhs,<sp/><ref refid="structgf_1_1_vector" kindref="compound">Vector&lt;T, N&gt;</ref><sp/>rhs,<sp/><ref refid="group__window_1gga795d7d5e2f2a4f38b16b95e0e78cb626a4c614360da93c0a041b22e537de151eb" kindref="member">U</ref><sp/>t)<sp/>{</highlight></codeline>
<codeline lineno="613"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structgf_1_1_vector" kindref="compound">Vector&lt;T, N&gt;</ref><sp/>out;</highlight></codeline>
<codeline lineno="614"><highlight class="normal"></highlight></codeline>
<codeline lineno="615"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(std::size_t<sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/><ref refid="group__window_1gga795d7d5e2f2a4f38b16b95e0e78cb626a8d9c307cb7f3c4a32822a51922d1ceaa" kindref="member">N</ref>;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="616"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>out.<ref refid="structgf_1_1_vector_1a247825a4b27adde52e67107d87987ca8" kindref="member">data</ref>[i]<sp/>=<sp/><ref refid="group__core_1gac274bd90d63716ed5b514331c90288e9" kindref="member">lerp</ref>(lhs.<ref refid="structgf_1_1_vector_1a247825a4b27adde52e67107d87987ca8" kindref="member">data</ref>[i],<sp/>rhs.<ref refid="structgf_1_1_vector_1a247825a4b27adde52e67107d87987ca8" kindref="member">data</ref>[i],<sp/>t);</highlight></codeline>
<codeline lineno="617"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="618"><highlight class="normal"></highlight></codeline>
<codeline lineno="619"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>out;</highlight></codeline>
<codeline lineno="620"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>return<sp/>(1<sp/>-<sp/>t)<sp/>*<sp/>lhs<sp/>+<sp/>t<sp/>*<sp/>rhs;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="621"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="622"><highlight class="normal"></highlight></codeline>
<codeline lineno="639"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T,<sp/>std::</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>N&gt;</highlight></codeline>
<codeline lineno="640"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="641" refid="structgf_1_1_vector_1a13e84f24664d006f2fff11c89059ef52" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="group__window_1gga795d7d5e2f2a4f38b16b95e0e78cb626ab9ece18c950afbfa6b0fdbfa4ff731d3" kindref="member">T</ref><sp/><ref refid="structgf_1_1_vector_1a13e84f24664d006f2fff11c89059ef52" kindref="member">manhattanLength</ref>(<ref refid="structgf_1_1_vector" kindref="compound">Vector&lt;T, N&gt;</ref><sp/>vec)<sp/>{</highlight></codeline>
<codeline lineno="642"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__window_1gga795d7d5e2f2a4f38b16b95e0e78cb626ab9ece18c950afbfa6b0fdbfa4ff731d3" kindref="member">T</ref><sp/>out{0};</highlight></codeline>
<codeline lineno="643"><highlight class="normal"></highlight></codeline>
<codeline lineno="644"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(std::size_t<sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/><ref refid="group__window_1gga795d7d5e2f2a4f38b16b95e0e78cb626a8d9c307cb7f3c4a32822a51922d1ceaa" kindref="member">N</ref>;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="645"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>out<sp/>+=<sp/>std::abs(vec.<ref refid="structgf_1_1_vector_1a247825a4b27adde52e67107d87987ca8" kindref="member">data</ref>[i]);</highlight></codeline>
<codeline lineno="646"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="647"><highlight class="normal"></highlight></codeline>
<codeline lineno="648"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>out;</highlight></codeline>
<codeline lineno="649"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="650"><highlight class="normal"></highlight></codeline>
<codeline lineno="665"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T,<sp/>std::</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>N&gt;</highlight></codeline>
<codeline lineno="666"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="667" refid="structgf_1_1_vector_1a1955a31725e521021b0be0ab2871be50" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="group__window_1gga795d7d5e2f2a4f38b16b95e0e78cb626ab9ece18c950afbfa6b0fdbfa4ff731d3" kindref="member">T</ref><sp/><ref refid="structgf_1_1_vector_1a1955a31725e521021b0be0ab2871be50" kindref="member">squareLength</ref>(<ref refid="structgf_1_1_vector" kindref="compound">Vector&lt;T, N&gt;</ref><sp/>vec)<sp/>{</highlight></codeline>
<codeline lineno="668"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__window_1gga795d7d5e2f2a4f38b16b95e0e78cb626ab9ece18c950afbfa6b0fdbfa4ff731d3" kindref="member">T</ref><sp/>out{0};</highlight></codeline>
<codeline lineno="669"><highlight class="normal"></highlight></codeline>
<codeline lineno="670"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(std::size_t<sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/><ref refid="group__window_1gga795d7d5e2f2a4f38b16b95e0e78cb626a8d9c307cb7f3c4a32822a51922d1ceaa" kindref="member">N</ref>;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="671"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>out<sp/>+=<sp/><ref refid="group__core_1ga0e22be4ddd625e4c235dbf0ef2d1f43f" kindref="member">square</ref>(vec.<ref refid="structgf_1_1_vector_1a247825a4b27adde52e67107d87987ca8" kindref="member">data</ref>[i]);</highlight></codeline>
<codeline lineno="672"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="673"><highlight class="normal"></highlight></codeline>
<codeline lineno="674"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>out;</highlight></codeline>
<codeline lineno="675"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="676"><highlight class="normal"></highlight></codeline>
<codeline lineno="693"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T,<sp/>std::</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>N&gt;</highlight></codeline>
<codeline lineno="694"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="695" refid="structgf_1_1_vector_1a5b81f7458166ea6cf9a7365b947cf6a0" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="group__window_1gga795d7d5e2f2a4f38b16b95e0e78cb626ab9ece18c950afbfa6b0fdbfa4ff731d3" kindref="member">T</ref><sp/><ref refid="structgf_1_1_vector_1a5b81f7458166ea6cf9a7365b947cf6a0" kindref="member">euclideanLength</ref>(<ref refid="structgf_1_1_vector" kindref="compound">Vector&lt;T, N&gt;</ref><sp/>vec)<sp/>{</highlight></codeline>
<codeline lineno="696"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>std::sqrt(squareLength(vec));</highlight></codeline>
<codeline lineno="697"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="698"><highlight class="normal"></highlight></codeline>
<codeline lineno="699"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>DOXYGEN_SHOULD_SKIP_THIS</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="700"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>specializations<sp/>of<sp/>euclideanLength<sp/>for<sp/>Vector2f<sp/>and<sp/>Vector2d<sp/>using<sp/>std::hypot</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="701"><highlight class="normal"></highlight></codeline>
<codeline lineno="702"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;&gt;</highlight></codeline>
<codeline lineno="703"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="704"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>euclideanLength&lt;float,<sp/>2&gt;(<ref refid="structgf_1_1_vector" kindref="compound">Vector&lt;float, 2&gt;</ref><sp/>vec)<sp/>{</highlight></codeline>
<codeline lineno="705"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>std::hypot(vec.x,<sp/>vec.y);</highlight></codeline>
<codeline lineno="706"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="707"><highlight class="normal"></highlight></codeline>
<codeline lineno="708"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;&gt;</highlight></codeline>
<codeline lineno="709"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="710"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>euclideanLength&lt;double,<sp/>2&gt;(<ref refid="structgf_1_1_vector" kindref="compound">Vector&lt;double, 2&gt;</ref><sp/>vec)<sp/>{</highlight></codeline>
<codeline lineno="711"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>std::hypot(vec.x,<sp/>vec.y);</highlight></codeline>
<codeline lineno="712"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="713"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="714"><highlight class="normal"></highlight></codeline>
<codeline lineno="731"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T,<sp/>std::</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>N&gt;</highlight></codeline>
<codeline lineno="732"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="733" refid="structgf_1_1_vector_1aafea65ac04f9577ddf229f2b67250db6" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="group__window_1gga795d7d5e2f2a4f38b16b95e0e78cb626ab9ece18c950afbfa6b0fdbfa4ff731d3" kindref="member">T</ref><sp/><ref refid="structgf_1_1_vector_1aafea65ac04f9577ddf229f2b67250db6" kindref="member">chebyshevLength</ref>(<ref refid="structgf_1_1_vector" kindref="compound">Vector&lt;T, N&gt;</ref><sp/>vec)<sp/>{</highlight></codeline>
<codeline lineno="734"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__window_1gga795d7d5e2f2a4f38b16b95e0e78cb626ab9ece18c950afbfa6b0fdbfa4ff731d3" kindref="member">T</ref><sp/>out<sp/>=<sp/>std::abs(vec.<ref refid="structgf_1_1_vector_1a247825a4b27adde52e67107d87987ca8" kindref="member">data</ref>[0]);</highlight></codeline>
<codeline lineno="735"><highlight class="normal"></highlight></codeline>
<codeline lineno="736"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(std::size_t<sp/>i<sp/>=<sp/>1;<sp/>i<sp/>&lt;<sp/><ref refid="group__window_1gga795d7d5e2f2a4f38b16b95e0e78cb626a8d9c307cb7f3c4a32822a51922d1ceaa" kindref="member">N</ref>;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="737"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>out<sp/>=<sp/>std::max(out,<sp/>std::abs(vec.<ref refid="structgf_1_1_vector_1a247825a4b27adde52e67107d87987ca8" kindref="member">data</ref>[i]));</highlight></codeline>
<codeline lineno="738"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="739"><highlight class="normal"></highlight></codeline>
<codeline lineno="740"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>out;</highlight></codeline>
<codeline lineno="741"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="742"><highlight class="normal"></highlight></codeline>
<codeline lineno="760"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T,<sp/>std::</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>N&gt;</highlight></codeline>
<codeline lineno="761"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="762" refid="structgf_1_1_vector_1a9e5d34e6962eb33c8d23a67c2a67a691" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="group__window_1gga795d7d5e2f2a4f38b16b95e0e78cb626ab9ece18c950afbfa6b0fdbfa4ff731d3" kindref="member">T</ref><sp/><ref refid="structgf_1_1_vector_1a9e5d34e6962eb33c8d23a67c2a67a691" kindref="member">naturalLength</ref>(<ref refid="structgf_1_1_vector" kindref="compound">Vector&lt;T, N&gt;</ref><sp/>vec)<sp/>{</highlight></codeline>
<codeline lineno="763"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>manhattanLength(vec)<sp/>+<sp/>squareLength(vec);</highlight></codeline>
<codeline lineno="764"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="765"><highlight class="normal"></highlight></codeline>
<codeline lineno="779"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T,<sp/>std::</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>N&gt;</highlight></codeline>
<codeline lineno="780"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="781" refid="structgf_1_1_vector_1ab7ac075b031168cc0333c60bf5f9ed91" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="group__window_1gga795d7d5e2f2a4f38b16b95e0e78cb626ab9ece18c950afbfa6b0fdbfa4ff731d3" kindref="member">T</ref><sp/><ref refid="structgf_1_1_vector_1ab7ac075b031168cc0333c60bf5f9ed91" kindref="member">manhattanDistance</ref>(<ref refid="structgf_1_1_vector" kindref="compound">Vector&lt;T, N&gt;</ref><sp/>lhs,<sp/><ref refid="structgf_1_1_vector" kindref="compound">Vector&lt;T, N&gt;</ref><sp/>rhs)<sp/>{</highlight></codeline>
<codeline lineno="782"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>manhattanLength(lhs<sp/>-<sp/>rhs);</highlight></codeline>
<codeline lineno="783"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="784"><highlight class="normal"></highlight></codeline>
<codeline lineno="798"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T,<sp/>std::</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>N&gt;</highlight></codeline>
<codeline lineno="799"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="800" refid="structgf_1_1_vector_1a6c2b906d7231d200eb766187b5f51936" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="group__window_1gga795d7d5e2f2a4f38b16b95e0e78cb626ab9ece18c950afbfa6b0fdbfa4ff731d3" kindref="member">T</ref><sp/><ref refid="structgf_1_1_vector_1a6c2b906d7231d200eb766187b5f51936" kindref="member">squareDistance</ref>(<ref refid="structgf_1_1_vector" kindref="compound">Vector&lt;T, N&gt;</ref><sp/>lhs,<sp/><ref refid="structgf_1_1_vector" kindref="compound">Vector&lt;T, N&gt;</ref><sp/>rhs)<sp/>{</highlight></codeline>
<codeline lineno="801"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>squareLength(lhs<sp/>-<sp/>rhs);</highlight></codeline>
<codeline lineno="802"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="803"><highlight class="normal"></highlight></codeline>
<codeline lineno="817"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T,<sp/>std::</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>N&gt;</highlight></codeline>
<codeline lineno="818"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="819" refid="structgf_1_1_vector_1a1bbcb2190ca4bd2fb435f1e74f00c7db" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="group__window_1gga795d7d5e2f2a4f38b16b95e0e78cb626ab9ece18c950afbfa6b0fdbfa4ff731d3" kindref="member">T</ref><sp/><ref refid="structgf_1_1_vector_1a1bbcb2190ca4bd2fb435f1e74f00c7db" kindref="member">euclideanDistance</ref>(<ref refid="structgf_1_1_vector" kindref="compound">Vector&lt;T, N&gt;</ref><sp/>lhs,<sp/><ref refid="structgf_1_1_vector" kindref="compound">Vector&lt;T, N&gt;</ref><sp/>rhs)<sp/>{</highlight></codeline>
<codeline lineno="820"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>euclideanLength(lhs<sp/>-<sp/>rhs);</highlight></codeline>
<codeline lineno="821"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="822"><highlight class="normal"></highlight></codeline>
<codeline lineno="836"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T,<sp/>std::</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>N&gt;</highlight></codeline>
<codeline lineno="837"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="838" refid="structgf_1_1_vector_1a8b7e8d54b4bfa8292c7927c5fc9f2386" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="group__window_1gga795d7d5e2f2a4f38b16b95e0e78cb626ab9ece18c950afbfa6b0fdbfa4ff731d3" kindref="member">T</ref><sp/><ref refid="structgf_1_1_vector_1a8b7e8d54b4bfa8292c7927c5fc9f2386" kindref="member">chebyshevDistance</ref>(<ref refid="structgf_1_1_vector" kindref="compound">Vector&lt;T, N&gt;</ref><sp/>lhs,<sp/><ref refid="structgf_1_1_vector" kindref="compound">Vector&lt;T, N&gt;</ref><sp/>rhs)<sp/>{</highlight></codeline>
<codeline lineno="839"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>chebyshevLength(lhs<sp/>-<sp/>rhs);</highlight></codeline>
<codeline lineno="840"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="841"><highlight class="normal"></highlight></codeline>
<codeline lineno="855"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T,<sp/>std::</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>N&gt;</highlight></codeline>
<codeline lineno="856"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="857" refid="structgf_1_1_vector_1aa156019ca0df0875f1905e24dc008d05" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="group__window_1gga795d7d5e2f2a4f38b16b95e0e78cb626ab9ece18c950afbfa6b0fdbfa4ff731d3" kindref="member">T</ref><sp/><ref refid="structgf_1_1_vector_1aa156019ca0df0875f1905e24dc008d05" kindref="member">naturalDistance</ref>(<ref refid="structgf_1_1_vector" kindref="compound">Vector&lt;T, N&gt;</ref><sp/>lhs,<sp/><ref refid="structgf_1_1_vector" kindref="compound">Vector&lt;T, N&gt;</ref><sp/>rhs)<sp/>{</highlight></codeline>
<codeline lineno="858"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>naturalLength(lhs<sp/>-<sp/>rhs);</highlight></codeline>
<codeline lineno="859"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="860"><highlight class="normal"></highlight></codeline>
<codeline lineno="876"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T,<sp/>std::</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>N&gt;</highlight></codeline>
<codeline lineno="877"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="878" refid="structgf_1_1_vector_1a4ff13e50288e1deeb196aa12df06d883" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="structgf_1_1_vector" kindref="compound">Vector&lt;T, N&gt;</ref><sp/><ref refid="structgf_1_1_vector_1a4ff13e50288e1deeb196aa12df06d883" kindref="member">normalize</ref>(<ref refid="structgf_1_1_vector" kindref="compound">Vector&lt;T, N&gt;</ref><sp/>vec)<sp/>{</highlight></codeline>
<codeline lineno="879"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__window_1gga795d7d5e2f2a4f38b16b95e0e78cb626ab9ece18c950afbfa6b0fdbfa4ff731d3" kindref="member">T</ref><sp/>length<sp/>=<sp/>euclideanLength(vec);</highlight></codeline>
<codeline lineno="880"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>vec<sp/>/<sp/>length;</highlight></codeline>
<codeline lineno="881"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="882"><highlight class="normal"></highlight></codeline>
<codeline lineno="890"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="891"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="892" refid="structgf_1_1_vector_1a1ba83d14d9bc5292fcf5ab39f596440b" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="structgf_1_1_vector_3_01_t_00_012_01_4" kindref="compound">Vector&lt;T, 2&gt;</ref><sp/><ref refid="structgf_1_1_vector_1a1ba83d14d9bc5292fcf5ab39f596440b" kindref="member">unit</ref>(<ref refid="group__window_1gga795d7d5e2f2a4f38b16b95e0e78cb626ab9ece18c950afbfa6b0fdbfa4ff731d3" kindref="member">T</ref><sp/><ref refid="group__core_1ga96c554e4534b63fd34ac457d563e7c32" kindref="member">angle</ref>)<sp/>{</highlight></codeline>
<codeline lineno="893"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>{<sp/>std::cos(angle),<sp/>std::sin(angle)<sp/>};</highlight></codeline>
<codeline lineno="894"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="895"><highlight class="normal"></highlight></codeline>
<codeline lineno="903"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="904"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="905" refid="structgf_1_1_vector_1a18e6f216b07d4883920dc5677a4fe92c" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="structgf_1_1_vector_1a18e6f216b07d4883920dc5677a4fe92c" kindref="member">angle</ref>(<ref refid="structgf_1_1_vector_3_01_t_00_012_01_4" kindref="compound">Vector&lt;T, 2&gt;</ref><sp/>vec)<sp/>{</highlight></codeline>
<codeline lineno="906"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>std::atan2(vec.<ref refid="structgf_1_1_vector_3_01_t_00_012_01_4_1acaa8c29e9f98b2a3b460c548cd7491cb" kindref="member">y</ref>,<sp/>vec.<ref refid="structgf_1_1_vector_3_01_t_00_012_01_4_1af7d887e66080275b723e2b4bf0c13471" kindref="member">x</ref>);</highlight></codeline>
<codeline lineno="907"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="908"><highlight class="normal"></highlight></codeline>
<codeline lineno="920"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="921"><highlight class="normal"><sp/><sp/>constexpr</highlight></codeline>
<codeline lineno="922" refid="structgf_1_1_vector_1a1aceef07438afe7fb1157efe584591cc" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="structgf_1_1_vector_3_01_t_00_012_01_4" kindref="compound">Vector&lt;T, 2&gt;</ref><sp/><ref refid="structgf_1_1_vector_1a1aceef07438afe7fb1157efe584591cc" kindref="member">perp</ref>(<ref refid="structgf_1_1_vector_3_01_t_00_012_01_4" kindref="compound">Vector&lt;T, 2&gt;</ref><sp/>vec)<sp/>{</highlight></codeline>
<codeline lineno="923"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>{<sp/>-vec.<ref refid="structgf_1_1_vector_3_01_t_00_012_01_4_1acaa8c29e9f98b2a3b460c548cd7491cb" kindref="member">y</ref>,<sp/>vec.<ref refid="structgf_1_1_vector_3_01_t_00_012_01_4_1af7d887e66080275b723e2b4bf0c13471" kindref="member">x</ref><sp/>};</highlight></codeline>
<codeline lineno="924"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="925"><highlight class="normal"></highlight></codeline>
<codeline lineno="939"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="940"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="941" refid="structgf_1_1_vector_1a3fac9c8378201cc97b5d09608e2fdf31" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="structgf_1_1_vector_3_01_t_00_012_01_4" kindref="compound">Vector&lt;T, 2&gt;</ref><sp/><ref refid="structgf_1_1_vector_1a3fac9c8378201cc97b5d09608e2fdf31" kindref="member">vectorTripleProduct</ref>(<ref refid="structgf_1_1_vector_3_01_t_00_012_01_4" kindref="compound">Vector&lt;T, 2&gt;</ref><sp/>a,<sp/><ref refid="structgf_1_1_vector_3_01_t_00_012_01_4" kindref="compound">Vector&lt;T, 2&gt;</ref><sp/>b,<sp/><ref refid="structgf_1_1_vector_3_01_t_00_012_01_4" kindref="compound">Vector&lt;T, 2&gt;</ref><sp/>c)<sp/>{</highlight></codeline>
<codeline lineno="942"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>dot(a,<sp/>c)<sp/>*<sp/>b<sp/>-<sp/>dot(a,<sp/>b)<sp/>*<sp/>c;</highlight></codeline>
<codeline lineno="943"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="944"><highlight class="normal"></highlight></codeline>
<codeline lineno="959"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="960"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="961" refid="structgf_1_1_vector_1a36ada12630bfc23d6720b07328ebdf40" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="structgf_1_1_vector_3_01_t_00_012_01_4" kindref="compound">Vector&lt;T, 2&gt;</ref><sp/><ref refid="structgf_1_1_vector_1a36ada12630bfc23d6720b07328ebdf40" kindref="member">inverseVectorTripleProduct</ref>(<ref refid="structgf_1_1_vector_3_01_t_00_012_01_4" kindref="compound">Vector&lt;T, 2&gt;</ref><sp/>a,<sp/><ref refid="structgf_1_1_vector_3_01_t_00_012_01_4" kindref="compound">Vector&lt;T, 2&gt;</ref><sp/>b,<sp/><ref refid="structgf_1_1_vector_3_01_t_00_012_01_4" kindref="compound">Vector&lt;T, 2&gt;</ref><sp/>c)<sp/>{</highlight></codeline>
<codeline lineno="962"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-<sp/>dot(c,<sp/>b)<sp/>*<sp/>a<sp/>+<sp/>dot(c,<sp/>a)<sp/>*<sp/>b;</highlight></codeline>
<codeline lineno="963"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="964"><highlight class="normal"></highlight></codeline>
<codeline lineno="982"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="983"><highlight class="normal"><sp/><sp/>constexpr</highlight></codeline>
<codeline lineno="984" refid="structgf_1_1_vector_1ac9c7b0f2832ebb10c93344ada3e196c2" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="group__window_1gga795d7d5e2f2a4f38b16b95e0e78cb626ab9ece18c950afbfa6b0fdbfa4ff731d3" kindref="member">T</ref><sp/><ref refid="structgf_1_1_vector_1ac9c7b0f2832ebb10c93344ada3e196c2" kindref="member">cross</ref>(<ref refid="structgf_1_1_vector_3_01_t_00_012_01_4" kindref="compound">Vector&lt;T, 2&gt;</ref><sp/>lhs,<sp/><ref refid="structgf_1_1_vector_3_01_t_00_012_01_4" kindref="compound">Vector&lt;T, 2&gt;</ref><sp/>rhs)<sp/>{</highlight></codeline>
<codeline lineno="985"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>lhs.<ref refid="structgf_1_1_vector_3_01_t_00_012_01_4_1af7d887e66080275b723e2b4bf0c13471" kindref="member">x</ref><sp/>*<sp/>rhs.<ref refid="structgf_1_1_vector_3_01_t_00_012_01_4_1acaa8c29e9f98b2a3b460c548cd7491cb" kindref="member">y</ref><sp/>-<sp/>lhs.<ref refid="structgf_1_1_vector_3_01_t_00_012_01_4_1acaa8c29e9f98b2a3b460c548cd7491cb" kindref="member">y</ref><sp/>*<sp/>rhs.<ref refid="structgf_1_1_vector_3_01_t_00_012_01_4_1af7d887e66080275b723e2b4bf0c13471" kindref="member">x</ref>;</highlight></codeline>
<codeline lineno="986"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="987"><highlight class="normal"></highlight></codeline>
<codeline lineno="988"><highlight class="normal"></highlight></codeline>
<codeline lineno="997"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="998"><highlight class="normal"><sp/><sp/>constexpr</highlight></codeline>
<codeline lineno="999" refid="structgf_1_1_vector_1ace7dc23b70392429718b79fe1d8b5e36" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="structgf_1_1_vector_3_01_t_00_013_01_4" kindref="compound">Vector&lt;T, 3&gt;</ref><sp/><ref refid="structgf_1_1_vector_1ace7dc23b70392429718b79fe1d8b5e36" kindref="member">cross</ref>(<ref refid="structgf_1_1_vector_3_01_t_00_013_01_4" kindref="compound">Vector&lt;T, 3&gt;</ref><sp/>lhs,<sp/><ref refid="structgf_1_1_vector_3_01_t_00_013_01_4" kindref="compound">Vector&lt;T, 3&gt;</ref><sp/>rhs)<sp/>{</highlight></codeline>
<codeline lineno="1000"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1001"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>lhs.<ref refid="structgf_1_1_vector_3_01_t_00_013_01_4_1af4a8246a4538fbe28b18da47e9be3711" kindref="member">y</ref><sp/>*<sp/>rhs.<ref refid="structgf_1_1_vector_3_01_t_00_013_01_4_1acbcbbdd7a5a873c6309cc358170e7e6c" kindref="member">z</ref><sp/>-<sp/>lhs.<ref refid="structgf_1_1_vector_3_01_t_00_013_01_4_1acbcbbdd7a5a873c6309cc358170e7e6c" kindref="member">z</ref><sp/>*<sp/>rhs.<ref refid="structgf_1_1_vector_3_01_t_00_013_01_4_1af4a8246a4538fbe28b18da47e9be3711" kindref="member">y</ref>,</highlight></codeline>
<codeline lineno="1002"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>lhs.<ref refid="structgf_1_1_vector_3_01_t_00_013_01_4_1acbcbbdd7a5a873c6309cc358170e7e6c" kindref="member">z</ref><sp/>*<sp/>rhs.<ref refid="structgf_1_1_vector_3_01_t_00_013_01_4_1a90ebb7a5d0353a2b9eacb0c44c2f54a8" kindref="member">x</ref><sp/>-<sp/>lhs.<ref refid="structgf_1_1_vector_3_01_t_00_013_01_4_1a90ebb7a5d0353a2b9eacb0c44c2f54a8" kindref="member">x</ref><sp/>*<sp/>rhs.<ref refid="structgf_1_1_vector_3_01_t_00_013_01_4_1acbcbbdd7a5a873c6309cc358170e7e6c" kindref="member">z</ref>,</highlight></codeline>
<codeline lineno="1003"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>lhs.<ref refid="structgf_1_1_vector_3_01_t_00_013_01_4_1a90ebb7a5d0353a2b9eacb0c44c2f54a8" kindref="member">x</ref><sp/>*<sp/>rhs.<ref refid="structgf_1_1_vector_3_01_t_00_013_01_4_1af4a8246a4538fbe28b18da47e9be3711" kindref="member">y</ref><sp/>-<sp/>lhs.<ref refid="structgf_1_1_vector_3_01_t_00_013_01_4_1af4a8246a4538fbe28b18da47e9be3711" kindref="member">y</ref><sp/>*<sp/>rhs.<ref refid="structgf_1_1_vector_3_01_t_00_013_01_4_1a90ebb7a5d0353a2b9eacb0c44c2f54a8" kindref="member">x</ref></highlight></codeline>
<codeline lineno="1004"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="1005"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1006"><highlight class="normal"></highlight></codeline>
<codeline lineno="1007"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>DOXYGEN_SHOULD_SKIP_THIS</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1008"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1009"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1010"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1011"><highlight class="normal"></highlight></codeline>
<codeline lineno="1012"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/>//<sp/>GF_VECTOR_OPS_H</highlight></codeline>
    </programlisting>
    <location file="/home/jbernard/Workshop/gf/versions/include/gf/VectorOps.h"/>
  </compounddef>
</doxygen>
