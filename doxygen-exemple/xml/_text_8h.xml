<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="_text_8h" kind="file" language="C++">
    <compoundname>Text.h</compoundname>
    <includes local="no">string</includes>
    <includes refid="_alignment_8h" local="yes">Alignment.h</includes>
    <includes refid="_portability_8h" local="yes">Portability.h</includes>
    <includes refid="_transformable_8h" local="yes">Transformable.h</includes>
    <includes refid="_vector_8h" local="yes">Vector.h</includes>
    <includes refid="_vertex_array_8h" local="yes">VertexArray.h</includes>
    <includes refid="_vertex_buffer_8h" local="yes">VertexBuffer.h</includes>
    <includedby refid="_g_f_8h" local="yes">GF.h</includedby>
    <incdepgraph>
      <node id="2107">
        <label>cstdint</label>
      </node>
      <node id="2115">
        <label>PrimitiveType.h</label>
        <link refid="_primitive_type_8h_source"/>
      </node>
      <node id="2099">
        <label>Anchor.h</label>
        <link refid="_anchor_8h_source"/>
      </node>
      <node id="2097">
        <label>Portability.h</label>
        <link refid="_portability_8h_source"/>
      </node>
      <node id="2111">
        <label>cmath</label>
      </node>
      <node id="2095">
        <label>string</label>
      </node>
      <node id="2106">
        <label>Vector.h</label>
        <link refid="_vector_8h_source"/>
        <childnode refid="2104" relation="include">
        </childnode>
        <childnode refid="2107" relation="include">
        </childnode>
        <childnode refid="2105" relation="include">
        </childnode>
        <childnode refid="2108" relation="include">
        </childnode>
        <childnode refid="2109" relation="include">
        </childnode>
        <childnode refid="2097" relation="include">
        </childnode>
      </node>
      <node id="2118">
        <label>VertexBuffer.h</label>
        <link refid="_vertex_buffer_8h_source"/>
        <childnode refid="2104" relation="include">
        </childnode>
        <childnode refid="2107" relation="include">
        </childnode>
        <childnode refid="2097" relation="include">
        </childnode>
        <childnode refid="2115" relation="include">
        </childnode>
      </node>
      <node id="2101">
        <label>RenderStates.h</label>
        <link refid="_render_states_8h_source"/>
        <childnode refid="2102" relation="include">
        </childnode>
        <childnode refid="2103" relation="include">
        </childnode>
        <childnode refid="2097" relation="include">
        </childnode>
        <childnode refid="2110" relation="include">
        </childnode>
      </node>
      <node id="2100">
        <label>Drawable.h</label>
        <link refid="_drawable_8h_source"/>
        <childnode refid="2097" relation="include">
        </childnode>
        <childnode refid="2101" relation="include">
        </childnode>
      </node>
      <node id="2114">
        <label>vector</label>
      </node>
      <node id="2098">
        <label>Transformable.h</label>
        <link refid="_transformable_8h_source"/>
        <childnode refid="2099" relation="include">
        </childnode>
        <childnode refid="2100" relation="include">
        </childnode>
        <childnode refid="2103" relation="include">
        </childnode>
        <childnode refid="2097" relation="include">
        </childnode>
        <childnode refid="2112" relation="include">
        </childnode>
        <childnode refid="2106" relation="include">
        </childnode>
      </node>
      <node id="2117">
        <label>Color.h</label>
        <link refid="_color_8h_source"/>
        <childnode refid="2097" relation="include">
        </childnode>
        <childnode refid="2106" relation="include">
        </childnode>
      </node>
      <node id="2103">
        <label>Matrix.h</label>
        <link refid="_matrix_8h_source"/>
        <childnode refid="2104" relation="include">
        </childnode>
        <childnode refid="2105" relation="include">
        </childnode>
        <childnode refid="2097" relation="include">
        </childnode>
        <childnode refid="2106" relation="include">
        </childnode>
      </node>
      <node id="2104">
        <label>cstddef</label>
      </node>
      <node id="2096">
        <label>Alignment.h</label>
        <link refid="_alignment_8h_source"/>
      </node>
      <node id="2116">
        <label>Vertex.h</label>
        <link refid="_vertex_8h_source"/>
        <childnode refid="2117" relation="include">
        </childnode>
        <childnode refid="2097" relation="include">
        </childnode>
        <childnode refid="2106" relation="include">
        </childnode>
      </node>
      <node id="2113">
        <label>VertexArray.h</label>
        <link refid="_vertex_array_8h_source"/>
        <childnode refid="2104" relation="include">
        </childnode>
        <childnode refid="2114" relation="include">
        </childnode>
        <childnode refid="2100" relation="include">
        </childnode>
        <childnode refid="2097" relation="include">
        </childnode>
        <childnode refid="2115" relation="include">
        </childnode>
        <childnode refid="2112" relation="include">
        </childnode>
        <childnode refid="2116" relation="include">
        </childnode>
      </node>
      <node id="2094">
        <label>Text.h</label>
        <link refid="_text_8h"/>
        <childnode refid="2095" relation="include">
        </childnode>
        <childnode refid="2096" relation="include">
        </childnode>
        <childnode refid="2097" relation="include">
        </childnode>
        <childnode refid="2098" relation="include">
        </childnode>
        <childnode refid="2106" relation="include">
        </childnode>
        <childnode refid="2113" relation="include">
        </childnode>
        <childnode refid="2118" relation="include">
        </childnode>
      </node>
      <node id="2109">
        <label>type_traits</label>
      </node>
      <node id="2110">
        <label>Transform.h</label>
        <link refid="_transform_8h_source"/>
        <childnode refid="2111" relation="include">
        </childnode>
        <childnode refid="2103" relation="include">
        </childnode>
        <childnode refid="2097" relation="include">
        </childnode>
        <childnode refid="2112" relation="include">
        </childnode>
        <childnode refid="2106" relation="include">
        </childnode>
      </node>
      <node id="2105">
        <label>algorithm</label>
      </node>
      <node id="2112">
        <label>Rect.h</label>
        <link refid="_rect_8h_source"/>
        <childnode refid="2104" relation="include">
        </childnode>
        <childnode refid="2105" relation="include">
        </childnode>
        <childnode refid="2097" relation="include">
        </childnode>
        <childnode refid="2106" relation="include">
        </childnode>
      </node>
      <node id="2108">
        <label>initializer_list</label>
      </node>
      <node id="2102">
        <label>Blend.h</label>
        <link refid="_blend_8h_source"/>
        <childnode refid="2097" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="2120">
        <label>GF.h</label>
        <link refid="_g_f_8h_source"/>
      </node>
      <node id="2119">
        <label>Text.h</label>
        <link refid="_text_8h"/>
        <childnode refid="2120" relation="include">
        </childnode>
      </node>
    </invincdepgraph>
    <innerclass refid="classgf_1_1_text" prot="public">gf::Text</innerclass>
    <innerclass refid="structgf_1_1_text_1_1_line" prot="private">gf::Text::Line</innerclass>
    <innerclass refid="structgf_1_1_text_1_1_paragraph" prot="private">gf::Text::Paragraph</innerclass>
    <innernamespace refid="namespacegf">gf</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/>*<sp/>Gamedev<sp/>Framework<sp/>(gf)</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/>*<sp/>Copyright<sp/>(C)<sp/>2016-2017<sp/>Julien<sp/>Bernard</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>*<sp/>This<sp/>software<sp/>is<sp/>provided<sp/>&apos;as-is&apos;,<sp/>without<sp/>any<sp/>express<sp/>or<sp/>implied</highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/>*<sp/>warranty.<sp/><sp/>In<sp/>no<sp/>event<sp/>will<sp/>the<sp/>authors<sp/>be<sp/>held<sp/>liable<sp/>for<sp/>any<sp/>damages</highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/>*<sp/>arising<sp/>from<sp/>the<sp/>use<sp/>of<sp/>this<sp/>software.</highlight></codeline>
<codeline lineno="8"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="9"><highlight class="comment"><sp/>*<sp/>Permission<sp/>is<sp/>granted<sp/>to<sp/>anyone<sp/>to<sp/>use<sp/>this<sp/>software<sp/>for<sp/>any<sp/>purpose,</highlight></codeline>
<codeline lineno="10"><highlight class="comment"><sp/>*<sp/>including<sp/>commercial<sp/>applications,<sp/>and<sp/>to<sp/>alter<sp/>it<sp/>and<sp/>redistribute<sp/>it</highlight></codeline>
<codeline lineno="11"><highlight class="comment"><sp/>*<sp/>freely,<sp/>subject<sp/>to<sp/>the<sp/>following<sp/>restrictions:</highlight></codeline>
<codeline lineno="12"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="13"><highlight class="comment"><sp/>*<sp/>1.<sp/>The<sp/>origin<sp/>of<sp/>this<sp/>software<sp/>must<sp/>not<sp/>be<sp/>misrepresented;<sp/>you<sp/>must<sp/>not</highlight></codeline>
<codeline lineno="14"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/>claim<sp/>that<sp/>you<sp/>wrote<sp/>the<sp/>original<sp/>software.<sp/>If<sp/>you<sp/>use<sp/>this<sp/>software</highlight></codeline>
<codeline lineno="15"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/>in<sp/>a<sp/>product,<sp/>an<sp/>acknowledgment<sp/>in<sp/>the<sp/>product<sp/>documentation<sp/>would<sp/>be</highlight></codeline>
<codeline lineno="16"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/>appreciated<sp/>but<sp/>is<sp/>not<sp/>required.</highlight></codeline>
<codeline lineno="17"><highlight class="comment"><sp/>*<sp/>2.<sp/>Altered<sp/>source<sp/>versions<sp/>must<sp/>be<sp/>plainly<sp/>marked<sp/>as<sp/>such,<sp/>and<sp/>must<sp/>not<sp/>be</highlight></codeline>
<codeline lineno="18"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/>misrepresented<sp/>as<sp/>being<sp/>the<sp/>original<sp/>software.</highlight></codeline>
<codeline lineno="19"><highlight class="comment"><sp/>*<sp/>3.<sp/>This<sp/>notice<sp/>may<sp/>not<sp/>be<sp/>removed<sp/>or<sp/>altered<sp/>from<sp/>any<sp/>source<sp/>distribution.</highlight></codeline>
<codeline lineno="20"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="21"><highlight class="comment"><sp/>*<sp/>Part<sp/>of<sp/>this<sp/>file<sp/>comes<sp/>from<sp/>SFML,<sp/>with<sp/>the<sp/>same<sp/>license:</highlight></codeline>
<codeline lineno="22"><highlight class="comment"><sp/>*<sp/>Copyright<sp/>(C)<sp/>2007-2015<sp/>Laurent<sp/>Gomila<sp/>(laurent@sfml-dev.org)</highlight></codeline>
<codeline lineno="23"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>GF_TEXT_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>GF_TEXT_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;string&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;Alignment.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;Portability.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;Transformable.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;Vector.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;VertexArray.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;VertexBuffer.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespacegf" kindref="compound">gf</ref><sp/>{</highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>DOXYGEN_SHOULD_SKIP_THIS</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">v1<sp/>{</highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">Font;</highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight></codeline>
<codeline lineno="91" refid="classgf_1_1_text" refkind="compound"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">GF_API<sp/><ref refid="classgf_1_1_text" kindref="compound">Text</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="classgf_1_1_transformable" kindref="compound">Transformable</ref><sp/>{</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classgf_1_1_text" kindref="compound">Text</ref>();</highlight></codeline>
<codeline lineno="99"><highlight class="normal"></highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classgf_1_1_text" kindref="compound">Text</ref>(std::string<sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal">,<sp/><ref refid="classgf_1_1_font" kindref="compound">Font</ref>&amp;<sp/>font,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>characterSize<sp/>=<sp/>30);</highlight></codeline>
<codeline lineno="108"><highlight class="normal"></highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>setString(std::string<sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="120"><highlight class="normal"></highlight></codeline>
<codeline lineno="130" refid="classgf_1_1_text_1a2d1beea276f7ae017349dbb336f47036" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/><ref refid="classgf_1_1_text_1a2d1beea276f7ae017349dbb336f47036" kindref="member">getString</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_string;</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="133"><highlight class="normal"></highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>setCharacterSize(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>characterSize);</highlight></codeline>
<codeline lineno="144"><highlight class="normal"></highlight></codeline>
<codeline lineno="152" refid="classgf_1_1_text_1a45fcfa45b94af39d65a6bfc701a41bbb" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/><ref refid="classgf_1_1_text_1a45fcfa45b94af39d65a6bfc701a41bbb" kindref="member">getCharacterSize</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_characterSize;</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="155"><highlight class="normal"></highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>setFont(<ref refid="classgf_1_1_font" kindref="compound">Font</ref>&amp;<sp/>font);</highlight></codeline>
<codeline lineno="171"><highlight class="normal"></highlight></codeline>
<codeline lineno="183" refid="classgf_1_1_text_1a361766f64e6d1508681174daf171550a" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classgf_1_1_font" kindref="compound">Font</ref><sp/>*<ref refid="classgf_1_1_text_1a361766f64e6d1508681174daf171550a" kindref="member">getFont</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_font;</highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="186"><highlight class="normal"></highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>setColor(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structgf_1_1_vector" kindref="compound">Color4f</ref>&amp;<sp/>color);</highlight></codeline>
<codeline lineno="199"><highlight class="normal"></highlight></codeline>
<codeline lineno="207" refid="classgf_1_1_text_1a24ac889ebd9b05a92f5bf337d641d111" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structgf_1_1_vector" kindref="compound">Color4f</ref>&amp;<sp/><ref refid="classgf_1_1_text_1a24ac889ebd9b05a92f5bf337d641d111" kindref="member">getColor</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_color;</highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="210"><highlight class="normal"></highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>setOutlineColor(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structgf_1_1_vector" kindref="compound">Color4f</ref>&amp;<sp/>color);</highlight></codeline>
<codeline lineno="221"><highlight class="normal"></highlight></codeline>
<codeline lineno="229" refid="classgf_1_1_text_1a4a1f2d8f22c012beeab5721ffb9fd111" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structgf_1_1_vector" kindref="compound">Color4f</ref>&amp;<sp/><ref refid="classgf_1_1_text_1a4a1f2d8f22c012beeab5721ffb9fd111" kindref="member">getOutlineColor</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_outlineColor;</highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="232"><highlight class="normal"></highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>setOutlineThickness(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>thickness);</highlight></codeline>
<codeline lineno="243"><highlight class="normal"></highlight></codeline>
<codeline lineno="251" refid="classgf_1_1_text_1a7748e8d548842432e022cc74e322dee0" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="classgf_1_1_text_1a7748e8d548842432e022cc74e322dee0" kindref="member">getOutlineThickness</ref>()<sp/>{</highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_outlineThickness;</highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="254"><highlight class="normal"></highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>setParagraphWidth(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>paragraphWidth);</highlight></codeline>
<codeline lineno="264"><highlight class="normal"></highlight></codeline>
<codeline lineno="271" refid="classgf_1_1_text_1a23297dc85bc072b4c9a82b0d96084500" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="classgf_1_1_text_1a23297dc85bc072b4c9a82b0d96084500" kindref="member">getParagraphWidth</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="272"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_paragraphWidth;</highlight></codeline>
<codeline lineno="273"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="274"><highlight class="normal"></highlight></codeline>
<codeline lineno="283"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>setAlignment(<ref refid="group__graphics_1ga5229ccbffec1016d760ddfe296fd2edf" kindref="member">Alignment</ref><sp/>align);</highlight></codeline>
<codeline lineno="284"><highlight class="normal"></highlight></codeline>
<codeline lineno="291" refid="classgf_1_1_text_1ad4b278345c9f9bdad8371503b1872b07" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__graphics_1ga5229ccbffec1016d760ddfe296fd2edf" kindref="member">Alignment</ref><sp/><ref refid="classgf_1_1_text_1ad4b278345c9f9bdad8371503b1872b07" kindref="member">getAlignment</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="292"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_align;</highlight></codeline>
<codeline lineno="293"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="294"><highlight class="normal"></highlight></codeline>
<codeline lineno="306" refid="classgf_1_1_text_1a24dd918b7b830b4acc19217c303d031f" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structgf_1_1_rect" kindref="compound">RectF</ref><sp/><ref refid="classgf_1_1_text_1a24dd918b7b830b4acc19217c303d031f" kindref="member">getLocalBounds</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="307"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_bounds;</highlight></codeline>
<codeline lineno="308"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="309"><highlight class="normal"></highlight></codeline>
<codeline lineno="320"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>setAnchor(<ref refid="group__graphics_1gadeb9cdf9d7e8eec2eb8cc638c54b5066" kindref="member">Anchor</ref><sp/>anchor);</highlight></codeline>
<codeline lineno="321"><highlight class="normal"></highlight></codeline>
<codeline lineno="330"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classgf_1_1_vertex_buffer" kindref="compound">VertexBuffer</ref><sp/>commitGeometry()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="331"><highlight class="normal"></highlight></codeline>
<codeline lineno="340"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classgf_1_1_vertex_buffer" kindref="compound">VertexBuffer</ref><sp/>commitOutlineGeometry()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="341"><highlight class="normal"></highlight></codeline>
<codeline lineno="342"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>draw(<ref refid="classgf_1_1_render_target" kindref="compound">RenderTarget</ref>&amp;<sp/>target,<sp/><ref refid="structgf_1_1_render_states" kindref="compound">RenderStates</ref><sp/>states)<sp/></highlight><highlight class="keyword">override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="343"><highlight class="normal"></highlight></codeline>
<codeline lineno="344"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="345"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>updateGeometry();</highlight></codeline>
<codeline lineno="346"><highlight class="normal"></highlight></codeline>
<codeline lineno="347"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="348"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">Line<sp/>{</highlight></codeline>
<codeline lineno="349"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>std::vector&lt;std::u32string&gt;<sp/>words;</highlight></codeline>
<codeline lineno="350"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>indent<sp/>=<sp/>0.0f;</highlight></codeline>
<codeline lineno="351"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>spacing<sp/>=<sp/>0.0f;</highlight></codeline>
<codeline lineno="352"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="353"><highlight class="normal"></highlight></codeline>
<codeline lineno="354"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">Paragraph<sp/>{</highlight></codeline>
<codeline lineno="355"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>std::vector&lt;Line&gt;<sp/>lines;</highlight></codeline>
<codeline lineno="356"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="357"><highlight class="normal"></highlight></codeline>
<codeline lineno="358"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>getWordWidth(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::u32string&amp;<sp/>word);</highlight></codeline>
<codeline lineno="359"><highlight class="normal"></highlight></codeline>
<codeline lineno="360"><highlight class="normal"><sp/><sp/><sp/><sp/>std::vector&lt;Paragraph&gt;<sp/>makeParagraphs(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>str,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>spaceWidth);</highlight></codeline>
<codeline lineno="361"><highlight class="normal"></highlight></codeline>
<codeline lineno="362"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="363"><highlight class="normal"><sp/><sp/><sp/><sp/>std::string<sp/>m_string;</highlight></codeline>
<codeline lineno="364"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classgf_1_1_font" kindref="compound">Font</ref><sp/>*m_font;</highlight></codeline>
<codeline lineno="365"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>m_characterSize;</highlight></codeline>
<codeline lineno="366"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structgf_1_1_vector" kindref="compound">Color4f</ref><sp/>m_color;</highlight></codeline>
<codeline lineno="367"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classgf_1_1_vertex_array" kindref="compound">VertexArray</ref><sp/>m_vertices;</highlight></codeline>
<codeline lineno="368"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structgf_1_1_rect" kindref="compound">RectF</ref><sp/>m_bounds;</highlight></codeline>
<codeline lineno="369"><highlight class="normal"></highlight></codeline>
<codeline lineno="370"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structgf_1_1_vector" kindref="compound">Color4f</ref><sp/>m_outlineColor;</highlight></codeline>
<codeline lineno="371"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>m_outlineThickness;</highlight></codeline>
<codeline lineno="372"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classgf_1_1_vertex_array" kindref="compound">VertexArray</ref><sp/>m_outlineVertices;</highlight></codeline>
<codeline lineno="373"><highlight class="normal"></highlight></codeline>
<codeline lineno="374"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>m_paragraphWidth;</highlight></codeline>
<codeline lineno="375"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__graphics_1ga5229ccbffec1016d760ddfe296fd2edf" kindref="member">Alignment</ref><sp/>m_align;</highlight></codeline>
<codeline lineno="376"><highlight class="normal"><sp/><sp/>};</highlight></codeline>
<codeline lineno="377"><highlight class="normal"></highlight></codeline>
<codeline lineno="378"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>DOXYGEN_SHOULD_SKIP_THIS</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="379"><highlight class="normal">}</highlight></codeline>
<codeline lineno="380"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="381"><highlight class="normal">}</highlight></codeline>
<codeline lineno="382"><highlight class="normal"></highlight></codeline>
<codeline lineno="383"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/>//<sp/>GF_TEXT_H</highlight></codeline>
    </programlisting>
    <location file="/home/jbernard/Workshop/gf/versions/include/gf/Text.h"/>
  </compounddef>
</doxygen>
