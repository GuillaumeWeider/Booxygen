<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="classgf_1_1_render_pipeline" kind="class" language="C++" prot="public">
    <compoundname>gf::RenderPipeline</compoundname>
    <basecompoundref refid="classgf_1_1_render_target" prot="public" virt="non-virtual">gf::RenderTarget</basecompoundref>
    <includes refid="_render_pipeline_8h" local="no">gf/RenderPipeline.h</includes>
    <innerclass refid="structgf_1_1_render_pipeline_1_1_texture_buffer" prot="private">gf::RenderPipeline::TextureBuffer</innerclass>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classgf_1_1_render_pipeline_1a1f56dfe55e3851aac419034b887342d0" prot="private" static="no" mutable="no">
        <type><ref refid="classgf_1_1_window" kindref="compound">Window</ref> &amp;</type>
        <definition>Window&amp; gf::RenderPipeline::m_window</definition>
        <argsstring></argsstring>
        <name>m_window</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jbernard/Workshop/gf/versions/include/gf/RenderPipeline.h" line="135" column="1" bodyfile="/home/jbernard/Workshop/gf/versions/include/gf/RenderPipeline.h" bodystart="135" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classgf_1_1_render_pipeline_1ae66bbd4758b0be20909ae3ca7833b219" prot="private" static="no" mutable="no">
        <type>TextureBuffer</type>
        <definition>TextureBuffer gf::RenderPipeline::m_buffers[2]</definition>
        <argsstring>[2]</argsstring>
        <name>m_buffers</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jbernard/Workshop/gf/versions/include/gf/RenderPipeline.h" line="142" column="1" bodyfile="/home/jbernard/Workshop/gf/versions/include/gf/RenderPipeline.h" bodystart="142" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classgf_1_1_render_pipeline_1adc8a2434a6a1febb63434e61fa9ef0df" prot="private" static="no" mutable="no">
        <type>int</type>
        <definition>int gf::RenderPipeline::m_current</definition>
        <argsstring></argsstring>
        <name>m_current</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jbernard/Workshop/gf/versions/include/gf/RenderPipeline.h" line="143" column="1" bodyfile="/home/jbernard/Workshop/gf/versions/include/gf/RenderPipeline.h" bodystart="143" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classgf_1_1_render_pipeline_1a6b855ee844dd80ad1f814c2ffbf63e14" prot="private" static="no" mutable="no">
        <type><ref refid="classgf_1_1_default_effect" kindref="compound">DefaultEffect</ref></type>
        <definition>DefaultEffect gf::RenderPipeline::m_defaultEffect</definition>
        <argsstring></argsstring>
        <name>m_defaultEffect</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jbernard/Workshop/gf/versions/include/gf/RenderPipeline.h" line="145" column="1" bodyfile="/home/jbernard/Workshop/gf/versions/include/gf/RenderPipeline.h" bodystart="145" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classgf_1_1_render_pipeline_1a6f511039a1b2d769acf2d922a687d3ac" prot="private" static="no" mutable="no">
        <type>std::vector&lt; <ref refid="classgf_1_1_effect" kindref="compound">Effect</ref> * &gt;</type>
        <definition>std::vector&lt;Effect*&gt; gf::RenderPipeline::m_effects</definition>
        <argsstring></argsstring>
        <name>m_effects</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jbernard/Workshop/gf/versions/include/gf/RenderPipeline.h" line="146" column="1" bodyfile="/home/jbernard/Workshop/gf/versions/include/gf/RenderPipeline.h" bodystart="146" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classgf_1_1_render_pipeline_1ae9dc847f0d2816749dde75ac11f929f5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>gf::RenderPipeline::RenderPipeline</definition>
        <argsstring>(Window &amp;window)</argsstring>
        <name>RenderPipeline</name>
        <param>
          <type><ref refid="classgf_1_1_window" kindref="compound">Window</ref> &amp;</type>
          <declname>window</declname>
        </param>
        <briefdescription>
<para>Constructor. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>window</parametername>
</parameternamelist>
<parameterdescription>
<para>The window to render to </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jbernard/Workshop/gf/versions/include/gf/RenderPipeline.h" line="76" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classgf_1_1_render_pipeline_1aada88547c67770b3224a2879a67e0b2d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>gf::RenderPipeline::~RenderPipeline</definition>
        <argsstring>()</argsstring>
        <name>~RenderPipeline</name>
        <briefdescription>
<para>Destructor. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jbernard/Workshop/gf/versions/include/gf/RenderPipeline.h" line="81" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classgf_1_1_render_pipeline_1a78ae4a62017576086edd9fcba4103911" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void gf::RenderPipeline::addEffect</definition>
        <argsstring>(Effect &amp;effect)</argsstring>
        <name>addEffect</name>
        <param>
          <type><ref refid="classgf_1_1_effect" kindref="compound">Effect</ref> &amp;</type>
          <declname>effect</declname>
        </param>
        <briefdescription>
<para>Add an effect to the pipeline. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>effect</parametername>
</parameternamelist>
<parameterdescription>
<para>The effect </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jbernard/Workshop/gf/versions/include/gf/RenderPipeline.h" line="88" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classgf_1_1_render_pipeline_1a29c9af1d86af7ba25f42ad2c50e5f854" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void gf::RenderPipeline::clearEffects</definition>
        <argsstring>()</argsstring>
        <name>clearEffects</name>
        <briefdescription>
<para>Clear the pipeline. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jbernard/Workshop/gf/versions/include/gf/RenderPipeline.h" line="93" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classgf_1_1_render_pipeline_1a6bbeb9f32e7984133f05c971c4f170f5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void gf::RenderPipeline::resized</definition>
        <argsstring>()</argsstring>
        <name>resized</name>
        <briefdescription>
<para>Update the size of the target. </para>        </briefdescription>
        <detaileddescription>
<para>This function must be called when the window change its size, before anything is drawn on the target. You can do it in the event processing.</para><para><programlisting><codeline><highlight class="normal"><ref refid="structgf_1_1_event" kindref="compound">gf::Event</ref><sp/>event;</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>...</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(event.<ref refid="structgf_1_1_event_1a764707270173af5b617ed6589a58dfe1" kindref="member">type</ref>)<sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="group__window_1gga244fb10415539f03cde7ed0ae916018da22995988de764d7a8cb4165fbff371cb" kindref="member">gf::EventType::Resized</ref>:</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>renderer.resized();</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>...</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">}</highlight></codeline>
</programlisting> </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jbernard/Workshop/gf/versions/include/gf/RenderPipeline.h" line="115" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classgf_1_1_render_pipeline_1a1fde5eca1a18130be54fc01033dad809" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type><ref refid="group__core_1gaccbebb53cb8f06205d648e713ec5d40d" kindref="member">Vector2u</ref></type>
        <definition>virtual Vector2u gf::RenderPipeline::getSize</definition>
        <argsstring>() const override</argsstring>
        <name>getSize</name>
        <reimplements refid="classgf_1_1_render_target_1a6dc4ae258436db802fa4a2848a4010a6">getSize</reimplements>
        <briefdescription>
<para>Return the size of the rendering region of the target. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>Size in pixels </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jbernard/Workshop/gf/versions/include/gf/RenderPipeline.h" line="117" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classgf_1_1_render_pipeline_1abadc9c5da01f2dc497091d52e79ed48c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void gf::RenderPipeline::display</definition>
        <argsstring>()</argsstring>
        <name>display</name>
        <briefdescription>
<para>Apply the effects and display what has been rendered. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jbernard/Workshop/gf/versions/include/gf/RenderPipeline.h" line="122" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-func">
      <memberdef kind="function" id="classgf_1_1_render_pipeline_1af38d6124884c232c4c6462b389190ce2" prot="protected" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>virtual void gf::RenderPipeline::onFramebufferResize</definition>
        <argsstring>(Vector2u size)</argsstring>
        <name>onFramebufferResize</name>
        <param>
          <type><ref refid="group__core_1gaccbebb53cb8f06205d648e713ec5d40d" kindref="member">Vector2u</ref></type>
          <declname>size</declname>
        </param>
        <briefdescription>
<para>Callback when the screen has just been resized. </para>        </briefdescription>
        <detaileddescription>
<para>This function is called by <ref refid="classgf_1_1_render_pipeline_1a6bbeb9f32e7984133f05c971c4f170f5" kindref="member">resized()</ref> with the correct size.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>size</parametername>
</parameternamelist>
<parameterdescription>
<para>The new framebuffer size </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jbernard/Workshop/gf/versions/include/gf/RenderPipeline.h" line="132" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>A render pipeline. </para>    </briefdescription>
    <detaileddescription>
<para>A render pipeline automates the application of post-processing effects. A good way to use this class is to make a subclass with all the effects you want to add.</para><para><programlisting><codeline><highlight class="keyword">class<sp/></highlight><highlight class="normal">MyPipeline<sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="classgf_1_1_render_pipeline" kindref="compound">gf::RenderPipeline</ref><sp/>{</highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>MyPipeline(<ref refid="classgf_1_1_window" kindref="compound">gf::Window</ref>&amp;<sp/>window)</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>:<sp/><ref refid="namespacegf" kindref="compound">gf</ref>::<ref refid="classgf_1_1_render_pipeline_1ae9dc847f0d2816749dde75ac11f929f5" kindref="member">RenderPipeline</ref>(window)</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classgf_1_1_render_pipeline_1a78ae4a62017576086edd9fcba4103911" kindref="member">addEffect</ref>(m_effect);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classgf_1_1_render_pipeline_1a78ae4a62017576086edd9fcba4103911" kindref="member">addEffect</ref>(m_other);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="keyword">protected</highlight><highlight class="normal">:</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classgf_1_1_render_pipeline_1af38d6124884c232c4c6462b389190ce2" kindref="member">onFramebufferResize</ref>(<ref refid="group__core_1gaccbebb53cb8f06205d648e713ec5d40d" kindref="member">Vector2u</ref><sp/>size)</highlight><highlight class="keyword"><sp/>override<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>update<sp/>effects<sp/>with<sp/>size</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>MyEffect<sp/>m_effect;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>MyOtherEffect<sp/>m_other;</highlight></codeline>
<codeline><highlight class="normal">};</highlight></codeline>
</programlisting></para><para><simplesect kind="see"><para><ref refid="classgf_1_1_effect" kindref="compound">gf::Effect</ref> </para></simplesect>
</para>    </detaileddescription>
    <inheritancegraph>
      <node id="621">
        <label>gf::RenderPipeline</label>
        <link refid="classgf_1_1_render_pipeline"/>
        <childnode refid="622" relation="public-inheritance">
        </childnode>
      </node>
      <node id="622">
        <label>gf::RenderTarget</label>
        <link refid="classgf_1_1_render_target"/>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="623">
        <label>gf::RenderPipeline</label>
        <link refid="classgf_1_1_render_pipeline"/>
        <childnode refid="624" relation="public-inheritance">
        </childnode>
      </node>
      <node id="624">
        <label>gf::RenderTarget</label>
        <link refid="classgf_1_1_render_target"/>
      </node>
    </collaborationgraph>
    <location file="/home/jbernard/Workshop/gf/versions/include/gf/RenderPipeline.h" line="69" column="1" bodyfile="/home/jbernard/Workshop/gf/versions/include/gf/RenderPipeline.h" bodystart="69" bodyend="147"/>
    <listofallmembers>
      <member refid="classgf_1_1_render_pipeline_1a78ae4a62017576086edd9fcba4103911" prot="public" virt="non-virtual"><scope>gf::RenderPipeline</scope><name>addEffect</name></member>
      <member refid="classgf_1_1_render_target_1a4c83cb262854ad4b3cf77bc811c1bff1" prot="protected" virt="non-virtual"><scope>gf::RenderPipeline</scope><name>captureFramebuffer</name></member>
      <member refid="classgf_1_1_render_target_1a2c3f888d184e81d8668b6ec5b1d332de" prot="public" virt="non-virtual"><scope>gf::RenderPipeline</scope><name>clear</name></member>
      <member refid="classgf_1_1_render_target_1a878f6ffa9ba25da18db791fa83eac4c3" prot="public" virt="non-virtual"><scope>gf::RenderPipeline</scope><name>clear</name></member>
      <member refid="classgf_1_1_render_pipeline_1a29c9af1d86af7ba25f42ad2c50e5f854" prot="public" virt="non-virtual"><scope>gf::RenderPipeline</scope><name>clearEffects</name></member>
      <member refid="classgf_1_1_render_pipeline_1abadc9c5da01f2dc497091d52e79ed48c" prot="public" virt="non-virtual"><scope>gf::RenderPipeline</scope><name>display</name></member>
      <member refid="classgf_1_1_render_target_1a3445880f95c648efbeff3d2572c4c263" prot="public" virt="non-virtual"><scope>gf::RenderPipeline</scope><name>draw</name></member>
      <member refid="classgf_1_1_render_target_1a56eaf8b36e55cac0f2fd946443a72a9c" prot="public" virt="non-virtual"><scope>gf::RenderPipeline</scope><name>draw</name></member>
      <member refid="classgf_1_1_render_target_1aa2c4723f1953113890771b1659096ad1" prot="public" virt="non-virtual"><scope>gf::RenderPipeline</scope><name>draw</name></member>
      <member refid="classgf_1_1_render_target_1a71d282bd4078463487daac06e544f199" prot="public" virt="non-virtual"><scope>gf::RenderPipeline</scope><name>draw</name></member>
      <member refid="classgf_1_1_render_target_1a7a31eaa2a6710e4ec164807e46977159" prot="public" virt="non-virtual"><scope>gf::RenderPipeline</scope><name>draw</name></member>
      <member refid="classgf_1_1_render_target_1a39de6116a654206f146ce4d713713f93" prot="public" virt="non-virtual"><scope>gf::RenderPipeline</scope><name>draw</name></member>
      <member refid="classgf_1_1_render_target_1aa1814c8b195d2a1a5e6525a3cba3c26f" prot="public" virt="non-virtual"><scope>gf::RenderPipeline</scope><name>getAliasedLineWidthRange</name></member>
      <member refid="classgf_1_1_render_target_1a76ae398641a9171c45bc31abd6e42112" prot="public" virt="non-virtual"><scope>gf::RenderPipeline</scope><name>getCanonicalScissorBox</name></member>
      <member refid="classgf_1_1_render_target_1afcb4bee93cdb4b5449dfbf823773f512" prot="public" virt="non-virtual"><scope>gf::RenderPipeline</scope><name>getCanonicalViewport</name></member>
      <member refid="classgf_1_1_render_target_1af7b6eeeca709f64b81ea6a09d13ac8d9" prot="public" virt="non-virtual"><scope>gf::RenderPipeline</scope><name>getLineWidth</name></member>
      <member refid="classgf_1_1_render_target_1a29797883fe14f6e1c49c6290adbd4a8c" prot="public" virt="non-virtual"><scope>gf::RenderPipeline</scope><name>getScissorBox</name></member>
      <member refid="classgf_1_1_render_pipeline_1a1fde5eca1a18130be54fc01033dad809" prot="public" virt="virtual"><scope>gf::RenderPipeline</scope><name>getSize</name></member>
      <member refid="classgf_1_1_render_target_1ae6240f15bd9b41044b678b415ba2f18c" prot="public" virt="non-virtual"><scope>gf::RenderPipeline</scope><name>getView</name></member>
      <member refid="classgf_1_1_render_target_1a51f479ce259f75e323549980cc3f014e" prot="public" virt="non-virtual"><scope>gf::RenderPipeline</scope><name>getViewport</name></member>
      <member refid="classgf_1_1_render_target_1ac870325bffb142b4675ee2b3e9936b66" prot="protected" virt="non-virtual"><scope>gf::RenderPipeline</scope><name>initialize</name></member>
      <member refid="classgf_1_1_render_pipeline_1ae66bbd4758b0be20909ae3ca7833b219" prot="private" virt="non-virtual"><scope>gf::RenderPipeline</scope><name>m_buffers</name></member>
      <member refid="classgf_1_1_render_pipeline_1adc8a2434a6a1febb63434e61fa9ef0df" prot="private" virt="non-virtual"><scope>gf::RenderPipeline</scope><name>m_current</name></member>
      <member refid="classgf_1_1_render_pipeline_1a6b855ee844dd80ad1f814c2ffbf63e14" prot="private" virt="non-virtual"><scope>gf::RenderPipeline</scope><name>m_defaultEffect</name></member>
      <member refid="classgf_1_1_render_pipeline_1a6f511039a1b2d769acf2d922a687d3ac" prot="private" virt="non-virtual"><scope>gf::RenderPipeline</scope><name>m_effects</name></member>
      <member refid="classgf_1_1_render_pipeline_1a1f56dfe55e3851aac419034b887342d0" prot="private" virt="non-virtual"><scope>gf::RenderPipeline</scope><name>m_window</name></member>
      <member refid="classgf_1_1_render_target_1aec80dd6d1f6046f8cc3b1f32b8c80440" prot="public" virt="non-virtual"><scope>gf::RenderPipeline</scope><name>mapCoordsToPixel</name></member>
      <member refid="classgf_1_1_render_target_1aebfe664cad224644a04f2a82cb4acad7" prot="public" virt="non-virtual"><scope>gf::RenderPipeline</scope><name>mapCoordsToPixel</name></member>
      <member refid="classgf_1_1_render_target_1ad55789701df820a113d22dbc7cffb6e3" prot="public" virt="non-virtual"><scope>gf::RenderPipeline</scope><name>mapPixelToCoords</name></member>
      <member refid="classgf_1_1_render_target_1a78fae041fa10cd9a3a960f816b1147cb" prot="public" virt="non-virtual"><scope>gf::RenderPipeline</scope><name>mapPixelToCoords</name></member>
      <member refid="classgf_1_1_render_pipeline_1af38d6124884c232c4c6462b389190ce2" prot="protected" virt="virtual"><scope>gf::RenderPipeline</scope><name>onFramebufferResize</name></member>
      <member refid="classgf_1_1_render_target_1a06233abc86a7db72c62b012ed151dc62" prot="public" virt="non-virtual"><scope>gf::RenderPipeline</scope><name>operator=</name></member>
      <member refid="classgf_1_1_render_pipeline_1ae9dc847f0d2816749dde75ac11f929f5" prot="public" virt="non-virtual"><scope>gf::RenderPipeline</scope><name>RenderPipeline</name></member>
      <member refid="classgf_1_1_render_target_1a42e965c05374a9bd8f9bef9630572479" prot="public" virt="non-virtual"><scope>gf::RenderPipeline</scope><name>RenderTarget</name></member>
      <member refid="classgf_1_1_render_target_1af36a6312551fa0e297a9f6651b9fee82" prot="public" virt="non-virtual"><scope>gf::RenderPipeline</scope><name>RenderTarget</name></member>
      <member refid="classgf_1_1_render_pipeline_1a6bbeb9f32e7984133f05c971c4f170f5" prot="public" virt="non-virtual"><scope>gf::RenderPipeline</scope><name>resized</name></member>
      <member refid="classgf_1_1_render_target_1ab47783a4937a88fcf72e282030b86c54" prot="public" virt="non-virtual"><scope>gf::RenderPipeline</scope><name>setCanonicalScissorBox</name></member>
      <member refid="classgf_1_1_render_target_1ac400fc5713a745e5459a285ca4c3c11c" prot="public" virt="non-virtual"><scope>gf::RenderPipeline</scope><name>setScissorBox</name></member>
      <member refid="classgf_1_1_render_target_1ad0c0d32d96beabdd18cfdab4c64ee93a" prot="public" virt="non-virtual"><scope>gf::RenderPipeline</scope><name>setView</name></member>
      <member refid="classgf_1_1_render_pipeline_1aada88547c67770b3224a2879a67e0b2d" prot="public" virt="non-virtual"><scope>gf::RenderPipeline</scope><name>~RenderPipeline</name></member>
      <member refid="classgf_1_1_render_target_1a7d5128d6f88500fdc8b526ca24844431" prot="public" virt="virtual"><scope>gf::RenderPipeline</scope><name>~RenderTarget</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
