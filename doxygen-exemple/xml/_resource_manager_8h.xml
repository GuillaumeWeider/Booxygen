<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="_resource_manager_8h" kind="file" language="C++">
    <compoundname>ResourceManager.h</compoundname>
    <includes local="no">functional</includes>
    <includes local="no">map</includes>
    <includes local="no">memory</includes>
    <includes local="no">stdexcept</includes>
    <includes refid="_asset_manager_8h" local="yes">AssetManager.h</includes>
    <includes refid="_font_8h" local="yes">Font.h</includes>
    <includes refid="_portability_8h" local="yes">Portability.h</includes>
    <includes refid="_texture_8h" local="yes">Texture.h</includes>
    <includedby refid="_g_f_8h" local="yes">GF.h</includedby>
    <incdepgraph>
      <node id="1864">
        <label>ResourceManager.h</label>
        <link refid="_resource_manager_8h"/>
        <childnode refid="1865" relation="include">
        </childnode>
        <childnode refid="1866" relation="include">
        </childnode>
        <childnode refid="1867" relation="include">
        </childnode>
        <childnode refid="1868" relation="include">
        </childnode>
        <childnode refid="1869" relation="include">
        </childnode>
        <childnode refid="1875" relation="include">
        </childnode>
        <childnode refid="1874" relation="include">
        </childnode>
        <childnode refid="1877" relation="include">
        </childnode>
      </node>
      <node id="1865">
        <label>functional</label>
      </node>
      <node id="1873">
        <label>boost/functional/hash.hpp</label>
      </node>
      <node id="1871">
        <label>Path.h</label>
        <link refid="_path_8h_source"/>
        <childnode refid="1872" relation="include">
        </childnode>
        <childnode refid="1873" relation="include">
        </childnode>
      </node>
      <node id="1876">
        <label>cstdint</label>
      </node>
      <node id="1874">
        <label>Portability.h</label>
        <link refid="_portability_8h_source"/>
      </node>
      <node id="1868">
        <label>stdexcept</label>
      </node>
      <node id="1869">
        <label>AssetManager.h</label>
        <link refid="_asset_manager_8h_source"/>
        <childnode refid="1870" relation="include">
        </childnode>
        <childnode refid="1871" relation="include">
        </childnode>
        <childnode refid="1874" relation="include">
        </childnode>
      </node>
      <node id="1866">
        <label>map</label>
      </node>
      <node id="1875">
        <label>Font.h</label>
        <link refid="_font_8h_source"/>
        <childnode refid="1876" relation="include">
        </childnode>
        <childnode refid="1866" relation="include">
        </childnode>
        <childnode refid="1871" relation="include">
        </childnode>
        <childnode refid="1874" relation="include">
        </childnode>
        <childnode refid="1877" relation="include">
        </childnode>
      </node>
      <node id="1881">
        <label>Vector.h</label>
        <link refid="_vector_8h_source"/>
        <childnode refid="1879" relation="include">
        </childnode>
        <childnode refid="1876" relation="include">
        </childnode>
        <childnode refid="1880" relation="include">
        </childnode>
        <childnode refid="1882" relation="include">
        </childnode>
        <childnode refid="1883" relation="include">
        </childnode>
        <childnode refid="1874" relation="include">
        </childnode>
      </node>
      <node id="1870">
        <label>vector</label>
      </node>
      <node id="1872">
        <label>boost/filesystem.hpp</label>
      </node>
      <node id="1879">
        <label>cstddef</label>
      </node>
      <node id="1877">
        <label>Texture.h</label>
        <link refid="_texture_8h_source"/>
        <childnode refid="1876" relation="include">
        </childnode>
        <childnode refid="1871" relation="include">
        </childnode>
        <childnode refid="1874" relation="include">
        </childnode>
        <childnode refid="1878" relation="include">
        </childnode>
        <childnode refid="1881" relation="include">
        </childnode>
      </node>
      <node id="1883">
        <label>type_traits</label>
      </node>
      <node id="1880">
        <label>algorithm</label>
      </node>
      <node id="1878">
        <label>Rect.h</label>
        <link refid="_rect_8h_source"/>
        <childnode refid="1879" relation="include">
        </childnode>
        <childnode refid="1880" relation="include">
        </childnode>
        <childnode refid="1874" relation="include">
        </childnode>
        <childnode refid="1881" relation="include">
        </childnode>
      </node>
      <node id="1867">
        <label>memory</label>
      </node>
      <node id="1882">
        <label>initializer_list</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="1884">
        <label>ResourceManager.h</label>
        <link refid="_resource_manager_8h"/>
        <childnode refid="1885" relation="include">
        </childnode>
      </node>
      <node id="1885">
        <label>GF.h</label>
        <link refid="_g_f_8h_source"/>
      </node>
    </invincdepgraph>
    <innerclass refid="classgf_1_1_resource_cache" prot="public">gf::ResourceCache</innerclass>
    <innerclass refid="classgf_1_1_resource_manager" prot="public">gf::ResourceManager</innerclass>
    <innernamespace refid="namespacegf">gf</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/>*<sp/>Gamedev<sp/>Framework<sp/>(gf)</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/>*<sp/>Copyright<sp/>(C)<sp/>2016-2017<sp/>Julien<sp/>Bernard</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>*<sp/>This<sp/>software<sp/>is<sp/>provided<sp/>&apos;as-is&apos;,<sp/>without<sp/>any<sp/>express<sp/>or<sp/>implied</highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/>*<sp/>warranty.<sp/><sp/>In<sp/>no<sp/>event<sp/>will<sp/>the<sp/>authors<sp/>be<sp/>held<sp/>liable<sp/>for<sp/>any<sp/>damages</highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/>*<sp/>arising<sp/>from<sp/>the<sp/>use<sp/>of<sp/>this<sp/>software.</highlight></codeline>
<codeline lineno="8"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="9"><highlight class="comment"><sp/>*<sp/>Permission<sp/>is<sp/>granted<sp/>to<sp/>anyone<sp/>to<sp/>use<sp/>this<sp/>software<sp/>for<sp/>any<sp/>purpose,</highlight></codeline>
<codeline lineno="10"><highlight class="comment"><sp/>*<sp/>including<sp/>commercial<sp/>applications,<sp/>and<sp/>to<sp/>alter<sp/>it<sp/>and<sp/>redistribute<sp/>it</highlight></codeline>
<codeline lineno="11"><highlight class="comment"><sp/>*<sp/>freely,<sp/>subject<sp/>to<sp/>the<sp/>following<sp/>restrictions:</highlight></codeline>
<codeline lineno="12"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="13"><highlight class="comment"><sp/>*<sp/>1.<sp/>The<sp/>origin<sp/>of<sp/>this<sp/>software<sp/>must<sp/>not<sp/>be<sp/>misrepresented;<sp/>you<sp/>must<sp/>not</highlight></codeline>
<codeline lineno="14"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/>claim<sp/>that<sp/>you<sp/>wrote<sp/>the<sp/>original<sp/>software.<sp/>If<sp/>you<sp/>use<sp/>this<sp/>software</highlight></codeline>
<codeline lineno="15"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/>in<sp/>a<sp/>product,<sp/>an<sp/>acknowledgment<sp/>in<sp/>the<sp/>product<sp/>documentation<sp/>would<sp/>be</highlight></codeline>
<codeline lineno="16"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/>appreciated<sp/>but<sp/>is<sp/>not<sp/>required.</highlight></codeline>
<codeline lineno="17"><highlight class="comment"><sp/>*<sp/>2.<sp/>Altered<sp/>source<sp/>versions<sp/>must<sp/>be<sp/>plainly<sp/>marked<sp/>as<sp/>such,<sp/>and<sp/>must<sp/>not<sp/>be</highlight></codeline>
<codeline lineno="18"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/>misrepresented<sp/>as<sp/>being<sp/>the<sp/>original<sp/>software.</highlight></codeline>
<codeline lineno="19"><highlight class="comment"><sp/>*<sp/>3.<sp/>This<sp/>notice<sp/>may<sp/>not<sp/>be<sp/>removed<sp/>or<sp/>altered<sp/>from<sp/>any<sp/>source<sp/>distribution.</highlight></codeline>
<codeline lineno="20"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>GF_RESOURCE_MANAGER_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>GF_RESOURCE_MANAGER_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;functional&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;map&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;memory&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdexcept&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;AssetManager.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;Font.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;Portability.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;Texture.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespacegf" kindref="compound">gf</ref><sp/>{</highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>DOXYGEN_SHOULD_SKIP_THIS</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">v1<sp/>{</highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="49" refid="classgf_1_1_resource_cache" refkind="compound"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classgf_1_1_resource_cache" kindref="compound">ResourceCache</ref><sp/>{</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="54" refid="classgf_1_1_resource_cache_1ab8fb813d1b9dd8671a4f679e27393a16" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="classgf_1_1_resource_cache_1ab8fb813d1b9dd8671a4f679e27393a16" kindref="member">Loader</ref><sp/>=<sp/>std::function&lt;std::unique_ptr&lt;T&gt;(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="group__core_1ga6788e40b762777c1081f796076116a02" kindref="member">Path</ref>&amp;)&gt;;</highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight></codeline>
<codeline lineno="61" refid="classgf_1_1_resource_cache_1a9e2b4b3662262b0cd0d0da272808bf10" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">explicit</highlight><highlight class="normal"><sp/><ref refid="classgf_1_1_resource_cache_1a9e2b4b3662262b0cd0d0da272808bf10" kindref="member">ResourceCache</ref>(<ref refid="classgf_1_1_resource_cache_1ab8fb813d1b9dd8671a4f679e27393a16" kindref="member">Loader</ref><sp/>loader)</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/>:<sp/>m_loader(<ref refid="namespacestd" kindref="compound">std</ref>::move(loader))</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="64"><highlight class="normal"></highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="66"><highlight class="normal"></highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classgf_1_1_resource_cache" kindref="compound">ResourceCache</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classgf_1_1_resource_cache" kindref="compound">ResourceCache</ref>&amp;)<sp/>=<sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="71"><highlight class="normal"></highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classgf_1_1_resource_cache" kindref="compound">ResourceCache</ref>&amp;<sp/>operator=(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classgf_1_1_resource_cache" kindref="compound">ResourceCache</ref>&amp;)<sp/>=<sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="76"><highlight class="normal"></highlight></codeline>
<codeline lineno="89" refid="classgf_1_1_resource_cache_1afc64c48af73afc76e16ffb0fb86d0d89" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__window_1gga795d7d5e2f2a4f38b16b95e0e78cb626ab9ece18c950afbfa6b0fdbfa4ff731d3" kindref="member">T</ref>&amp;<sp/><ref refid="classgf_1_1_resource_cache_1afc64c48af73afc76e16ffb0fb86d0d89" kindref="member">getResource</ref>(<ref refid="classgf_1_1_asset_manager" kindref="compound">AssetManager</ref>&amp;<sp/>assetManager,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="group__core_1ga6788e40b762777c1081f796076116a02" kindref="member">Path</ref>&amp;<sp/>filename)<sp/>{</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>std::size_t<sp/>h<sp/>=<sp/>boost::filesystem::hash_value(filename);</highlight></codeline>
<codeline lineno="91"><highlight class="normal"></highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>it<sp/>=<sp/>m_cache.find(h);</highlight></codeline>
<codeline lineno="93"><highlight class="normal"></highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(it<sp/>!=<sp/>m_cache.end())<sp/>{</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*it-&gt;second;</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="97"><highlight class="normal"></highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__core_1ga6788e40b762777c1081f796076116a02" kindref="member">Path</ref><sp/>absolutePath<sp/>=<sp/>assetManager.<ref refid="classgf_1_1_asset_manager_1a74a37db9fa1173593a20d58169d5226e" kindref="member">getAbsolutePath</ref>(filename);</highlight></codeline>
<codeline lineno="99"><highlight class="normal"></highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(absolutePath.empty())<sp/>{</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>std::runtime_error(</highlight><highlight class="stringliteral">&quot;Path<sp/>not<sp/>found&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="103"><highlight class="normal"></highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>ptr<sp/>=<sp/>m_loader(absolutePath);</highlight></codeline>
<codeline lineno="105"><highlight class="normal"></highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!ptr)<sp/>{</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>std::runtime_error(</highlight><highlight class="stringliteral">&quot;Resource<sp/>not<sp/>loaded&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="109"><highlight class="normal"></highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>inserted<sp/>=<sp/>m_cache.emplace(h,<sp/>std::move(ptr));</highlight></codeline>
<codeline lineno="111"><highlight class="normal"></highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(inserted.second)<sp/>{</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*inserted.first-&gt;second;</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="115"><highlight class="normal"></highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>std::runtime_error(</highlight><highlight class="stringliteral">&quot;Resource<sp/>not<sp/>inserted<sp/>in<sp/>the<sp/>cache&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="118"><highlight class="normal"></highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classgf_1_1_resource_cache_1ab8fb813d1b9dd8671a4f679e27393a16" kindref="member">Loader</ref><sp/>m_loader;</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/>std::map&lt;std::size_t,<sp/>std::unique_ptr&lt;T&gt;&gt;<sp/>m_cache;</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/>};</highlight></codeline>
<codeline lineno="123"><highlight class="normal"></highlight></codeline>
<codeline lineno="124"><highlight class="normal"></highlight></codeline>
<codeline lineno="131" refid="classgf_1_1_resource_manager" refkind="compound"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">GF_API<sp/><ref refid="classgf_1_1_resource_manager" kindref="compound">ResourceManager</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="classgf_1_1_asset_manager" kindref="compound">AssetManager</ref><sp/>{</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classgf_1_1_resource_manager" kindref="compound">ResourceManager</ref>();</highlight></codeline>
<codeline lineno="137"><highlight class="normal"></highlight></codeline>
<codeline lineno="145" refid="classgf_1_1_resource_manager_1a4b9046e93c19d509872302de924f442a" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classgf_1_1_texture" kindref="compound">Texture</ref>&amp;<sp/><ref refid="classgf_1_1_resource_manager_1a4b9046e93c19d509872302de924f442a" kindref="member">getTexture</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="group__core_1ga6788e40b762777c1081f796076116a02" kindref="member">Path</ref>&amp;<sp/>path)<sp/>{</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_textures.getResource(*</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>path);</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="148"><highlight class="normal"></highlight></codeline>
<codeline lineno="156" refid="classgf_1_1_resource_manager_1a8598aba56bfe2a6228131871e1e61b0e" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classgf_1_1_font" kindref="compound">Font</ref>&amp;<sp/><ref refid="classgf_1_1_resource_manager_1a8598aba56bfe2a6228131871e1e61b0e" kindref="member">getFont</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="group__core_1ga6788e40b762777c1081f796076116a02" kindref="member">Path</ref>&amp;<sp/>path)<sp/>{</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_fonts.getResource(*</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>path);</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="159"><highlight class="normal"></highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classgf_1_1_resource_cache" kindref="compound">ResourceCache&lt;Texture&gt;</ref><sp/>m_textures;</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classgf_1_1_resource_cache" kindref="compound">ResourceCache&lt;Font&gt;</ref><sp/>m_fonts;</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/>};</highlight></codeline>
<codeline lineno="164"><highlight class="normal"></highlight></codeline>
<codeline lineno="165"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>DOXYGEN_SHOULD_SKIP_THIS</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="166"><highlight class="normal">}</highlight></codeline>
<codeline lineno="167"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="168"><highlight class="normal">}</highlight></codeline>
<codeline lineno="169"><highlight class="normal"></highlight></codeline>
<codeline lineno="170"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/>//<sp/>GF_RESOURCE_MANAGER_H</highlight></codeline>
    </programlisting>
    <location file="/home/jbernard/Workshop/gf/versions/include/gf/ResourceManager.h"/>
  </compounddef>
</doxygen>
