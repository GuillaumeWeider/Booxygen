<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="classgf_1_1_nine_patch" kind="class" language="C++" prot="public">
    <compoundname>gf::NinePatch</compoundname>
    <basecompoundref refid="classgf_1_1_transformable" prot="public" virt="non-virtual">gf::Transformable</basecompoundref>
    <includes refid="_nine_patch_8h" local="no">gf/NinePatch.h</includes>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classgf_1_1_nine_patch_1a9f26907341ac621eedbffb097bdb96ba" prot="private" static="no" mutable="no">
        <type>const <ref refid="classgf_1_1_texture" kindref="compound">Texture</ref> *</type>
        <definition>const Texture* gf::NinePatch::m_texture</definition>
        <argsstring></argsstring>
        <name>m_texture</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jbernard/Workshop/gf/versions/include/gf/NinePatch.h" line="270" column="1" bodyfile="/home/jbernard/Workshop/gf/versions/include/gf/NinePatch.h" bodystart="270" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classgf_1_1_nine_patch_1abc09949dfe3d3c09eb73946ee29ec2c9" prot="private" static="no" mutable="no">
        <type><ref refid="group__core_1gac3887a7df16895871374b04d9f6cb961" kindref="member">RectF</ref></type>
        <definition>RectF gf::NinePatch::m_textureRect</definition>
        <argsstring></argsstring>
        <name>m_textureRect</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jbernard/Workshop/gf/versions/include/gf/NinePatch.h" line="271" column="1" bodyfile="/home/jbernard/Workshop/gf/versions/include/gf/NinePatch.h" bodystart="271" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classgf_1_1_nine_patch_1adef3b7bf35e6be1d63cc4df3bfd86ea1" prot="private" static="no" mutable="no">
        <type>float</type>
        <definition>float gf::NinePatch::m_top</definition>
        <argsstring></argsstring>
        <name>m_top</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jbernard/Workshop/gf/versions/include/gf/NinePatch.h" line="273" column="1" bodyfile="/home/jbernard/Workshop/gf/versions/include/gf/NinePatch.h" bodystart="273" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classgf_1_1_nine_patch_1a9faaebd4f14d2c3450b73cc589ec9607" prot="private" static="no" mutable="no">
        <type>float</type>
        <definition>float gf::NinePatch::m_bottom</definition>
        <argsstring></argsstring>
        <name>m_bottom</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jbernard/Workshop/gf/versions/include/gf/NinePatch.h" line="274" column="1" bodyfile="/home/jbernard/Workshop/gf/versions/include/gf/NinePatch.h" bodystart="274" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classgf_1_1_nine_patch_1a6ac6c7ec415bd53264a4630f5db21703" prot="private" static="no" mutable="no">
        <type>float</type>
        <definition>float gf::NinePatch::m_left</definition>
        <argsstring></argsstring>
        <name>m_left</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jbernard/Workshop/gf/versions/include/gf/NinePatch.h" line="275" column="1" bodyfile="/home/jbernard/Workshop/gf/versions/include/gf/NinePatch.h" bodystart="275" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classgf_1_1_nine_patch_1ab2d7f4a99bb42cacd3425639c487d4dd" prot="private" static="no" mutable="no">
        <type>float</type>
        <definition>float gf::NinePatch::m_right</definition>
        <argsstring></argsstring>
        <name>m_right</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jbernard/Workshop/gf/versions/include/gf/NinePatch.h" line="276" column="1" bodyfile="/home/jbernard/Workshop/gf/versions/include/gf/NinePatch.h" bodystart="276" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classgf_1_1_nine_patch_1aa98c00389b905ace49a85ebba7c2b7de" prot="private" static="no" mutable="no">
        <type><ref refid="group__core_1ga6036002b111f9c4216809da953818625" kindref="member">Vector2f</ref></type>
        <definition>Vector2f gf::NinePatch::m_size</definition>
        <argsstring></argsstring>
        <name>m_size</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jbernard/Workshop/gf/versions/include/gf/NinePatch.h" line="278" column="1" bodyfile="/home/jbernard/Workshop/gf/versions/include/gf/NinePatch.h" bodystart="278" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classgf_1_1_nine_patch_1a72d100702c1fd5068f60d794a1045251" prot="private" static="no" mutable="no">
        <type><ref refid="structgf_1_1_vertex" kindref="compound">Vertex</ref></type>
        <definition>Vertex gf::NinePatch::m_vertices[16]</definition>
        <argsstring>[16]</argsstring>
        <name>m_vertices</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jbernard/Workshop/gf/versions/include/gf/NinePatch.h" line="280" column="1" bodyfile="/home/jbernard/Workshop/gf/versions/include/gf/NinePatch.h" bodystart="280" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classgf_1_1_nine_patch_1ae9ddc8a13a404ede9d34238848b006ac" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>gf::NinePatch::NinePatch</definition>
        <argsstring>()</argsstring>
        <name>NinePatch</name>
        <briefdescription>
<para>Default constructor. </para>        </briefdescription>
        <detaileddescription>
<para>Creates an empty nine-patch with no source texture </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jbernard/Workshop/gf/versions/include/gf/NinePatch.h" line="53" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classgf_1_1_nine_patch_1a4cb7631f5bfda2104e64f32e8631fac8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>gf::NinePatch::NinePatch</definition>
        <argsstring>(const Texture &amp;texture)</argsstring>
        <name>NinePatch</name>
        <param>
          <type>const <ref refid="classgf_1_1_texture" kindref="compound">Texture</ref> &amp;</type>
          <declname>texture</declname>
        </param>
        <briefdescription>
<para>Construct the nine-patch from a source texture. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>texture</parametername>
</parameternamelist>
<parameterdescription>
<para>Source texture</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="see"><para><ref refid="classgf_1_1_nine_patch_1ab5b90a8235e58f03c468f4610ba6263b" kindref="member">setTexture()</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jbernard/Workshop/gf/versions/include/gf/NinePatch.h" line="62" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classgf_1_1_nine_patch_1a730ccfae2a8b86f3583d0b9725a9ed16" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>gf::NinePatch::NinePatch</definition>
        <argsstring>(const Texture &amp;texture, const RectF &amp;textureRect)</argsstring>
        <name>NinePatch</name>
        <param>
          <type>const <ref refid="classgf_1_1_texture" kindref="compound">Texture</ref> &amp;</type>
          <declname>texture</declname>
        </param>
        <param>
          <type>const <ref refid="group__core_1gac3887a7df16895871374b04d9f6cb961" kindref="member">RectF</ref> &amp;</type>
          <declname>textureRect</declname>
        </param>
        <briefdescription>
<para>Construct the nine-patch from a sub-rectangle of a source texture. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>texture</parametername>
</parameternamelist>
<parameterdescription>
<para>Source texture </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>textureRect</parametername>
</parameternamelist>
<parameterdescription>
<para>Sub-rectangle of the texture to assign to the nine-patch</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="see"><para><ref refid="classgf_1_1_nine_patch_1ab5b90a8235e58f03c468f4610ba6263b" kindref="member">setTexture()</ref>, <ref refid="classgf_1_1_nine_patch_1ac070add1a1f13238cbcb19f311be722c" kindref="member">setTextureRect()</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jbernard/Workshop/gf/versions/include/gf/NinePatch.h" line="72" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classgf_1_1_nine_patch_1ab5b90a8235e58f03c468f4610ba6263b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void gf::NinePatch::setTexture</definition>
        <argsstring>(const Texture &amp;texture, bool resetRect=false)</argsstring>
        <name>setTexture</name>
        <param>
          <type>const <ref refid="classgf_1_1_texture" kindref="compound">Texture</ref> &amp;</type>
          <declname>texture</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>resetRect</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
<para>Change the source texture of the nine-patch. </para>        </briefdescription>
        <detaileddescription>
<para>The texture must exist as long as the nine-patch uses it. Indeed, the nine-patch doesn&apos;t store its own copy of the texture, but rather keeps a pointer to the one that you passed to this function. If the source texture is destroyed and the nine-patch tries to use it, the behavior is undefined.</para><para>If <computeroutput>resetRect</computeroutput> is true, the texture rect property of the nine-patch is automatically adjusted to the size of the new texture. If it is false, the texture rect is left unchanged.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>texture</parametername>
</parameternamelist>
<parameterdescription>
<para>New texture </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>resetRect</parametername>
</parameternamelist>
<parameterdescription>
<para>Should the texture rect be reset to the size of the new texture?</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="see"><para><ref refid="classgf_1_1_nine_patch_1a8a7a1a0b7c9601389815f6288c957585" kindref="member">getTexture()</ref>, <ref refid="classgf_1_1_nine_patch_1ac070add1a1f13238cbcb19f311be722c" kindref="member">setTextureRect()</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jbernard/Workshop/gf/versions/include/gf/NinePatch.h" line="92" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classgf_1_1_nine_patch_1a8a7a1a0b7c9601389815f6288c957585" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const <ref refid="classgf_1_1_texture" kindref="compound">Texture</ref> &amp;</type>
        <definition>const Texture&amp; gf::NinePatch::getTexture</definition>
        <argsstring>() const</argsstring>
        <name>getTexture</name>
        <briefdescription>
<para>Get the source texture of the nine-patch. </para>        </briefdescription>
        <detaileddescription>
<para>The returned reference is const, which means that you can&apos;t modify the texture when you retrieve it with this function.</para><para><simplesect kind="return"><para>Reference to the nine-patch&apos;s texture</para></simplesect>
<simplesect kind="see"><para><ref refid="classgf_1_1_nine_patch_1ab5b90a8235e58f03c468f4610ba6263b" kindref="member">setTexture()</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jbernard/Workshop/gf/versions/include/gf/NinePatch.h" line="104" column="1" bodyfile="/home/jbernard/Workshop/gf/versions/include/gf/NinePatch.h" bodystart="104" bodyend="106"/>
      </memberdef>
      <memberdef kind="function" id="classgf_1_1_nine_patch_1ad25d21b9c6d60e1054ad0401297a2ecd" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool gf::NinePatch::hasTexture</definition>
        <argsstring>() const</argsstring>
        <name>hasTexture</name>
        <briefdescription>
<para>Check if a texture is set. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>True if a texture is already set</para></simplesect>
<simplesect kind="see"><para><ref refid="classgf_1_1_nine_patch_1ab5b90a8235e58f03c468f4610ba6263b" kindref="member">setTexture()</ref>, <ref refid="classgf_1_1_nine_patch_1a8a7a1a0b7c9601389815f6288c957585" kindref="member">getTexture()</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jbernard/Workshop/gf/versions/include/gf/NinePatch.h" line="115" column="1" bodyfile="/home/jbernard/Workshop/gf/versions/include/gf/NinePatch.h" bodystart="115" bodyend="117"/>
      </memberdef>
      <memberdef kind="function" id="classgf_1_1_nine_patch_1a1c46d77f270ee4e35d6a2fa6ff75b04c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void gf::NinePatch::unsetTexture</definition>
        <argsstring>()</argsstring>
        <name>unsetTexture</name>
        <briefdescription>
<para>Unset the source texture of the nine-patch. </para>        </briefdescription>
        <detaileddescription>
<para>After a call to this function, the nine-patch has no source texture.</para><para><simplesect kind="see"><para><ref refid="classgf_1_1_nine_patch_1ab5b90a8235e58f03c468f4610ba6263b" kindref="member">setTexture()</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jbernard/Workshop/gf/versions/include/gf/NinePatch.h" line="126" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classgf_1_1_nine_patch_1ac070add1a1f13238cbcb19f311be722c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void gf::NinePatch::setTextureRect</definition>
        <argsstring>(const RectF &amp;rect)</argsstring>
        <name>setTextureRect</name>
        <param>
          <type>const <ref refid="group__core_1gac3887a7df16895871374b04d9f6cb961" kindref="member">RectF</ref> &amp;</type>
          <declname>rect</declname>
        </param>
        <briefdescription>
<para>Set the sub-rectangle of the texture that the nine-patch will display. </para>        </briefdescription>
        <detaileddescription>
<para>The texture rect is useful when you don&apos;t want to display the whole texture, but rather a part of it. By default, the texture rect covers the entire texture.</para><para>The rectangle is given in texture coordinates, meaning that <formula id="75">$(0,0)$</formula> is the top left corner and <formula id="76">$(1,1)$</formula> is the bottom right corner.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>rect</parametername>
</parameternamelist>
<parameterdescription>
<para>Rectangle defining the region of the texture to display</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="see"><para><ref refid="classgf_1_1_nine_patch_1a593074c9d60cf882a4c2e229c179eb66" kindref="member">getTextureRect()</ref>, <ref refid="classgf_1_1_nine_patch_1ab5b90a8235e58f03c468f4610ba6263b" kindref="member">setTexture()</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jbernard/Workshop/gf/versions/include/gf/NinePatch.h" line="143" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classgf_1_1_nine_patch_1a593074c9d60cf882a4c2e229c179eb66" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const <ref refid="group__core_1gac3887a7df16895871374b04d9f6cb961" kindref="member">RectF</ref> &amp;</type>
        <definition>const RectF&amp; gf::NinePatch::getTextureRect</definition>
        <argsstring>() const</argsstring>
        <name>getTextureRect</name>
        <briefdescription>
<para>Get the sub-rectangle of the texture displayed by the nine-patch. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para><ref refid="classgf_1_1_texture" kindref="compound">Texture</ref> rectangle of the nine-patch in texture coordinates</para></simplesect>
<simplesect kind="see"><para><ref refid="classgf_1_1_nine_patch_1ac070add1a1f13238cbcb19f311be722c" kindref="member">setTextureRect()</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jbernard/Workshop/gf/versions/include/gf/NinePatch.h" line="152" column="1" bodyfile="/home/jbernard/Workshop/gf/versions/include/gf/NinePatch.h" bodystart="152" bodyend="154"/>
      </memberdef>
      <memberdef kind="function" id="classgf_1_1_nine_patch_1a4911d58102df53e8bfdb25655fbadc2b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void gf::NinePatch::setColor</definition>
        <argsstring>(const Color4f &amp;color)</argsstring>
        <name>setColor</name>
        <param>
          <type>const <ref refid="group__core_1ga8c82c7df6d3bbd7f8d3601534b22a087" kindref="member">Color4f</ref> &amp;</type>
          <declname>color</declname>
        </param>
        <briefdescription>
<para>Set the global color of the nine-patch. </para>        </briefdescription>
        <detaileddescription>
<para>This color is modulated (multiplied) with the nine-patch&apos;s texture. It can be used to colorize the nine-patch, or change its global opacity.</para><para>By default, the nine-patch&apos;s color is opaque white.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>color</parametername>
</parameternamelist>
<parameterdescription>
<para>New color of the nine-patch</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="see"><para><ref refid="classgf_1_1_nine_patch_1a7d4236f08395f74a0bcdf7584d024196" kindref="member">getColor()</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jbernard/Workshop/gf/versions/include/gf/NinePatch.h" line="169" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classgf_1_1_nine_patch_1a7d4236f08395f74a0bcdf7584d024196" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const <ref refid="group__core_1ga8c82c7df6d3bbd7f8d3601534b22a087" kindref="member">Color4f</ref> &amp;</type>
        <definition>const Color4f&amp; gf::NinePatch::getColor</definition>
        <argsstring>() const</argsstring>
        <name>getColor</name>
        <briefdescription>
<para>Get the global color of the nine-patch. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>Global color of the nine-patch</para></simplesect>
<simplesect kind="see"><para><ref refid="classgf_1_1_nine_patch_1a4911d58102df53e8bfdb25655fbadc2b" kindref="member">setColor()</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jbernard/Workshop/gf/versions/include/gf/NinePatch.h" line="178" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classgf_1_1_nine_patch_1aded0bd5c08ad2aec856d78678c6d2ab7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void gf::NinePatch::setLimits</definition>
        <argsstring>(float top, float bottom, float left, float right)</argsstring>
        <name>setLimits</name>
        <param>
          <type>float</type>
          <declname>top</declname>
        </param>
        <param>
          <type>float</type>
          <declname>bottom</declname>
        </param>
        <param>
          <type>float</type>
          <declname>left</declname>
        </param>
        <param>
          <type>float</type>
          <declname>right</declname>
        </param>
        <briefdescription>
<para>Set the limits of the stretchable area. </para>        </briefdescription>
        <detaileddescription>
<para>The limits are given in normalized coordinates</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>top</parametername>
</parameternamelist>
<parameterdescription>
<para>The top limit </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>bottom</parametername>
</parameternamelist>
<parameterdescription>
<para>The bottom limit </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>left</parametername>
</parameternamelist>
<parameterdescription>
<para>The left limit </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>right</parametername>
</parameternamelist>
<parameterdescription>
<para>The right limit </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jbernard/Workshop/gf/versions/include/gf/NinePatch.h" line="190" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classgf_1_1_nine_patch_1a4f5e1e7fce67f4ba89e17017793b8152" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void gf::NinePatch::setVerticalLimits</definition>
        <argsstring>(float top, float bottom)</argsstring>
        <name>setVerticalLimits</name>
        <param>
          <type>float</type>
          <declname>top</declname>
        </param>
        <param>
          <type>float</type>
          <declname>bottom</declname>
        </param>
        <briefdescription>
<para>Set the vertical limits of the stretchable area. </para>        </briefdescription>
        <detaileddescription>
<para>The limits are given in normalized coordinates</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>top</parametername>
</parameternamelist>
<parameterdescription>
<para>The top limit </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>bottom</parametername>
</parameternamelist>
<parameterdescription>
<para>The bottom limit </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jbernard/Workshop/gf/versions/include/gf/NinePatch.h" line="200" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classgf_1_1_nine_patch_1adc0f276c177ae2aa3850b20ed0c16f9e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void gf::NinePatch::setHorizontalLimits</definition>
        <argsstring>(float left, float right)</argsstring>
        <name>setHorizontalLimits</name>
        <param>
          <type>float</type>
          <declname>left</declname>
        </param>
        <param>
          <type>float</type>
          <declname>right</declname>
        </param>
        <briefdescription>
<para>Set the horizontal limits of the stretchable area. </para>        </briefdescription>
        <detaileddescription>
<para>The limits are given in normalized coordinates</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>left</parametername>
</parameternamelist>
<parameterdescription>
<para>The left limit </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>right</parametername>
</parameternamelist>
<parameterdescription>
<para>The right limit </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jbernard/Workshop/gf/versions/include/gf/NinePatch.h" line="210" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classgf_1_1_nine_patch_1a5ffd18086f7e0a5b3dfd7b62abd8dbcd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void gf::NinePatch::setSize</definition>
        <argsstring>(Vector2f size)</argsstring>
        <name>setSize</name>
        <param>
          <type><ref refid="group__core_1ga6036002b111f9c4216809da953818625" kindref="member">Vector2f</ref></type>
          <declname>size</declname>
        </param>
        <briefdescription>
<para>Set the size of the stretched area. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>size</parametername>
</parameternamelist>
<parameterdescription>
<para>The size of the stretched area </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jbernard/Workshop/gf/versions/include/gf/NinePatch.h" line="217" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classgf_1_1_nine_patch_1ac465fd79edcb8c43c706b3c1a8bcbbfc" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="group__core_1ga6036002b111f9c4216809da953818625" kindref="member">Vector2f</ref></type>
        <definition>Vector2f gf::NinePatch::getSize</definition>
        <argsstring>() const</argsstring>
        <name>getSize</name>
        <briefdescription>
<para>Get the size of the stretched area. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>The size of the stretched area </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jbernard/Workshop/gf/versions/include/gf/NinePatch.h" line="224" column="1" bodyfile="/home/jbernard/Workshop/gf/versions/include/gf/NinePatch.h" bodystart="224" bodyend="226"/>
      </memberdef>
      <memberdef kind="function" id="classgf_1_1_nine_patch_1a34bdc57d46326cc3f05ec770424793b0" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__core_1gac3887a7df16895871374b04d9f6cb961" kindref="member">RectF</ref></type>
        <definition>RectF gf::NinePatch::getLocalBounds</definition>
        <argsstring>() const</argsstring>
        <name>getLocalBounds</name>
        <briefdescription>
<para>Get the local bounding rectangle of the entity. </para>        </briefdescription>
        <detaileddescription>
<para>The returned rectangle is in local coordinates, which means that it ignores the transformations (translation, rotation, scale, ...) that are applied to the entity. In other words, this function returns the bounds of the entity in the entity&apos;s coordinate system.</para><para><simplesect kind="return"><para>Local bounding rectangle of the entity </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jbernard/Workshop/gf/versions/include/gf/NinePatch.h" line="239" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classgf_1_1_nine_patch_1a8e624585bd76d7e6d6b9178a596bf820" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void gf::NinePatch::setAnchor</definition>
        <argsstring>(Anchor anchor)</argsstring>
        <name>setAnchor</name>
        <param>
          <type><ref refid="group__graphics_1gadeb9cdf9d7e8eec2eb8cc638c54b5066" kindref="member">Anchor</ref></type>
          <declname>anchor</declname>
        </param>
        <briefdescription>
<para>Set the anchor origin of the entity. </para>        </briefdescription>
        <detaileddescription>
<para>Compute the origin of the entity based on the local bounds and the specified anchor. Internally, this function calls <computeroutput><ref refid="classgf_1_1_transformable_1a31bb4b55326593ea763dfdc8f12c67f4" kindref="member">Transformable::setOrigin()</ref></computeroutput>.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>anchor</parametername>
</parameternamelist>
<parameterdescription>
<para>The anchor of the entity </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="see"><para><ref refid="classgf_1_1_nine_patch_1a34bdc57d46326cc3f05ec770424793b0" kindref="member">getLocalBounds()</ref>, <ref refid="classgf_1_1_transformable_1a31bb4b55326593ea763dfdc8f12c67f4" kindref="member">Transformable::setOrigin()</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jbernard/Workshop/gf/versions/include/gf/NinePatch.h" line="251" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classgf_1_1_nine_patch_1a2d5b3688ff0de19f885e4b41bceeb018" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classgf_1_1_vertex_buffer" kindref="compound">VertexBuffer</ref></type>
        <definition>VertexBuffer gf::NinePatch::commitGeometry</definition>
        <argsstring>() const</argsstring>
        <name>commitGeometry</name>
        <briefdescription>
<para>Create a buffer with the current geometry. </para>        </briefdescription>
        <detaileddescription>
<para>The geometry is uploaded in the graphics memory so that it&apos;s faster to draw.</para><para><simplesect kind="return"><para>A buffer with the current geometry </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jbernard/Workshop/gf/versions/include/gf/NinePatch.h" line="261" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classgf_1_1_nine_patch_1aa1294e55d739541c4e6e6dd80c7f98a5" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>virtual void gf::NinePatch::draw</definition>
        <argsstring>(RenderTarget &amp;target, RenderStates states) override</argsstring>
        <name>draw</name>
        <reimplements refid="classgf_1_1_drawable_1a01535a84e4fb6222311ceb81accc4a27">draw</reimplements>
        <param>
          <type><ref refid="classgf_1_1_render_target" kindref="compound">RenderTarget</ref> &amp;</type>
          <declname>target</declname>
        </param>
        <param>
          <type><ref refid="structgf_1_1_render_states" kindref="compound">RenderStates</ref></type>
          <declname>states</declname>
        </param>
        <briefdescription>
<para>Draw the object to a render target. </para>        </briefdescription>
        <detaileddescription>
<para>This is a pure virtual function that has to be implemented by the derived class to define how the drawable should be drawn.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>target</parametername>
</parameternamelist>
<parameterdescription>
<para>Render target to draw to </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>states</parametername>
</parameternamelist>
<parameterdescription>
<para>Current render states </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jbernard/Workshop/gf/versions/include/gf/NinePatch.h" line="263" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="classgf_1_1_nine_patch_1ab5ba9fb20d14a1ad807027c43b3372b9" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void gf::NinePatch::updatePositions</definition>
        <argsstring>()</argsstring>
        <name>updatePositions</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jbernard/Workshop/gf/versions/include/gf/NinePatch.h" line="266" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classgf_1_1_nine_patch_1a5062ff6dcd35765140865061ea761b79" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void gf::NinePatch::updateTexCoords</definition>
        <argsstring>()</argsstring>
        <name>updateTexCoords</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jbernard/Workshop/gf/versions/include/gf/NinePatch.h" line="267" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>A nine-patch. </para>    </briefdescription>
    <detaileddescription>
<para>A nine-patch is a stretchable image that can be automatically resized. You just have to indicate the position of the stretchable area and that&apos;s it.</para><para><simplesect kind="see"><para><ulink url="http://developer.android.com/tools/help/draw9patch.html">Android Developers: Draw 9-patch</ulink> </para></simplesect>
<simplesect kind="see"><para><ulink url="http://developer.android.com/guide/topics/graphics/2d-graphics.html#nine-patch">Android Developers: Nine-patch</ulink> </para></simplesect>
</para>    </detaileddescription>
    <inheritancegraph>
      <node id="493">
        <label>gf::NinePatch</label>
        <link refid="classgf_1_1_nine_patch"/>
        <childnode refid="494" relation="public-inheritance">
        </childnode>
      </node>
      <node id="495">
        <label>gf::Drawable</label>
        <link refid="classgf_1_1_drawable"/>
      </node>
      <node id="494">
        <label>gf::Transformable</label>
        <link refid="classgf_1_1_transformable"/>
        <childnode refid="495" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="496">
        <label>gf::NinePatch</label>
        <link refid="classgf_1_1_nine_patch"/>
        <childnode refid="497" relation="public-inheritance">
        </childnode>
      </node>
      <node id="498">
        <label>gf::Drawable</label>
        <link refid="classgf_1_1_drawable"/>
      </node>
      <node id="497">
        <label>gf::Transformable</label>
        <link refid="classgf_1_1_transformable"/>
        <childnode refid="498" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="/home/jbernard/Workshop/gf/versions/include/gf/NinePatch.h" line="46" column="1" bodyfile="/home/jbernard/Workshop/gf/versions/include/gf/NinePatch.h" bodystart="46" bodyend="281"/>
    <listofallmembers>
      <member refid="classgf_1_1_nine_patch_1a2d5b3688ff0de19f885e4b41bceeb018" prot="public" virt="non-virtual"><scope>gf::NinePatch</scope><name>commitGeometry</name></member>
      <member refid="classgf_1_1_nine_patch_1aa1294e55d739541c4e6e6dd80c7f98a5" prot="public" virt="virtual"><scope>gf::NinePatch</scope><name>draw</name></member>
      <member refid="classgf_1_1_nine_patch_1a7d4236f08395f74a0bcdf7584d024196" prot="public" virt="non-virtual"><scope>gf::NinePatch</scope><name>getColor</name></member>
      <member refid="classgf_1_1_transformable_1ae8272f770cf0acca8896f368c9c1cea5" prot="public" virt="non-virtual"><scope>gf::NinePatch</scope><name>getInverseTransform</name></member>
      <member refid="classgf_1_1_nine_patch_1a34bdc57d46326cc3f05ec770424793b0" prot="public" virt="non-virtual"><scope>gf::NinePatch</scope><name>getLocalBounds</name></member>
      <member refid="classgf_1_1_transformable_1a3737c1966237816e3b25bf60a443e327" prot="public" virt="non-virtual"><scope>gf::NinePatch</scope><name>getOrigin</name></member>
      <member refid="classgf_1_1_transformable_1a6b0278741e6f39d27d7879ba16f1f3be" prot="public" virt="non-virtual"><scope>gf::NinePatch</scope><name>getPosition</name></member>
      <member refid="classgf_1_1_transformable_1a3324b9c470c4ae376294d212c66e4f02" prot="public" virt="non-virtual"><scope>gf::NinePatch</scope><name>getRotation</name></member>
      <member refid="classgf_1_1_transformable_1a9d56ee2060eef2666f95024dc03b9c12" prot="public" virt="non-virtual"><scope>gf::NinePatch</scope><name>getScale</name></member>
      <member refid="classgf_1_1_nine_patch_1ac465fd79edcb8c43c706b3c1a8bcbbfc" prot="public" virt="non-virtual"><scope>gf::NinePatch</scope><name>getSize</name></member>
      <member refid="classgf_1_1_nine_patch_1a8a7a1a0b7c9601389815f6288c957585" prot="public" virt="non-virtual"><scope>gf::NinePatch</scope><name>getTexture</name></member>
      <member refid="classgf_1_1_nine_patch_1a593074c9d60cf882a4c2e229c179eb66" prot="public" virt="non-virtual"><scope>gf::NinePatch</scope><name>getTextureRect</name></member>
      <member refid="classgf_1_1_transformable_1aa742e95c087b0340bcff458b8872e2ea" prot="public" virt="non-virtual"><scope>gf::NinePatch</scope><name>getTransform</name></member>
      <member refid="classgf_1_1_nine_patch_1ad25d21b9c6d60e1054ad0401297a2ecd" prot="public" virt="non-virtual"><scope>gf::NinePatch</scope><name>hasTexture</name></member>
      <member refid="classgf_1_1_nine_patch_1a9faaebd4f14d2c3450b73cc589ec9607" prot="private" virt="non-virtual"><scope>gf::NinePatch</scope><name>m_bottom</name></member>
      <member refid="classgf_1_1_nine_patch_1a6ac6c7ec415bd53264a4630f5db21703" prot="private" virt="non-virtual"><scope>gf::NinePatch</scope><name>m_left</name></member>
      <member refid="classgf_1_1_nine_patch_1ab2d7f4a99bb42cacd3425639c487d4dd" prot="private" virt="non-virtual"><scope>gf::NinePatch</scope><name>m_right</name></member>
      <member refid="classgf_1_1_nine_patch_1aa98c00389b905ace49a85ebba7c2b7de" prot="private" virt="non-virtual"><scope>gf::NinePatch</scope><name>m_size</name></member>
      <member refid="classgf_1_1_nine_patch_1a9f26907341ac621eedbffb097bdb96ba" prot="private" virt="non-virtual"><scope>gf::NinePatch</scope><name>m_texture</name></member>
      <member refid="classgf_1_1_nine_patch_1abc09949dfe3d3c09eb73946ee29ec2c9" prot="private" virt="non-virtual"><scope>gf::NinePatch</scope><name>m_textureRect</name></member>
      <member refid="classgf_1_1_nine_patch_1adef3b7bf35e6be1d63cc4df3bfd86ea1" prot="private" virt="non-virtual"><scope>gf::NinePatch</scope><name>m_top</name></member>
      <member refid="classgf_1_1_nine_patch_1a72d100702c1fd5068f60d794a1045251" prot="private" virt="non-virtual"><scope>gf::NinePatch</scope><name>m_vertices</name></member>
      <member refid="classgf_1_1_transformable_1a2e576b2f64c1f8591d82e8065eae738b" prot="public" virt="non-virtual"><scope>gf::NinePatch</scope><name>move</name></member>
      <member refid="classgf_1_1_nine_patch_1ae9ddc8a13a404ede9d34238848b006ac" prot="public" virt="non-virtual"><scope>gf::NinePatch</scope><name>NinePatch</name></member>
      <member refid="classgf_1_1_nine_patch_1a4cb7631f5bfda2104e64f32e8631fac8" prot="public" virt="non-virtual"><scope>gf::NinePatch</scope><name>NinePatch</name></member>
      <member refid="classgf_1_1_nine_patch_1a730ccfae2a8b86f3583d0b9725a9ed16" prot="public" virt="non-virtual"><scope>gf::NinePatch</scope><name>NinePatch</name></member>
      <member refid="classgf_1_1_transformable_1a2957de61d2a76e9ae3c377c0aa477f53" prot="public" virt="non-virtual"><scope>gf::NinePatch</scope><name>rotate</name></member>
      <member refid="classgf_1_1_transformable_1a61953d559ea3d1eaf718304d045a250a" prot="public" virt="non-virtual"><scope>gf::NinePatch</scope><name>scale</name></member>
      <member refid="classgf_1_1_transformable_1ae9bae0ed6df111d554ce94595e2a15f1" prot="public" virt="non-virtual"><scope>gf::NinePatch</scope><name>scale</name></member>
      <member refid="classgf_1_1_nine_patch_1a8e624585bd76d7e6d6b9178a596bf820" prot="public" virt="non-virtual"><scope>gf::NinePatch</scope><name>setAnchor</name></member>
      <member refid="classgf_1_1_nine_patch_1a4911d58102df53e8bfdb25655fbadc2b" prot="public" virt="non-virtual"><scope>gf::NinePatch</scope><name>setColor</name></member>
      <member refid="classgf_1_1_nine_patch_1adc0f276c177ae2aa3850b20ed0c16f9e" prot="public" virt="non-virtual"><scope>gf::NinePatch</scope><name>setHorizontalLimits</name></member>
      <member refid="classgf_1_1_nine_patch_1aded0bd5c08ad2aec856d78678c6d2ab7" prot="public" virt="non-virtual"><scope>gf::NinePatch</scope><name>setLimits</name></member>
      <member refid="classgf_1_1_transformable_1a31bb4b55326593ea763dfdc8f12c67f4" prot="public" virt="non-virtual"><scope>gf::NinePatch</scope><name>setOrigin</name></member>
      <member refid="classgf_1_1_transformable_1a78fd003ff0412d2228764d6564d6ba69" prot="protected" virt="non-virtual"><scope>gf::NinePatch</scope><name>setOriginFromAnchorAndBounds</name></member>
      <member refid="classgf_1_1_transformable_1a1110891882093c2e8cbfc839e3300dca" prot="public" virt="non-virtual"><scope>gf::NinePatch</scope><name>setPosition</name></member>
      <member refid="classgf_1_1_transformable_1a66ef2bc90dcff50e070a6d0874b3824a" prot="public" virt="non-virtual"><scope>gf::NinePatch</scope><name>setRotation</name></member>
      <member refid="classgf_1_1_transformable_1a8c8a9bd669c0dbbd265d7188a669edb1" prot="public" virt="non-virtual"><scope>gf::NinePatch</scope><name>setScale</name></member>
      <member refid="classgf_1_1_transformable_1a642eb45044feb40084a8be341b0a8822" prot="public" virt="non-virtual"><scope>gf::NinePatch</scope><name>setScale</name></member>
      <member refid="classgf_1_1_nine_patch_1a5ffd18086f7e0a5b3dfd7b62abd8dbcd" prot="public" virt="non-virtual"><scope>gf::NinePatch</scope><name>setSize</name></member>
      <member refid="classgf_1_1_nine_patch_1ab5b90a8235e58f03c468f4610ba6263b" prot="public" virt="non-virtual"><scope>gf::NinePatch</scope><name>setTexture</name></member>
      <member refid="classgf_1_1_nine_patch_1ac070add1a1f13238cbcb19f311be722c" prot="public" virt="non-virtual"><scope>gf::NinePatch</scope><name>setTextureRect</name></member>
      <member refid="classgf_1_1_nine_patch_1a4f5e1e7fce67f4ba89e17017793b8152" prot="public" virt="non-virtual"><scope>gf::NinePatch</scope><name>setVerticalLimits</name></member>
      <member refid="classgf_1_1_transformable_1ab6b8f8feebda03222ec0858b0218a64e" prot="public" virt="non-virtual"><scope>gf::NinePatch</scope><name>Transformable</name></member>
      <member refid="classgf_1_1_nine_patch_1a1c46d77f270ee4e35d6a2fa6ff75b04c" prot="public" virt="non-virtual"><scope>gf::NinePatch</scope><name>unsetTexture</name></member>
      <member refid="classgf_1_1_nine_patch_1ab5ba9fb20d14a1ad807027c43b3372b9" prot="private" virt="non-virtual"><scope>gf::NinePatch</scope><name>updatePositions</name></member>
      <member refid="classgf_1_1_nine_patch_1a5062ff6dcd35765140865061ea761b79" prot="private" virt="non-virtual"><scope>gf::NinePatch</scope><name>updateTexCoords</name></member>
      <member refid="classgf_1_1_drawable_1a3bf0f49a1782c18e524ab0aeb0fefd7b" prot="public" virt="virtual"><scope>gf::NinePatch</scope><name>~Drawable</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
