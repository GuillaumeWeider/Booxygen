<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="classgf_1_1_logo" kind="class" language="C++" prot="public">
    <compoundname>gf::Logo</compoundname>
    <basecompoundref refid="classgf_1_1_transformable" prot="public" virt="non-virtual">gf::Transformable</basecompoundref>
    <includes refid="_logo_8h" local="no">gf/Logo.h</includes>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classgf_1_1_logo_1ac1862d9c41fc5a635bfacaf358892c0f" prot="private" static="no" mutable="no">
        <type><ref refid="classgf_1_1_texture" kindref="compound">Texture</ref></type>
        <definition>Texture gf::Logo::m_texture</definition>
        <argsstring></argsstring>
        <name>m_texture</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jbernard/Workshop/gf/versions/include/gf/Logo.h" line="78" column="1" bodyfile="/home/jbernard/Workshop/gf/versions/include/gf/Logo.h" bodystart="78" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classgf_1_1_logo_1a31652cd2e940d63b5e37225175cfbd87" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>gf::Logo::Logo</definition>
        <argsstring>()</argsstring>
        <name>Logo</name>
        <briefdescription>
<para>Constructor. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jbernard/Workshop/gf/versions/include/gf/Logo.h" line="48" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classgf_1_1_logo_1a78fe7be6a9410d593e8f1a688112ba69" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__core_1gac3887a7df16895871374b04d9f6cb961" kindref="member">RectF</ref></type>
        <definition>RectF gf::Logo::getLocalBounds</definition>
        <argsstring>() const</argsstring>
        <name>getLocalBounds</name>
        <briefdescription>
<para>Get the local bounding rectangle of the entity. </para>        </briefdescription>
        <detaileddescription>
<para>The returned rectangle is in local coordinates, which means that it ignores the transformations (translation, rotation, scale, ...) that are applied to the entity. In other words, this function returns the bounds of the entity in the entity&apos;s coordinate system.</para><para><simplesect kind="return"><para>Local bounding rectangle of the entity </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jbernard/Workshop/gf/versions/include/gf/Logo.h" line="61" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classgf_1_1_logo_1a40ae29bcd2d626f4f353c977f7816f45" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void gf::Logo::setAnchor</definition>
        <argsstring>(Anchor anchor)</argsstring>
        <name>setAnchor</name>
        <param>
          <type><ref refid="group__graphics_1gadeb9cdf9d7e8eec2eb8cc638c54b5066" kindref="member">Anchor</ref></type>
          <declname>anchor</declname>
        </param>
        <briefdescription>
<para>Set the anchor origin of the entity. </para>        </briefdescription>
        <detaileddescription>
<para>Compute the origin of the entity based on the local bounds and the specified anchor. Internally, this function calls <computeroutput><ref refid="classgf_1_1_transformable_1a31bb4b55326593ea763dfdc8f12c67f4" kindref="member">Transformable::setOrigin()</ref></computeroutput>.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>anchor</parametername>
</parameternamelist>
<parameterdescription>
<para>The anchor of the entity </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="see"><para><ref refid="classgf_1_1_logo_1a78fe7be6a9410d593e8f1a688112ba69" kindref="member">getLocalBounds()</ref>, <ref refid="classgf_1_1_transformable_1a31bb4b55326593ea763dfdc8f12c67f4" kindref="member">Transformable::setOrigin()</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jbernard/Workshop/gf/versions/include/gf/Logo.h" line="73" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classgf_1_1_logo_1ab00b287fa43c907c6bde64ca63932265" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>virtual void gf::Logo::draw</definition>
        <argsstring>(RenderTarget &amp;target, RenderStates states) override</argsstring>
        <name>draw</name>
        <reimplements refid="classgf_1_1_drawable_1a01535a84e4fb6222311ceb81accc4a27">draw</reimplements>
        <param>
          <type><ref refid="classgf_1_1_render_target" kindref="compound">RenderTarget</ref> &amp;</type>
          <declname>target</declname>
        </param>
        <param>
          <type><ref refid="structgf_1_1_render_states" kindref="compound">RenderStates</ref></type>
          <declname>states</declname>
        </param>
        <briefdescription>
<para>Draw the object to a render target. </para>        </briefdescription>
        <detaileddescription>
<para>This is a pure virtual function that has to be implemented by the derived class to define how the drawable should be drawn.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>target</parametername>
</parameternamelist>
<parameterdescription>
<para>Render target to draw to </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>states</parametername>
</parameternamelist>
<parameterdescription>
<para>Current render states </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jbernard/Workshop/gf/versions/include/gf/Logo.h" line="75" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>The <computeroutput>gf</computeroutput> logo. </para>    </briefdescription>
    <detaileddescription>
<para>This class can show the <computeroutput>gf</computeroutput> logo without loading any font. It is loaded in a texture in the constructor so that you can use it wherever you want.</para><para>If you use <computeroutput>gf</computeroutput> and like it, do not hesitate to show this logo in your game, e.g. on the splash screen. Of course, it is <emphasis>not</emphasis> mandatory. </para>    </detaileddescription>
    <inheritancegraph>
      <node id="439">
        <label>gf::Logo</label>
        <link refid="classgf_1_1_logo"/>
        <childnode refid="440" relation="public-inheritance">
        </childnode>
      </node>
      <node id="441">
        <label>gf::Drawable</label>
        <link refid="classgf_1_1_drawable"/>
      </node>
      <node id="440">
        <label>gf::Transformable</label>
        <link refid="classgf_1_1_transformable"/>
        <childnode refid="441" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="442">
        <label>gf::Logo</label>
        <link refid="classgf_1_1_logo"/>
        <childnode refid="443" relation="public-inheritance">
        </childnode>
      </node>
      <node id="444">
        <label>gf::Drawable</label>
        <link refid="classgf_1_1_drawable"/>
      </node>
      <node id="443">
        <label>gf::Transformable</label>
        <link refid="classgf_1_1_transformable"/>
        <childnode refid="444" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="/home/jbernard/Workshop/gf/versions/include/gf/Logo.h" line="43" column="1" bodyfile="/home/jbernard/Workshop/gf/versions/include/gf/Logo.h" bodystart="43" bodyend="79"/>
    <listofallmembers>
      <member refid="classgf_1_1_logo_1ab00b287fa43c907c6bde64ca63932265" prot="public" virt="virtual"><scope>gf::Logo</scope><name>draw</name></member>
      <member refid="classgf_1_1_transformable_1ae8272f770cf0acca8896f368c9c1cea5" prot="public" virt="non-virtual"><scope>gf::Logo</scope><name>getInverseTransform</name></member>
      <member refid="classgf_1_1_logo_1a78fe7be6a9410d593e8f1a688112ba69" prot="public" virt="non-virtual"><scope>gf::Logo</scope><name>getLocalBounds</name></member>
      <member refid="classgf_1_1_transformable_1a3737c1966237816e3b25bf60a443e327" prot="public" virt="non-virtual"><scope>gf::Logo</scope><name>getOrigin</name></member>
      <member refid="classgf_1_1_transformable_1a6b0278741e6f39d27d7879ba16f1f3be" prot="public" virt="non-virtual"><scope>gf::Logo</scope><name>getPosition</name></member>
      <member refid="classgf_1_1_transformable_1a3324b9c470c4ae376294d212c66e4f02" prot="public" virt="non-virtual"><scope>gf::Logo</scope><name>getRotation</name></member>
      <member refid="classgf_1_1_transformable_1a9d56ee2060eef2666f95024dc03b9c12" prot="public" virt="non-virtual"><scope>gf::Logo</scope><name>getScale</name></member>
      <member refid="classgf_1_1_transformable_1aa742e95c087b0340bcff458b8872e2ea" prot="public" virt="non-virtual"><scope>gf::Logo</scope><name>getTransform</name></member>
      <member refid="classgf_1_1_logo_1a31652cd2e940d63b5e37225175cfbd87" prot="public" virt="non-virtual"><scope>gf::Logo</scope><name>Logo</name></member>
      <member refid="classgf_1_1_logo_1ac1862d9c41fc5a635bfacaf358892c0f" prot="private" virt="non-virtual"><scope>gf::Logo</scope><name>m_texture</name></member>
      <member refid="classgf_1_1_transformable_1a2e576b2f64c1f8591d82e8065eae738b" prot="public" virt="non-virtual"><scope>gf::Logo</scope><name>move</name></member>
      <member refid="classgf_1_1_transformable_1a2957de61d2a76e9ae3c377c0aa477f53" prot="public" virt="non-virtual"><scope>gf::Logo</scope><name>rotate</name></member>
      <member refid="classgf_1_1_transformable_1a61953d559ea3d1eaf718304d045a250a" prot="public" virt="non-virtual"><scope>gf::Logo</scope><name>scale</name></member>
      <member refid="classgf_1_1_transformable_1ae9bae0ed6df111d554ce94595e2a15f1" prot="public" virt="non-virtual"><scope>gf::Logo</scope><name>scale</name></member>
      <member refid="classgf_1_1_logo_1a40ae29bcd2d626f4f353c977f7816f45" prot="public" virt="non-virtual"><scope>gf::Logo</scope><name>setAnchor</name></member>
      <member refid="classgf_1_1_transformable_1a31bb4b55326593ea763dfdc8f12c67f4" prot="public" virt="non-virtual"><scope>gf::Logo</scope><name>setOrigin</name></member>
      <member refid="classgf_1_1_transformable_1a78fd003ff0412d2228764d6564d6ba69" prot="protected" virt="non-virtual"><scope>gf::Logo</scope><name>setOriginFromAnchorAndBounds</name></member>
      <member refid="classgf_1_1_transformable_1a1110891882093c2e8cbfc839e3300dca" prot="public" virt="non-virtual"><scope>gf::Logo</scope><name>setPosition</name></member>
      <member refid="classgf_1_1_transformable_1a66ef2bc90dcff50e070a6d0874b3824a" prot="public" virt="non-virtual"><scope>gf::Logo</scope><name>setRotation</name></member>
      <member refid="classgf_1_1_transformable_1a8c8a9bd669c0dbbd265d7188a669edb1" prot="public" virt="non-virtual"><scope>gf::Logo</scope><name>setScale</name></member>
      <member refid="classgf_1_1_transformable_1a642eb45044feb40084a8be341b0a8822" prot="public" virt="non-virtual"><scope>gf::Logo</scope><name>setScale</name></member>
      <member refid="classgf_1_1_transformable_1ab6b8f8feebda03222ec0858b0218a64e" prot="public" virt="non-virtual"><scope>gf::Logo</scope><name>Transformable</name></member>
      <member refid="classgf_1_1_drawable_1a3bf0f49a1782c18e524ab0aeb0fefd7b" prot="public" virt="virtual"><scope>gf::Logo</scope><name>~Drawable</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
