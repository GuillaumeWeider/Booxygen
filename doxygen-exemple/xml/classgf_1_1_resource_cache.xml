<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="classgf_1_1_resource_cache" kind="class" language="C++" prot="public">
    <compoundname>gf::ResourceCache</compoundname>
    <includes refid="_resource_manager_8h" local="no">gf/ResourceManager.h</includes>
    <templateparamlist>
      <param>
        <type>typename</type>
        <declname>T</declname>
        <defname>T</defname>
      </param>
    </templateparamlist>
      <sectiondef kind="public-type">
      <memberdef kind="typedef" id="classgf_1_1_resource_cache_1ab8fb813d1b9dd8671a4f679e27393a16" prot="public" static="no">
        <type>std::function&lt; std::unique_ptr&lt; <ref refid="group__window_1gga795d7d5e2f2a4f38b16b95e0e78cb626ab9ece18c950afbfa6b0fdbfa4ff731d3" kindref="member">T</ref> &gt;(const <ref refid="group__core_1ga6788e40b762777c1081f796076116a02" kindref="member">Path</ref> &amp;)&gt;</type>
        <definition>using gf::ResourceCache&lt; T &gt;::Loader =  std::function&lt;std::unique_ptr&lt;T&gt;(const Path&amp;)&gt;</definition>
        <argsstring></argsstring>
        <name>Loader</name>
        <briefdescription>
<para>A resource loader. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jbernard/Workshop/gf/versions/include/gf/ResourceManager.h" line="54" column="1" bodyfile="/home/jbernard/Workshop/gf/versions/include/gf/ResourceManager.h" bodystart="54" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classgf_1_1_resource_cache_1a553cfe72305465dcfda72db012184219" prot="private" static="no" mutable="no">
        <type><ref refid="classgf_1_1_resource_cache_1ab8fb813d1b9dd8671a4f679e27393a16" kindref="member">Loader</ref></type>
        <definition>Loader gf::ResourceCache&lt; T &gt;::m_loader</definition>
        <argsstring></argsstring>
        <name>m_loader</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jbernard/Workshop/gf/versions/include/gf/ResourceManager.h" line="120" column="1" bodyfile="/home/jbernard/Workshop/gf/versions/include/gf/ResourceManager.h" bodystart="120" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classgf_1_1_resource_cache_1a2843ca3c8fddb03d334c9221443673ab" prot="private" static="no" mutable="no">
        <type>std::map&lt; std::size_t, std::unique_ptr&lt; <ref refid="group__window_1gga795d7d5e2f2a4f38b16b95e0e78cb626ab9ece18c950afbfa6b0fdbfa4ff731d3" kindref="member">T</ref> &gt; &gt;</type>
        <definition>std::map&lt;std::size_t, std::unique_ptr&lt;T&gt; &gt; gf::ResourceCache&lt; T &gt;::m_cache</definition>
        <argsstring></argsstring>
        <name>m_cache</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jbernard/Workshop/gf/versions/include/gf/ResourceManager.h" line="121" column="1" bodyfile="/home/jbernard/Workshop/gf/versions/include/gf/ResourceManager.h" bodystart="121" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classgf_1_1_resource_cache_1a9e2b4b3662262b0cd0d0da272808bf10" prot="public" static="no" const="no" explicit="yes" inline="yes" virt="non-virtual">
        <type></type>
        <definition>gf::ResourceCache&lt; T &gt;::ResourceCache</definition>
        <argsstring>(Loader loader)</argsstring>
        <name>ResourceCache</name>
        <param>
          <type><ref refid="classgf_1_1_resource_cache_1ab8fb813d1b9dd8671a4f679e27393a16" kindref="member">Loader</ref></type>
          <declname>loader</declname>
        </param>
        <briefdescription>
<para>Constructor. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>loader</parametername>
</parameternamelist>
<parameterdescription>
<para>A resource loader </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jbernard/Workshop/gf/versions/include/gf/ResourceManager.h" line="61" column="1" bodyfile="/home/jbernard/Workshop/gf/versions/include/gf/ResourceManager.h" bodystart="61" bodyend="65"/>
      </memberdef>
      <memberdef kind="function" id="classgf_1_1_resource_cache_1ac0d6a9390055e0a25b03ae2882828515" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>gf::ResourceCache&lt; T &gt;::ResourceCache</definition>
        <argsstring>(const ResourceCache &amp;)=delete</argsstring>
        <name>ResourceCache</name>
        <param>
          <type>const <ref refid="classgf_1_1_resource_cache" kindref="compound">ResourceCache</ref> &amp;</type>
        </param>
        <briefdescription>
<para>Deleted copy constructor. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jbernard/Workshop/gf/versions/include/gf/ResourceManager.h" line="70" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classgf_1_1_resource_cache_1a424acc0ac295931a4f9c0288fac3285c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classgf_1_1_resource_cache" kindref="compound">ResourceCache</ref> &amp;</type>
        <definition>ResourceCache&amp; gf::ResourceCache&lt; T &gt;::operator=</definition>
        <argsstring>(const ResourceCache &amp;)=delete</argsstring>
        <name>operator=</name>
        <param>
          <type>const <ref refid="classgf_1_1_resource_cache" kindref="compound">ResourceCache</ref> &amp;</type>
        </param>
        <briefdescription>
<para>Deleted copy assignment. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jbernard/Workshop/gf/versions/include/gf/ResourceManager.h" line="75" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classgf_1_1_resource_cache_1afc64c48af73afc76e16ffb0fb86d0d89" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="group__window_1gga795d7d5e2f2a4f38b16b95e0e78cb626ab9ece18c950afbfa6b0fdbfa4ff731d3" kindref="member">T</ref> &amp;</type>
        <definition>T&amp; gf::ResourceCache&lt; T &gt;::getResource</definition>
        <argsstring>(AssetManager &amp;assetManager, const Path &amp;filename)</argsstring>
        <name>getResource</name>
        <param>
          <type><ref refid="classgf_1_1_asset_manager" kindref="compound">AssetManager</ref> &amp;</type>
          <declname>assetManager</declname>
        </param>
        <param>
          <type>const <ref refid="group__core_1ga6788e40b762777c1081f796076116a02" kindref="member">Path</ref> &amp;</type>
          <declname>filename</declname>
        </param>
        <briefdescription>
<para>Get a resource. </para>        </briefdescription>
        <detaileddescription>
<para>If the resource exists in the cache, it is returned immediately. Otherwise, it is searched thanks to an asset manager and put in the cache. If the resource is not found, an exception is thrown.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>assetManager</parametername>
</parameternamelist>
<parameterdescription>
<para>An asset manager </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>filename</parametername>
</parameternamelist>
<parameterdescription>
<para>The filename of the resource </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>A reference to the resource </para></simplesect>
<parameterlist kind="exception"><parameteritem>
<parameternamelist>
<parametername>std::runtime_error</parametername>
</parameternamelist>
<parameterdescription>
<para>If the resource is not found </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jbernard/Workshop/gf/versions/include/gf/ResourceManager.h" line="89" column="1" bodyfile="/home/jbernard/Workshop/gf/versions/include/gf/ResourceManager.h" bodystart="89" bodyend="117"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>A generic cache for resources. </para>    </briefdescription>
    <detaileddescription>
<para>This function is a low-level class that is used in <ref refid="classgf_1_1_resource_manager" kindref="compound">gf::ResourceManager</ref>. It is generic enough so that you can use it for your own purpose.</para><para><simplesect kind="see"><para><ref refid="classgf_1_1_resource_manager" kindref="compound">gf::ResourceManager</ref> </para></simplesect>
</para>    </detaileddescription>
    <location file="/home/jbernard/Workshop/gf/versions/include/gf/ResourceManager.h" line="49" column="1" bodyfile="/home/jbernard/Workshop/gf/versions/include/gf/ResourceManager.h" bodystart="49" bodyend="122"/>
    <listofallmembers>
      <member refid="classgf_1_1_resource_cache_1afc64c48af73afc76e16ffb0fb86d0d89" prot="public" virt="non-virtual"><scope>gf::ResourceCache</scope><name>getResource</name></member>
      <member refid="classgf_1_1_resource_cache_1ab8fb813d1b9dd8671a4f679e27393a16" prot="public" virt="non-virtual"><scope>gf::ResourceCache</scope><name>Loader</name></member>
      <member refid="classgf_1_1_resource_cache_1a2843ca3c8fddb03d334c9221443673ab" prot="private" virt="non-virtual"><scope>gf::ResourceCache</scope><name>m_cache</name></member>
      <member refid="classgf_1_1_resource_cache_1a553cfe72305465dcfda72db012184219" prot="private" virt="non-virtual"><scope>gf::ResourceCache</scope><name>m_loader</name></member>
      <member refid="classgf_1_1_resource_cache_1a424acc0ac295931a4f9c0288fac3285c" prot="public" virt="non-virtual"><scope>gf::ResourceCache</scope><name>operator=</name></member>
      <member refid="classgf_1_1_resource_cache_1a9e2b4b3662262b0cd0d0da272808bf10" prot="public" virt="non-virtual"><scope>gf::ResourceCache</scope><name>ResourceCache</name></member>
      <member refid="classgf_1_1_resource_cache_1ac0d6a9390055e0a25b03ae2882828515" prot="public" virt="non-virtual"><scope>gf::ResourceCache</scope><name>ResourceCache</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
