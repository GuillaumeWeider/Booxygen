<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="_shader_8h" kind="file" language="C++">
    <compoundname>Shader.h</compoundname>
    <includes local="no">string</includes>
    <includes local="no">map</includes>
    <includes refid="_matrix_8h" local="yes">Matrix.h</includes>
    <includes refid="_path_8h" local="yes">Path.h</includes>
    <includes refid="_portability_8h" local="yes">Portability.h</includes>
    <includes refid="_string_ref_8h" local="yes">StringRef.h</includes>
    <includes refid="_texture_8h" local="yes">Texture.h</includes>
    <includes refid="_vector_8h" local="yes">Vector.h</includes>
    <includedby refid="_effect_8h" local="yes">Effect.h</includedby>
    <includedby refid="_render_target_8h" local="yes">RenderTarget.h</includedby>
    <includedby refid="_g_f_8h" local="yes">GF.h</includedby>
    <incdepgraph>
      <node id="1910">
        <label>boost/functional/hash.hpp</label>
      </node>
      <node id="1908">
        <label>Path.h</label>
        <link refid="_path_8h_source"/>
        <childnode refid="1909" relation="include">
        </childnode>
        <childnode refid="1910" relation="include">
        </childnode>
      </node>
      <node id="1905">
        <label>cstdint</label>
      </node>
      <node id="1903">
        <label>Portability.h</label>
        <link refid="_portability_8h_source"/>
      </node>
      <node id="1898">
        <label>string</label>
      </node>
      <node id="1899">
        <label>map</label>
      </node>
      <node id="1904">
        <label>Vector.h</label>
        <link refid="_vector_8h_source"/>
        <childnode refid="1901" relation="include">
        </childnode>
        <childnode refid="1905" relation="include">
        </childnode>
        <childnode refid="1902" relation="include">
        </childnode>
        <childnode refid="1906" relation="include">
        </childnode>
        <childnode refid="1907" relation="include">
        </childnode>
        <childnode refid="1903" relation="include">
        </childnode>
      </node>
      <node id="1897">
        <label>Shader.h</label>
        <link refid="_shader_8h"/>
        <childnode refid="1898" relation="include">
        </childnode>
        <childnode refid="1899" relation="include">
        </childnode>
        <childnode refid="1900" relation="include">
        </childnode>
        <childnode refid="1908" relation="include">
        </childnode>
        <childnode refid="1903" relation="include">
        </childnode>
        <childnode refid="1911" relation="include">
        </childnode>
        <childnode refid="1913" relation="include">
        </childnode>
        <childnode refid="1904" relation="include">
        </childnode>
      </node>
      <node id="1909">
        <label>boost/filesystem.hpp</label>
      </node>
      <node id="1911">
        <label>StringRef.h</label>
        <link refid="_string_ref_8h_source"/>
        <childnode refid="1912" relation="include">
        </childnode>
        <childnode refid="1898" relation="include">
        </childnode>
      </node>
      <node id="1900">
        <label>Matrix.h</label>
        <link refid="_matrix_8h_source"/>
        <childnode refid="1901" relation="include">
        </childnode>
        <childnode refid="1902" relation="include">
        </childnode>
        <childnode refid="1903" relation="include">
        </childnode>
        <childnode refid="1904" relation="include">
        </childnode>
      </node>
      <node id="1901">
        <label>cstddef</label>
      </node>
      <node id="1913">
        <label>Texture.h</label>
        <link refid="_texture_8h_source"/>
        <childnode refid="1905" relation="include">
        </childnode>
        <childnode refid="1908" relation="include">
        </childnode>
        <childnode refid="1903" relation="include">
        </childnode>
        <childnode refid="1914" relation="include">
        </childnode>
        <childnode refid="1904" relation="include">
        </childnode>
      </node>
      <node id="1907">
        <label>type_traits</label>
      </node>
      <node id="1902">
        <label>algorithm</label>
      </node>
      <node id="1912">
        <label>cstring</label>
      </node>
      <node id="1914">
        <label>Rect.h</label>
        <link refid="_rect_8h_source"/>
        <childnode refid="1901" relation="include">
        </childnode>
        <childnode refid="1902" relation="include">
        </childnode>
        <childnode refid="1903" relation="include">
        </childnode>
        <childnode refid="1904" relation="include">
        </childnode>
      </node>
      <node id="1906">
        <label>initializer_list</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="1916">
        <label>Effect.h</label>
        <link refid="_effect_8h_source"/>
        <childnode refid="1917" relation="include">
        </childnode>
        <childnode refid="1918" relation="include">
        </childnode>
      </node>
      <node id="1919">
        <label>RenderPipeline.h</label>
        <link refid="_render_pipeline_8h_source"/>
        <childnode refid="1918" relation="include">
        </childnode>
      </node>
      <node id="1920">
        <label>RenderTarget.h</label>
        <link refid="_render_target_8h_source"/>
        <childnode refid="1919" relation="include">
        </childnode>
        <childnode refid="1918" relation="include">
        </childnode>
        <childnode refid="1921" relation="include">
        </childnode>
        <childnode refid="1922" relation="include">
        </childnode>
      </node>
      <node id="1921">
        <label>RenderTexture.h</label>
        <link refid="_render_texture_8h_source"/>
        <childnode refid="1918" relation="include">
        </childnode>
      </node>
      <node id="1915">
        <label>Shader.h</label>
        <link refid="_shader_8h"/>
        <childnode refid="1916" relation="include">
        </childnode>
        <childnode refid="1920" relation="include">
        </childnode>
        <childnode refid="1918" relation="include">
        </childnode>
      </node>
      <node id="1917">
        <label>Effects.h</label>
        <link refid="_effects_8h_source"/>
        <childnode refid="1918" relation="include">
        </childnode>
        <childnode refid="1919" relation="include">
        </childnode>
      </node>
      <node id="1918">
        <label>GF.h</label>
        <link refid="_g_f_8h_source"/>
      </node>
      <node id="1922">
        <label>RenderWindow.h</label>
        <link refid="_render_window_8h_source"/>
        <childnode refid="1918" relation="include">
        </childnode>
      </node>
    </invincdepgraph>
    <innerclass refid="classgf_1_1_shader" prot="public">gf::Shader</innerclass>
    <innernamespace refid="namespacegf">gf</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/>*<sp/>Gamedev<sp/>Framework<sp/>(gf)</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/>*<sp/>Copyright<sp/>(C)<sp/>2016-2017<sp/>Julien<sp/>Bernard</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>*<sp/>This<sp/>software<sp/>is<sp/>provided<sp/>&apos;as-is&apos;,<sp/>without<sp/>any<sp/>express<sp/>or<sp/>implied</highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/>*<sp/>warranty.<sp/><sp/>In<sp/>no<sp/>event<sp/>will<sp/>the<sp/>authors<sp/>be<sp/>held<sp/>liable<sp/>for<sp/>any<sp/>damages</highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/>*<sp/>arising<sp/>from<sp/>the<sp/>use<sp/>of<sp/>this<sp/>software.</highlight></codeline>
<codeline lineno="8"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="9"><highlight class="comment"><sp/>*<sp/>Permission<sp/>is<sp/>granted<sp/>to<sp/>anyone<sp/>to<sp/>use<sp/>this<sp/>software<sp/>for<sp/>any<sp/>purpose,</highlight></codeline>
<codeline lineno="10"><highlight class="comment"><sp/>*<sp/>including<sp/>commercial<sp/>applications,<sp/>and<sp/>to<sp/>alter<sp/>it<sp/>and<sp/>redistribute<sp/>it</highlight></codeline>
<codeline lineno="11"><highlight class="comment"><sp/>*<sp/>freely,<sp/>subject<sp/>to<sp/>the<sp/>following<sp/>restrictions:</highlight></codeline>
<codeline lineno="12"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="13"><highlight class="comment"><sp/>*<sp/>1.<sp/>The<sp/>origin<sp/>of<sp/>this<sp/>software<sp/>must<sp/>not<sp/>be<sp/>misrepresented;<sp/>you<sp/>must<sp/>not</highlight></codeline>
<codeline lineno="14"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/>claim<sp/>that<sp/>you<sp/>wrote<sp/>the<sp/>original<sp/>software.<sp/>If<sp/>you<sp/>use<sp/>this<sp/>software</highlight></codeline>
<codeline lineno="15"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/>in<sp/>a<sp/>product,<sp/>an<sp/>acknowledgment<sp/>in<sp/>the<sp/>product<sp/>documentation<sp/>would<sp/>be</highlight></codeline>
<codeline lineno="16"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/>appreciated<sp/>but<sp/>is<sp/>not<sp/>required.</highlight></codeline>
<codeline lineno="17"><highlight class="comment"><sp/>*<sp/>2.<sp/>Altered<sp/>source<sp/>versions<sp/>must<sp/>be<sp/>plainly<sp/>marked<sp/>as<sp/>such,<sp/>and<sp/>must<sp/>not<sp/>be</highlight></codeline>
<codeline lineno="18"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/>misrepresented<sp/>as<sp/>being<sp/>the<sp/>original<sp/>software.</highlight></codeline>
<codeline lineno="19"><highlight class="comment"><sp/>*<sp/>3.<sp/>This<sp/>notice<sp/>may<sp/>not<sp/>be<sp/>removed<sp/>or<sp/>altered<sp/>from<sp/>any<sp/>source<sp/>distribution.</highlight></codeline>
<codeline lineno="20"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="21"><highlight class="comment"><sp/>*<sp/>Part<sp/>of<sp/>this<sp/>file<sp/>comes<sp/>from<sp/>SFML,<sp/>with<sp/>the<sp/>same<sp/>license:</highlight></codeline>
<codeline lineno="22"><highlight class="comment"><sp/>*<sp/>Copyright<sp/>(C)<sp/>2007-2015<sp/>Laurent<sp/>Gomila<sp/>(laurent@sfml-dev.org)</highlight></codeline>
<codeline lineno="23"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>GF_SHADER_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>GF_SHADER_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;string&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;map&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;Matrix.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;Path.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;Portability.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;StringRef.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;Texture.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;Vector.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespacegf" kindref="compound">gf</ref><sp/>{</highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>DOXYGEN_SHOULD_SKIP_THIS</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">v1<sp/>{</highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">InputStream;</highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight></codeline>
<codeline lineno="120" refid="classgf_1_1_shader" refkind="compound"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">GF_API<sp/><ref refid="classgf_1_1_shader" kindref="compound">Shader</ref><sp/>{</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="125" refid="classgf_1_1_shader_1a5478f3e7a221048427bae061d0576227" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/><ref refid="classgf_1_1_shader_1a5478f3e7a221048427bae061d0576227" kindref="member">Type</ref><sp/>{</highlight></codeline>
<codeline lineno="126" refid="classgf_1_1_shader_1a5478f3e7a221048427bae061d0576227abd13198f949b8b612939dba17ddace08" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classgf_1_1_shader_1a5478f3e7a221048427bae061d0576227abd13198f949b8b612939dba17ddace08" kindref="member">Vertex</ref>,<sp/><sp/><sp/></highlight></codeline>
<codeline lineno="127" refid="classgf_1_1_shader_1a5478f3e7a221048427bae061d0576227a582ea2a544a29dcf181fd3ac837b5199" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classgf_1_1_shader_1a5478f3e7a221048427bae061d0576227a582ea2a544a29dcf181fd3ac837b5199" kindref="member">Fragment</ref>,<sp/></highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="129"><highlight class="normal"></highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classgf_1_1_shader" kindref="compound">Shader</ref>();</highlight></codeline>
<codeline lineno="136"><highlight class="normal"></highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/>~<ref refid="classgf_1_1_shader" kindref="compound">Shader</ref>();</highlight></codeline>
<codeline lineno="141"><highlight class="normal"></highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classgf_1_1_shader" kindref="compound">Shader</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classgf_1_1_shader" kindref="compound">Shader</ref>&amp;)<sp/>=<sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="146"><highlight class="normal"></highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classgf_1_1_shader" kindref="compound">Shader</ref>&amp;<sp/>operator=(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classgf_1_1_shader" kindref="compound">Shader</ref>&amp;)<sp/>=<sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="151"><highlight class="normal"></highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>loadFromFile(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="group__core_1ga6788e40b762777c1081f796076116a02" kindref="member">Path</ref>&amp;<sp/>filename,<sp/><ref refid="classgf_1_1_shader_1a5478f3e7a221048427bae061d0576227" kindref="member">Type</ref><sp/>type);</highlight></codeline>
<codeline lineno="177"><highlight class="normal"></highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>loadFromFile(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="group__core_1ga6788e40b762777c1081f796076116a02" kindref="member">Path</ref>&amp;<sp/>vertexShaderFilename,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="group__core_1ga6788e40b762777c1081f796076116a02" kindref="member">Path</ref>&amp;<sp/>fragmentShaderFilename);</highlight></codeline>
<codeline lineno="199"><highlight class="normal"></highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>loadFromMemory(<ref refid="classgf_1_1_string_ref" kindref="compound">StringRef</ref><sp/>shader,<sp/><ref refid="classgf_1_1_shader_1a5478f3e7a221048427bae061d0576227" kindref="member">Type</ref><sp/>type);</highlight></codeline>
<codeline lineno="219"><highlight class="normal"></highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>loadFromMemory(<ref refid="classgf_1_1_string_ref" kindref="compound">StringRef</ref><sp/>vertexShader,<sp/><ref refid="classgf_1_1_string_ref" kindref="compound">StringRef</ref><sp/>fragmentShader);</highlight></codeline>
<codeline lineno="241"><highlight class="normal"></highlight></codeline>
<codeline lineno="242"><highlight class="normal"></highlight></codeline>
<codeline lineno="261"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>loadFromStream(<ref refid="classgf_1_1_input_stream" kindref="compound">InputStream</ref>&amp;<sp/>stream,<sp/><ref refid="classgf_1_1_shader_1a5478f3e7a221048427bae061d0576227" kindref="member">Type</ref><sp/>type);</highlight></codeline>
<codeline lineno="262"><highlight class="normal"></highlight></codeline>
<codeline lineno="282"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>loadFromStream(<ref refid="classgf_1_1_input_stream" kindref="compound">InputStream</ref>&amp;<sp/>vertexShaderStream,<sp/><ref refid="classgf_1_1_input_stream" kindref="compound">InputStream</ref>&amp;<sp/>fragmentShaderStream);</highlight></codeline>
<codeline lineno="283"><highlight class="normal"></highlight></codeline>
<codeline lineno="297"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>setUniform(<ref refid="classgf_1_1_string_ref" kindref="compound">StringRef</ref><sp/>name,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>val);</highlight></codeline>
<codeline lineno="298"><highlight class="normal"></highlight></codeline>
<codeline lineno="305"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>setUniform(<ref refid="classgf_1_1_string_ref" kindref="compound">StringRef</ref><sp/>name,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>val);</highlight></codeline>
<codeline lineno="306"><highlight class="normal"></highlight></codeline>
<codeline lineno="313"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>setUniform(<ref refid="classgf_1_1_string_ref" kindref="compound">StringRef</ref><sp/>name,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structgf_1_1_vector" kindref="compound">Vector2f</ref>&amp;<sp/>vec);</highlight></codeline>
<codeline lineno="314"><highlight class="normal"></highlight></codeline>
<codeline lineno="321"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>setUniform(<ref refid="classgf_1_1_string_ref" kindref="compound">StringRef</ref><sp/>name,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structgf_1_1_vector" kindref="compound">Vector3f</ref>&amp;<sp/>vec);</highlight></codeline>
<codeline lineno="322"><highlight class="normal"></highlight></codeline>
<codeline lineno="329"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>setUniform(<ref refid="classgf_1_1_string_ref" kindref="compound">StringRef</ref><sp/>name,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structgf_1_1_vector" kindref="compound">Vector4f</ref>&amp;<sp/>vec);</highlight></codeline>
<codeline lineno="330"><highlight class="normal"></highlight></codeline>
<codeline lineno="337"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>setUniform(<ref refid="classgf_1_1_string_ref" kindref="compound">StringRef</ref><sp/>name,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structgf_1_1_matrix" kindref="compound">Matrix3f</ref>&amp;<sp/>mat);</highlight></codeline>
<codeline lineno="338"><highlight class="normal"></highlight></codeline>
<codeline lineno="345"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>setUniform(<ref refid="classgf_1_1_string_ref" kindref="compound">StringRef</ref><sp/>name,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structgf_1_1_matrix" kindref="compound">Matrix4f</ref>&amp;<sp/>mat);</highlight></codeline>
<codeline lineno="346"><highlight class="normal"></highlight></codeline>
<codeline lineno="373"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>setUniform(<ref refid="classgf_1_1_string_ref" kindref="compound">StringRef</ref><sp/>name,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classgf_1_1_bare_texture" kindref="compound">BareTexture</ref>&amp;<sp/>tex);</highlight></codeline>
<codeline lineno="374"><highlight class="normal"></highlight></codeline>
<codeline lineno="385"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>bind(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classgf_1_1_shader" kindref="compound">Shader</ref><sp/>*shader);</highlight></codeline>
<codeline lineno="386"><highlight class="normal"></highlight></codeline>
<codeline lineno="387"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="388" refid="classgf_1_1_shader_1aa5afc6f82b7b587ed5ada4d227ce32aa" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">friend</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classgf_1_1_render_target" kindref="compound">RenderTarget</ref>;</highlight></codeline>
<codeline lineno="389"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>compile(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*vertexShaderCode,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*fragmentShaderCode);</highlight></codeline>
<codeline lineno="390"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>getUniformLocation(<ref refid="classgf_1_1_string_ref" kindref="compound">StringRef</ref><sp/>name);</highlight></codeline>
<codeline lineno="391"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>getAttributeLocation(<ref refid="classgf_1_1_string_ref" kindref="compound">StringRef</ref><sp/>name);</highlight></codeline>
<codeline lineno="392"><highlight class="normal"></highlight></codeline>
<codeline lineno="393"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">Guard;</highlight></codeline>
<codeline lineno="394"><highlight class="normal"></highlight></codeline>
<codeline lineno="395"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="396"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>m_program;</highlight></codeline>
<codeline lineno="397"><highlight class="normal"></highlight></codeline>
<codeline lineno="398"><highlight class="normal"><sp/><sp/><sp/><sp/>std::map&lt;int,<sp/>const<sp/>BareTexture<sp/>*&gt;<sp/>m_textures;</highlight></codeline>
<codeline lineno="399"><highlight class="normal"><sp/><sp/>};</highlight></codeline>
<codeline lineno="400"><highlight class="normal"></highlight></codeline>
<codeline lineno="401"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>DOXYGEN_SHOULD_SKIP_THIS</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="402"><highlight class="normal">}</highlight></codeline>
<codeline lineno="403"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="404"><highlight class="normal">}</highlight></codeline>
<codeline lineno="405"><highlight class="normal"></highlight></codeline>
<codeline lineno="406"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/>//<sp/>GF_SHADER_H</highlight></codeline>
    </programlisting>
    <location file="/home/jbernard/Workshop/gf/versions/include/gf/Shader.h"/>
  </compounddef>
</doxygen>
